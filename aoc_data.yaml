2022:
  1:
    answers:
      part1:
        correct: '70509'
        wrong: []
      part2:
        correct: '208567'
        wrong: []
    input: '5557

      6663

      3952

      4750

      2271

      6653

      4406

      4256

      6871

      6720

      6248

      4518

      4987


      3931

      8484

      8418

      7221

      6057

      7458

      7336

      8299

      5058


      7862

      4603

      4837

      5209

      1427

      3766

      4454

      3664

      9580


      6306

      4457

      5653

      4466

      5949

      7420

      2789

      3053

      2060

      4009

      1580

      5870


      2128

      5160

      6167

      2810

      7342

      7388

      3945

      2653

      4605

      8023

      3736


      40312


      8527

      4368

      1291

      1159

      2869

      10302

      8489


      3268

      4846

      4747

      8406

      4839

      4459

      6374

      3271

      3072

      1600


      2279

      2628

      4570

      1688

      2989

      6512

      5511

      5544

      1312

      6497


      32986

      21583


      5607

      1597

      7704

      6719

      7585

      6676

      1192

      5987

      7336

      2079

      7280


      4148


      6518

      7660

      2690

      6461

      7436

      4628

      5750

      5493

      4000

      7290


      3774

      5553

      2325

      6203

      10506

      7826

      11499


      6237

      6275

      7370

      6287

      6289

      3980

      2487

      2940

      3886

      5351

      5284

      5486


      2847

      4282

      1406

      2164

      4119

      2192

      2714

      3284

      3712

      4202

      1970

      4411

      4923

      1388

      5883


      18803


      1928

      6016

      6197

      1979

      4905

      7112

      1161

      6888

      1069

      5311

      6516


      1584

      5300

      12695

      10561

      7101


      6773

      3213

      1419

      7280

      6258

      3784

      7195

      4572

      1776

      3631

      5141

      5722


      35830

      12586


      24120

      7285

      21865


      8286

      2284

      9964

      6966

      8529

      1732

      7069

      7603


      2980

      1294

      1763

      1127

      3544

      1944

      2551

      4883

      2383

      4987

      5327

      2181

      5165


      1271

      3831

      6168

      1025

      4525

      1932

      5048

      1729

      5620

      3160


      4380

      7712

      1062

      6575

      6162

      4085

      4349

      3289

      7887

      5063

      5381


      2461

      15992

      18018

      11701


      5122

      4067

      5335

      1348

      5188

      2544

      5413

      5187

      2936

      5375

      5271

      5428

      5804

      3715

      5431


      9156

      4489

      1512

      7481

      4781

      2086

      8862

      10687


      7919

      6487

      1580

      2369

      1676

      1572

      2426

      4760

      2315

      2904

      6901


      7781


      4581

      4869

      2229

      6614

      10209

      10156

      8618

      9215


      4418

      5394

      4140

      11367

      6771

      10724

      1838


      4086

      3703

      13922


      6051

      3842

      4012

      4978

      2260

      2208

      2565

      2662

      2407

      3249

      1424

      6033

      2676

      5779

      1890


      6888

      5074

      2200

      1935

      5163

      4753

      1612

      5907

      2653

      5737

      2015

      1598

      1210


      6424

      3083

      3843

      3611

      5730

      6310

      1126

      5686

      2632

      6358

      3755

      3578

      6413

      4916


      3305

      1155

      11374

      7940

      9522

      8508

      7054


      16430


      7611

      1656

      5390

      2790

      5899

      3484

      7949

      3770

      1129

      6751

      7018


      1136

      6501

      1650

      5910

      6188

      6706

      4212

      4210

      6942

      2182

      4581

      1616

      1827


      6805

      4212

      5129

      6550

      6026

      5586

      1368

      5150

      5532

      2703

      7420


      4022

      1740

      4549

      5441

      4252

      6012

      4271

      6433

      3891

      4834

      1511

      2557

      2755


      5021

      4120

      5400

      1420

      1374

      1629

      6026

      5247

      7136

      4684

      2429

      4177


      1175


      7380

      37112


      6602

      6327

      5195

      1177

      1390

      5927

      3491

      6915

      1075

      6057

      1787

      6485


      2270

      3902

      3708

      9428

      8982

      6407

      7183

      5277

      4268


      3545

      10390

      13855

      12280

      5499

      11256


      4933

      4652

      2658

      3954

      6757

      4162

      3830

      4592

      4799

      4038

      5185

      2842

      1254


      7643

      7897

      10471

      1573

      6236

      3197


      9201

      12063

      10635

      6938

      8051

      9420

      2378


      19093

      23159

      1779


      2571

      1929

      2304

      1288

      3915

      1683

      1267

      2892

      6105

      5699

      2965

      5931


      6538

      4946

      6944

      2793

      5478

      5918

      4851

      2753

      5589

      3210

      3782


      2975

      8187

      4221

      5897

      4451

      4712


      1651

      3396

      4928

      1315

      5059

      2733

      5976

      5712

      5231

      5265

      3382

      6022

      3994

      4624

      1717


      5932

      4950

      6105

      4468

      2588

      5392

      5155

      3211

      4291

      2685

      1314

      1338

      6323

      1632


      56490


      35520

      3508


      4873

      1896

      3256

      6461

      2819

      4000

      6126

      2677

      1253

      3991

      1797

      1298

      2357

      4919


      6855

      1235

      2862

      4477

      1979

      1022

      3391

      2991

      5345

      4000

      5014

      3030

      5471


      11627


      10096

      2454

      12493

      4138

      4539

      12769


      7464

      9654

      6701

      8883

      5239

      8018

      1929

      6280

      3452


      4202

      4306

      1980

      4353

      1857

      1942

      5272

      3635

      3983

      4139

      6300

      5743

      2913

      3140


      17538

      9430


      4111

      8312

      5325

      1439

      5521

      8910

      2754

      1723

      3145


      5619

      2024

      6780

      3535

      5354

      4258

      1842

      6802

      4033

      4872

      4795

      5794

      1247


      3708

      6991

      24763


      1336

      1869

      3843

      5305

      5896

      2380

      4354

      8098

      7027

      1600


      9008

      4226

      5845

      4783

      2981

      13637


      18048

      34155


      2158

      2728

      4373

      2168

      5492

      4587

      6183

      5712

      1427

      3765


      17712

      28932


      8718

      3165

      8511

      6567

      2194

      4605

      4879

      8336

      7471


      1083

      4551

      3912

      7798

      5739

      4384

      5966

      4583

      7690

      3910


      1253

      3778

      3733

      5180

      3134

      3646

      2973

      5935

      5516

      2668

      4114

      4594

      5960

      3004

      3723


      19271

      6681

      9460

      3291


      69894


      8124

      9292


      1190

      6057

      8065

      2473

      1639

      2271

      1294

      7019

      3245

      7390


      2785

      4056

      5548

      1566

      2432

      5546

      3348

      4566

      3980

      6329

      2568

      5677

      5419

      4314


      5412

      11296

      2990

      12309

      12835

      8833


      5678

      6882

      9550

      1151

      5200

      6760

      5030

      7319

      7920


      2073

      6640

      13815

      4913

      12031

      3949


      18529

      23066

      24003


      4724

      2793

      7348

      1023

      5582

      5407

      7809

      2942

      5853

      5214

      1062


      4813

      4608

      6199

      6798

      1855

      5642

      5916

      1420

      1583

      2314

      4623

      5471


      4257

      4250

      5751

      6838

      6563

      2673

      1530

      4960

      3920

      7405

      1075

      4059


      3381

      4158

      4751

      2209

      6659

      4780

      1008

      2774

      6275

      2996

      4533

      5304


      3392

      1384

      5534

      2962

      2771

      3970

      4395

      2863

      6683

      1273

      6858

      2139

      6957


      5467

      4223

      6720

      6441

      2238

      1533

      5809

      4655

      2969

      4292

      6337

      3154

      3836


      2802

      1318

      4028

      4453

      5955

      6470

      5629

      3499

      1961

      5072

      2276

      3481

      4052

      6396


      7524

      1036

      8480

      3074

      5500

      6945

      5897

      6492

      7556

      5640


      7230

      14327

      7415

      6350

      4860


      1466

      7043

      3529

      12211

      12412

      11492


      3369

      4999

      1374

      6342

      2802

      2941

      3900

      5964

      3642

      2175

      5622

      5425

      5800


      2979

      3672

      5333

      4098

      3021

      1424

      1679

      5424

      1745

      4265

      1841

      2716

      5306


      11005

      5937

      12008

      4420

      5637

      10592


      9308

      3108

      13264

      8125

      13257

      11024


      9574

      7475

      5550

      12130

      4270

      3221

      5813


      4020

      4074

      2895

      2349

      2640

      2079

      1038

      8085

      7173

      5863

      5685


      2858

      4323

      2796

      5877

      7113

      2333

      7167

      8064

      4286

      1268

      1710


      5905

      4123

      5583

      6104

      2763

      5274

      4808

      1760

      6606

      6691

      5051

      1526

      4290


      5639

      5851

      5677

      1499

      3865

      3502

      1869

      5608

      2214

      3805

      3046

      5680

      2425

      4423

      2620


      10292

      24730

      25190


      7576

      8485

      6945

      10024

      3448

      2799

      8338

      7638


      1128

      6102

      2641

      4500

      4154

      1560

      2226

      4152

      6451

      1335

      2606

      2257

      4248

      1927


      1798

      9671

      5368

      8742

      1124

      5578


      1970

      3725

      2771

      3582

      2632

      6142

      2579

      2146

      2388

      2269

      4118

      6112

      1737


      4635

      2925

      4434

      6757

      10349

      12954


      13448

      6825

      10103

      1056

      5495

      11490


      7494

      8483

      8060

      2450

      5281

      6389

      4832

      4009

      8451


      34284


      1603

      5707

      4767

      5658

      4811

      4826

      5170

      5817

      3597

      5636

      2812

      4373

      2901

      1307


      1486

      13828

      9856

      11238

      8720

      2019


      6235

      3218

      2243

      3504

      1922

      2448

      5649

      5571

      5321

      5896

      5801

      3298


      16648

      2946

      7150

      15822


      4082

      6361

      7159

      7250

      3244

      4956

      2497

      3582

      5322

      6447

      5371

      2097


      3697

      6605

      5261

      1991

      6182

      5617

      2118

      7340

      5825

      2862

      1702


      4314

      4229

      2169

      6275

      3786

      1121

      6957

      1337

      1332

      4989

      1844

      2178

      5812


      15539

      2282

      15518

      9604

      5838


      27639


      3214

      4879

      3533

      2352

      7107

      5906

      8017

      5251

      5414

      5382

      3647


      2692

      33924


      3209

      2672

      5418

      1903

      3886

      4947

      1776

      1235

      1591

      1239

      5098

      3302

      6063

      2818


      13709


      7734

      7653

      4415


      1666

      8435

      4478

      1519

      6902

      1635

      7825


      6651

      1576

      4934

      3478

      3321

      2203

      6682

      4807

      7456

      3215

      1489

      2297


      7800

      3507

      2392

      7693

      6398

      8654

      1700

      6329

      6906

      4895


      6724

      13961

      9520

      9359

      13472


      6652

      14619

      8763

      9602

      16258


      1241

      4308

      2894

      4673

      1527

      6369

      5143

      3759

      1870

      5124

      3588

      6547

      2498


      1791

      7613

      3504

      2538

      3030

      5815

      2233

      5444

      2441

      1007

      3379


      3552

      4921

      4066

      3719

      5667

      4850

      1634

      3690

      1119

      4882

      2004

      5276

      3094

      4641

      2747


      12424

      6884

      14048

      14023

      1167


      14032

      10399

      15054


      36358

      1107


      1571

      2482

      4176

      4617

      1345

      2409

      4293

      2630

      5182

      5619

      2478

      1867

      5272

      4378

      3740


      7622

      8215

      3888

      6528

      4642

      5321

      4188

      3362

      4888

      7881


      10689

      9236

      8990

      5172

      3808

      12090

      4886


      13681

      18086

      7314

      2323


      7660

      4072

      5256

      7493

      9843

      4037


      25993

      4860

      1582


      6486

      2017

      3122

      1325

      4295

      4719

      2723

      5058

      3755

      3442

      5051

      5075

      4872


      4914

      10902

      15299

      8897


      1127

      4276

      1756

      5614

      1418

      5097

      1592

      1895

      7080


      2115

      2568

      1336

      3705

      3724

      1700

      1609

      1828

      2414

      4237

      2338

      6012

      3032

      2218

      2208


      8849

      8568

      6400

      8410

      4368

      8764

      1427

      4127

      4178


      30490

      4142


      2030

      5111

      5745

      8679

      1943

      8202

      1285

      7558

      4016

      1522


      5831

      3090

      4335

      1437

      4821

      2113

      5094

      5944

      4673

      2596

      3864

      5259

      1871

      1608


      2199

      1764

      5142

      6643

      7190

      4835

      6581

      1405

      1658

      3792

      2250

      6073


      3870

      2483

      3951

      4182

      5446

      2685

      1091

      3962

      1047

      1610

      1527

      3222

      1911

      5104


      5426

      4663

      6726

      3699

      3174

      3624

      5484

      5948

      1354

      1236

      5775

      7090


      3546

      3444

      1385

      4869

      2456

      4604

      4077

      3552

      7176

      6813

      6997

      2902


      1677

      13997


      5167

      5967

      8185

      2651

      3727

      4484

      6003

      5162

      4850


      5218

      6379

      4277

      1597

      7423

      1074

      8715

      8456

      7021

      2336


      8958

      8689

      4334

      1060

      9038

      3588

      9339

      8979

      3346


      2575

      6747

      7542

      2648

      5594

      3696

      8934

      1751


      6196

      6698

      6136

      2850

      8180

      4098

      2881


      5732

      25560

      17361


      2901

      1622

      6652

      5704

      1146

      7084

      7118

      3471

      1666


      2406

      6393

      2230

      3030

      4327

      7405

      2547

      5892

      7341

      1722

      1612

      3218


      6903

      8864

      7636

      5110

      8870

      1217

      2648

      3657

      5840


      5989

      16071

      2219

      11769

      8755


      1648

      2098

      2757

      8375

      8655

      4497

      7677

      8314

      3619


      5323

      5392

      6638

      7142

      3855

      7531

      8756

      5909

      2428


      5567

      9816

      10210

      9465

      9301

      6144

      10073

      9933


      16283

      11551

      16041

      2127

      3410


      6921

      6847

      6005

      2213

      6929

      3604

      3729

      2111

      2870

      5211

      2879

      3116

      4096


      4863

      2555

      6330

      5701

      4633

      5732

      5706

      3555

      4386

      6518

      4218

      6123


      13295

      12444

      4812

      3646

      3392

      4269


      4394

      3424

      4545

      3162

      5525

      5268

      4625

      6719

      3657

      5607

      3709

      6378

      1544


      54079


      11984


      6538

      6184

      5782

      3642

      7797

      6854

      4210

      3231

      5819

      3244

      8018


      1558

      17824

      9560

      16295


      1208

      5757

      5575

      4905

      4640

      4377

      1847

      3419

      4671

      3182

      6184

      2672


      8700

      7999

      6570

      3211

      4908

      1469

      5401

      4840

      2924

      2854


      2166

      17731


      1535

      2635

      3175

      2678

      1217

      4326

      3518

      1611

      6389

      7438

      2615

      3146


      5043

      5895

      1419

      1226

      2417

      2537

      1698

      5144

      5937

      2387

      4113

      3673

      1124

      5076

      3166


      3098

      4831

      5860

      2784

      3187

      5113

      2336

      2667

      5178

      3327

      6020

      5811

      5782


      7997

      5018

      2443

      7044

      7292

      3564

      10170

      8878


      5202

      4184

      2615

      1187

      3642

      3379

      3477

      5152

      1712

      2903

      2769

      3805

      1979

      4902

      1198


      5861

      1860

      8082

      2990

      5096

      6764

      3090

      5473

      2580

      1452


      4315

      6801

      1335

      2474

      3566

      3067

      5804

      4057

      5492

      2849

      6533

      4677

      2386


      18899

      5787


      8958

      1159

      11750

      2269

      5522

      4240


      3265

      2730

      5316

      6167

      4144

      1824

      2753

      2016

      1286

      1999

      6176

      4520

      1521

      2450


      7213

      13737

      13559

      1264

      10959

      4193


      13793

      2804

      2170

      3728

      6751

      3108


      3104


      10079

      8735


      6035

      8147

      6401

      6153

      4028

      9294

      6355

      8167

      3844


      6599

      6319

      4326

      8388

      1409

      2321

      7996

      3887

      6073

      2778


      2849

      5674

      1635

      2067

      8804

      7444

      4775

      1568

      6278


      6823

      7466

      1008

      6783

      6258

      6584

      8655

      8072

      3086


      6043

      12126

      11498

      1832

      10190

      1530

      2192


      1614

      2820

      9718

      4461

      10396

      3606

      2481


      6036

      7966

      6674

      3059

      7310

      1138

      1974

      5574

      2907

      7896


      9037

      3659

      4092

      6191

      1896

      1986

      5991

      2290

      5726


      4208

      5969

      3220

      3588

      8793

      2797

      7843

      5187


      8513

      10633

      2236

      6997

      5444

      1620

      1021

      10020


      7180

      4727

      8226

      7912

      5481

      7611

      8852

      8035

      3168


      37280


      1710

      5518

      3890

      2648

      3111

      5237

      3741

      5613

      7738

      3520

      4885


      17182

      11752

      23068


      6680

      4747

      4916

      6825

      1181

      6707

      1076

      2361

      3399

      4805

      1663

      3463

      4772


      35202

      20846


      10406

      11741

      16051

      1157

      7483


      2827

      3431

      3324

      1781

      5418

      3182

      4725

      1022

      5403

      6308

      5990

      3219

      1495


      6314

      3800

      4825

      5057

      4397

      4182

      8213

      8160

      7795

      1063


      13147


      42635


      7219

      2962

      4108

      2347

      4155

      8715

      1685

      6921

      2164


      15675

      3583

      12653

      14222

      3991


      2363

      7410

      2143

      1091

      6713

      1412

      1099

      2242

      7544

      4937


      15772

      10228

      1020

      10845


      3682

      4323

      11915

      10229

      11727

      5173


      3365

      4295

      5082

      13629

      4173

      5848


      4324

      1921

      6222

      3428

      6022

      2250

      1170

      5026

      5168

      1261

      6274

      6142

      1250


      2571

      8209

      2334

      4244

      4228

      10666

      9860


      5584

      4728

      3012

      5794

      2321

      5837

      1252

      5151

      4842

      3557

      1980

      2061

      2743


      3604

      1299

      4017

      6001

      6568

      3675

      8039

      7628

      5977

      6430

      6212


      16156

      22045

      25960


      11109

      26000

      8491


      6540

      6302

      6140

      1644

      4311

      1184

      2320

      2920

      1251

      2939

      5130

      2011

      2711


      1667

      3628

      9498

      1778

      8394

      9324

      5849

      10744


      3036

      2127

      5374

      5864

      2650

      4093

      2326

      2657

      4305

      3766

      4749

      2265

      5303

      5515

      1109


      1443

      4494

      14241

      15696

      6478


      5404

      1527

      9780

      9950

      5559

      8421

      1375


      16733

      10347

      14682


      2913

      3592

      3393

      7007

      2276

      2047

      1320

      7350

      7874

      7183

      3394


      25380

      25324

      16859


      7300

      3697

      4423

      4902

      3917

      4646

      2016

      4472

      6660


      6756

      5563

      2641

      6879

      5437

      1179

      4055

      2195

      2732

      1254

      3605

      4191

      1482'
    parts:
      part1: "--- Day 1: Calorie Counting ---\nSanta's reindeer typically eat regular\
        \ reindeer food, but they need a lot of \nmagical energy\n to deliver presents\
        \ on Christmas. For that, their favorite snack is a special type of \nstar\n\
        \ fruit that only grows deep in the jungle. The Elves have brought you on\
        \ their annual expedition to the grove where the fruit grows.\n\n\nTo supply\
        \ enough magical energy, the expedition needs to retrieve a minimum of \n\
        fifty stars\n by December 25th. Although the Elves assure you that the grove\
        \ has plenty of fruit, you decide to grab any fruit you see along the way,\
        \ just in case.\n\n\nCollect stars by solving puzzles.  Two puzzles will be\
        \ made available on each day in the Advent calendar; the second puzzle is\
        \ unlocked when you complete the first.  Each puzzle grants \none star\n.\
        \ Good luck!\n\n\nThe jungle must be too overgrown and difficult to navigate\
        \ in vehicles or access from the air; the Elves' expedition traditionally\
        \ goes on foot. As your boats approach land, the Elves begin taking inventory\
        \ of their supplies. One important consideration is food - in particular,\
        \ the number of \nCalories\n each Elf is carrying (your puzzle input).\n\n\
        \nThe Elves take turns writing down the number of Calories contained by the\
        \ various meals, snacks, rations, \netc.\n that they've brought with them,\
        \ one item per line. Each Elf separates their own inventory from the previous\
        \ Elf's inventory (if any) by a blank line.\n\n\nFor example, suppose the\
        \ Elves finish writing their items' Calories and end up with the following\
        \ list:\n\n\n1000\n2000\n3000\n\n4000\n\n5000\n6000\n\n7000\n8000\n9000\n\n\
        10000\n\n\n\nThis list represents the Calories of the food carried by five\
        \ Elves:\n\n\n\n\nThe first Elf is carrying food with \n1000\n, \n2000\n,\
        \ and \n3000\n Calories, a total of \n6000\n Calories.\n\n\nThe second Elf\
        \ is carrying one food item with \n4000\n Calories.\n\n\nThe third Elf is\
        \ carrying food with \n5000\n and \n6000\n Calories, a total of \n11000\n\
        \ Calories.\n\n\nThe fourth Elf is carrying food with \n7000\n, \n8000\n,\
        \ and \n9000\n Calories, a total of \n24000\n Calories.\n\n\nThe fifth Elf\
        \ is carrying one food item with \n10000\n Calories.\n\n\n\n\nIn case the\
        \ Elves get hungry and need extra snacks, they need to know which Elf to ask:\
        \ they'd like to know how many Calories are being carried by the Elf carrying\
        \ the \nmost\n Calories. In the example above, this is \n24000\n (carried\
        \ by the fourth Elf).\n\n\nFind the Elf carrying the most Calories. \nHow\
        \ many total Calories is that Elf carrying?"
      part2: "--- Day 1: Calorie Counting ---\nSanta's reindeer typically eat regular\
        \ reindeer food, but they need a lot of \nmagical energy\n to deliver presents\
        \ on Christmas. For that, their favorite snack is a special type of \nstar\n\
        \ fruit that only grows deep in the jungle. The Elves have brought you on\
        \ their annual expedition to the grove where the fruit grows.\n\n\nTo supply\
        \ enough magical energy, the expedition needs to retrieve a minimum of \n\
        fifty stars\n by December 25th. Although the Elves assure you that the grove\
        \ has plenty of fruit, you decide to grab any fruit you see along the way,\
        \ just in case.\n\n\nCollect stars by solving puzzles.  Two puzzles will be\
        \ made available on each day in the Advent calendar; the second puzzle is\
        \ unlocked when you complete the first.  Each puzzle grants \none star\n.\
        \ Good luck!\n\n\nThe jungle must be too overgrown and difficult to navigate\
        \ in vehicles or access from the air; the Elves' expedition traditionally\
        \ goes on foot. As your boats approach land, the Elves begin taking inventory\
        \ of their supplies. One important consideration is food - in particular,\
        \ the number of \nCalories\n each Elf is carrying (your puzzle input).\n\n\
        \nThe Elves take turns writing down the number of Calories contained by the\
        \ various meals, snacks, rations, \netc.\n that they've brought with them,\
        \ one item per line. Each Elf separates their own inventory from the previous\
        \ Elf's inventory (if any) by a blank line.\n\n\nFor example, suppose the\
        \ Elves finish writing their items' Calories and end up with the following\
        \ list:\n\n\n1000\n2000\n3000\n\n4000\n\n5000\n6000\n\n7000\n8000\n9000\n\n\
        10000\n\n\n\nThis list represents the Calories of the food carried by five\
        \ Elves:\n\n\n\n\nThe first Elf is carrying food with \n1000\n, \n2000\n,\
        \ and \n3000\n Calories, a total of \n6000\n Calories.\n\n\nThe second Elf\
        \ is carrying one food item with \n4000\n Calories.\n\n\nThe third Elf is\
        \ carrying food with \n5000\n and \n6000\n Calories, a total of \n11000\n\
        \ Calories.\n\n\nThe fourth Elf is carrying food with \n7000\n, \n8000\n,\
        \ and \n9000\n Calories, a total of \n24000\n Calories.\n\n\nThe fifth Elf\
        \ is carrying one food item with \n10000\n Calories.\n\n\n\n\nIn case the\
        \ Elves get hungry and need extra snacks, they need to know which Elf to ask:\
        \ they'd like to know how many Calories are being carried by the Elf carrying\
        \ the \nmost\n Calories. In the example above, this is \n24000\n (carried\
        \ by the fourth Elf).\n\n\nFind the Elf carrying the most Calories. \nHow\
        \ many total Calories is that Elf carrying?\n\n--- Part Two ---\nBy the time\
        \ you calculate the answer to the Elves' question, they've already realized\
        \ that the Elf carrying the most Calories of food might eventually \nrun out\
        \ of snacks\n.\n\n\nTo avoid this unacceptable situation, the Elves would\
        \ instead like to know the total Calories carried by the \ntop three\n Elves\
        \ carrying the most Calories. That way, even if one of those Elves runs out\
        \ of snacks, they still have two backups.\n\n\nIn the example above, the top\
        \ three Elves are the fourth Elf (with \n24000\n Calories), then the third\
        \ Elf (with \n11000\n Calories), then the fifth Elf (with \n10000\n Calories).\
        \ The sum of the Calories carried by these three elves is \n45000\n.\n\n\n\
        Find the top three Elves carrying the most Calories. \nHow many Calories are\
        \ those Elves carrying in total?"
    title: '--- Day 1: Calorie Counting ---'
  2:
    answers:
      part1:
        correct: '9177'
        wrong: []
      part2:
        correct: '12111'
        wrong: []
    input: 'C Y

      C Y

      C Y

      B Z

      C Y

      C Z

      C Y

      C Y

      C Z

      B Y

      C Y

      C Y

      C Y

      C Y

      C Y

      B Z

      A X

      C Y

      B Y

      A X

      C Z

      C Y

      C Y

      C Y

      B Z

      B X

      C Y

      A X

      A X

      A X

      C X

      A X

      C X

      B X

      C Y

      C Y

      A X

      A Y

      C Y

      C Y

      C Y

      C Y

      B X

      A X

      B Y

      C Y

      C Y

      C Z

      A Y

      B X

      B Z

      C Z

      C Z

      A X

      A X

      B X

      C Z

      C X

      A Y

      C X

      C Y

      A X

      A X

      A X

      C Y

      C Z

      C X

      C Y

      A X

      C Y

      C Z

      C Y

      B Z

      C Y

      A X

      C Z

      C Y

      C Y

      C Y

      A X

      A X

      A X

      B X

      A Z

      A X

      C Y

      A Y

      C Y

      B X

      B Z

      B Z

      B Z

      B X

      C X

      A X

      A X

      A X

      C Z

      A Y

      C X

      C Y

      B X

      C Y

      C Y

      A X

      C Y

      C Y

      C Y

      A X

      C Y

      A X

      C Y

      A X

      C Y

      B X

      C Z

      C Y

      A X

      C Z

      B Z

      A Z

      B Z

      C Y

      B X

      A X

      C Y

      B X

      A X

      A X

      A Y

      B Z

      C Y

      A X

      C Y

      C Y

      A X

      C Y

      C Y

      A X

      C Y

      A X

      C X

      B Y

      C Z

      B Z

      C Y

      C Y

      A X

      B X

      A X

      C Y

      C Y

      A X

      B X

      C Y

      B X

      C Z

      B Z

      C Y

      C Y

      C X

      A X

      C Y

      A X

      C Y

      C Y

      C Y

      C Z

      A X

      C Y

      A X

      A X

      B X

      C Y

      C Y

      A X

      B X

      A X

      A X

      A X

      B Z

      C Y

      C Y

      C Y

      A X

      A X

      A Y

      A X

      B X

      B Z

      B Z

      C Y

      B Z

      A X

      B Z

      C Y

      C Y

      C Y

      C Y

      C Y

      A X

      A X

      A Z

      B Y

      C Y

      C Y

      C Y

      A X

      B X

      A X

      A X

      C X

      C Y

      B Z

      C Y

      C Y

      B X

      A X

      A X

      B Z

      C Y

      B Z

      C Y

      C Y

      C Y

      A X

      C Y

      C Y

      A X

      C Z

      B X

      B Z

      C Y

      C X

      C Y

      A X

      C Z

      B Z

      A X

      B X

      C X

      A X

      C Y

      C Y

      B Z

      A Z

      B X

      B X

      A X

      A X

      A X

      C Y

      C Y

      C Z

      A X

      C X

      C Y

      C Y

      A X

      B X

      A Z

      B X

      B X

      C Y

      B X

      B Y

      B Z

      A X

      B X

      B Y

      C X

      A Y

      A Y

      C Y

      A X

      C Y

      B X

      C Z

      C X

      A Z

      C Z

      C Y

      C Y

      B X

      B X

      C Y

      A X

      C Z

      C X

      C Z

      B X

      A X

      A X

      A X

      B Z

      B X

      B Z

      C Y

      C Y

      C Y

      B X

      C Z

      C Y

      A X

      C Y

      C Y

      A X

      A X

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      A X

      C Y

      C Y

      C Y

      C Y

      C Z

      C Y

      A X

      A X

      C Y

      A Y

      B Z

      C X

      C Y

      B X

      A Y

      C Y

      C Y

      C Y

      A Y

      B X

      A X

      B Y

      C Y

      C Y

      C Z

      B Z

      C Y

      A X

      A Y

      C Y

      C Y

      C Y

      C Y

      A Y

      B Z

      A X

      C Y

      C X

      C Y

      C Y

      C Y

      C Z

      C Y

      C Y

      C Y

      B Y

      C Y

      B Z

      C Y

      A X

      C Y

      B Z

      C Y

      C Y

      A X

      A X

      B Z

      C Y

      C Y

      C X

      B X

      C Z

      A X

      A X

      B X

      C Y

      B Y

      C Y

      A Y

      C X

      A X

      C X

      C Y

      C Y

      B X

      C Y

      C Y

      B Z

      C Z

      C Y

      C Y

      A X

      C Y

      C Y

      A X

      C Y

      B X

      C Y

      C X

      A X

      C X

      A X

      C Y

      A X

      C Y

      C Y

      C Y

      C Z

      C Z

      B Z

      C Z

      C Y

      B X

      C Z

      C Y

      A X

      A X

      C Y

      C Y

      C Y

      B X

      C X

      A X

      C Y

      A X

      C Y

      A X

      C X

      B X

      A X

      C Y

      C Y

      B X

      A X

      A X

      C Z

      C X

      A X

      A X

      B X

      A Z

      A X

      C X

      C Y

      A X

      B X

      C Y

      A X

      C Y

      C Y

      B X

      C Y

      C Y

      A X

      C Z

      C Y

      B X

      C X

      B X

      C Y

      C Y

      B X

      B Z

      B Z

      C Y

      C Y

      B X

      C Y

      B Z

      C X

      A Z

      A X

      A X

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      B Z

      B X

      C Y

      B Z

      C Y

      A X

      A X

      C Y

      A X

      A X

      C Y

      C Y

      A Z

      C Y

      A X

      C Y

      C Y

      C Y

      C Y

      C Y

      A X

      B Z

      A X

      C X

      B X

      C Y

      B Z

      C Y

      B X

      B X

      C Y

      C Y

      C X

      C Y

      C Y

      A X

      C X

      A X

      C Y

      B X

      A X

      B Y

      A X

      B X

      C Y

      C X

      C Y

      C Y

      A X

      C Y

      C Y

      A X

      C Z

      B X

      A X

      C Y

      A X

      A X

      C Y

      A X

      C X

      B X

      A X

      A X

      B X

      A X

      C X

      A Z

      B Z

      C Y

      C Y

      A X

      C Y

      C Y

      B X

      A X

      C Y

      A Y

      B X

      C Y

      C Y

      A X

      C X

      C Y

      C Y

      A X

      C X

      B Y

      C Y

      C X

      C Y

      C Y

      C Y

      C Z

      A X

      C Y

      C X

      C Y

      A Z

      A X

      C Y

      B X

      C Y

      B Z

      A X

      C Y

      C Y

      A X

      A X

      C Y

      B X

      A Z

      B Z

      C Y

      C Z

      A X

      A X

      A X

      B Z

      A Z

      C Y

      C Y

      C Y

      C Y

      C Y

      B Z

      B X

      A Y

      B X

      C Y

      A X

      C X

      A X

      A X

      C Y

      A X

      C Y

      C Y

      A X

      C Y

      C Y

      C Y

      C Y

      B Z

      B X

      C Y

      C Y

      A X

      C Y

      B X

      C Y

      C Z

      C Y

      B X

      C Y

      C Y

      B Z

      A Y

      C Z

      B X

      C Z

      C Y

      A Y

      A X

      A X

      C Y

      B X

      A X

      A Y

      C X

      A Y

      C Y

      C Y

      C X

      C Y

      C Z

      C X

      B X

      C Y

      C Z

      A X

      C Y

      A X

      C Y

      C Y

      A Z

      A X

      C Z

      B X

      C X

      B X

      B Y

      C Y

      C Y

      B Z

      C Y

      B X

      B Z

      C Y

      C Y

      C Y

      B X

      B Z

      C Y

      B Z

      B X

      A Z

      A X

      C Y

      C Y

      B X

      B Z

      A X

      C Y

      C Y

      C Z

      C Y

      C Y

      C Y

      B Z

      C Y

      C Y

      B Z

      C Y

      C Y

      C Y

      C Y

      C Y

      C Z

      C X

      C Y

      C Y

      C Z

      C Y

      B Z

      C Z

      A X

      C Y

      B X

      C Y

      A X

      C Y

      A X

      C Y

      C Y

      C Y

      C Y

      B X

      C Y

      C Y

      A X

      C Z

      A X

      A X

      C Y

      B X

      C Y

      C Y

      C Y

      A X

      A X

      C Y

      B X

      B X

      C Y

      B X

      C Y

      C Z

      C Z

      A X

      C Y

      C X

      C X

      C Z

      C X

      C Y

      A X

      C Y

      C Y

      C Y

      A X

      A X

      C X

      C Y

      C Y

      A X

      A Z

      C Z

      C Y

      C Z

      A X

      C Z

      C Y

      C Y

      A X

      C Y

      B Z

      B X

      A X

      C Y

      C Z

      A X

      C X

      C Y

      C Y

      B X

      C Y

      C Y

      C Y

      B X

      B Z

      B Z

      A X

      A X

      C Z

      C Y

      C Y

      C Y

      B Z

      A X

      C Y

      C Y

      C Z

      B X

      A X

      C Y

      B Z

      C Y

      A X

      B Z

      A X

      A X

      A X

      A Y

      C Z

      A X

      A X

      B X

      A X

      C Y

      C Y

      A X

      C Z

      A X

      A X

      C Y

      A X

      B X

      A X

      C Y

      A X

      C Y

      C Z

      C Y

      C Y

      C Z

      C Y

      C X

      A Y

      A Z

      B Z

      B X

      C Y

      C X

      B X

      A X

      A Y

      A X

      A X

      C Y

      B X

      A X

      C Y

      B Z

      C Y

      C Y

      C Y

      C Y

      A X

      B X

      C Y

      A X

      A Y

      C Y

      B X

      C Y

      B Y

      C Y

      B X

      C Y

      C Y

      C Y

      C X

      A X

      B Z

      C Y

      C Y

      B X

      C Y

      C Y

      B Z

      A X

      C Y

      C Y

      A Y

      C Y

      B Z

      C Y

      C Y

      A X

      A X

      A X

      C Z

      B X

      C X

      A X

      C Y

      C Z

      A X

      B X

      A X

      B X

      C Z

      C X

      C Y

      B X

      C Z

      C Z

      C Y

      A X

      C Y

      C X

      B X

      C Y

      C Y

      A Y

      C Y

      C Z

      C Y

      C Y

      B Z

      C Y

      C Y

      C Z

      B X

      B X

      C Y

      B Z

      C Y

      A X

      C Z

      C Z

      A X

      A X

      A X

      A X

      C Y

      C Y

      B X

      C Y

      B X

      A X

      C Y

      C Y

      C Y

      A X

      B Z

      A X

      C Y

      C Y

      C Y

      A X

      C Y

      C Y

      B Z

      B Z

      A X

      C Y

      C Y

      B Y

      C Y

      C Z

      A X

      C Y

      C Z

      A X

      A X

      C X

      C Y

      A X

      A X

      C Y

      C Y

      A X

      A X

      A X

      C Y

      C Y

      B Z

      C Y

      B X

      A X

      A X

      C Z

      C Y

      A X

      C Y

      A X

      C Y

      C Z

      C Z

      C Y

      A X

      C Y

      C X

      C Y

      B X

      C Y

      A X

      B Z

      C Z

      C Z

      C Y

      B X

      C Y

      C Y

      C Y

      A X

      A X

      A X

      C Y

      B Z

      A X

      C Y

      C Y

      C Y

      A X

      C Y

      C Y

      A X

      C Y

      C X

      A X

      C Y

      C Y

      C Z

      C Z

      C Y

      C Y

      C Y

      C Y

      C Z

      B X

      C Y

      C Y

      A Y

      C Z

      B Z

      C Y

      C Y

      A X

      B X

      A X

      C Z

      C Y

      B Y

      C Y

      A Z

      C Y

      B Z

      B Z

      C Y

      A X

      C Y

      B Z

      B X

      B Z

      A X

      B X

      A X

      C X

      A X

      B X

      A Y

      B Z

      C Z

      C Y

      A X

      A X

      C Y

      C X

      A Y

      C Z

      C Y

      C Y

      A X

      A Z

      A Y

      C Y

      B X

      A X

      C Y

      C Z

      B X

      A X

      B X

      C Y

      C Z

      B X

      C Y

      C Y

      C Y

      A X

      C Y

      C Y

      C Y

      C Y

      C Y

      C X

      C X

      C Y

      C Y

      C Y

      A Y

      C Y

      A X

      C Z

      C Z

      C Y

      C Y

      C Y

      B X

      A Z

      C Y

      C Z

      C Y

      A X

      C Y

      A Y

      A X

      C Y

      C Y

      A Z

      B X

      C Z

      B X

      C Y

      C Z

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      B Z

      C Z

      A X

      A Z

      C Z

      B Y

      B Z

      C Z

      C Z

      A X

      B X

      B X

      C Y

      C Y

      A X

      A X

      C Y

      C Y

      A X

      C Y

      A Z

      C Z

      C Y

      A X

      C Y

      C Y

      A X

      A X

      C Y

      C Y

      B Z

      B X

      C Y

      C Y

      A Z

      C X

      C Y

      B X

      C Z

      A X

      C Z

      C Y

      A X

      B Z

      C Y

      C Y

      B X

      A Z

      C Y

      B Z

      A X

      C Y

      C X

      A X

      C Y

      C Y

      C Z

      A X

      B X

      B Z

      C X

      C Y

      C Y

      A X

      C Y

      B X

      A X

      A X

      C Y

      A X

      A X

      A X

      A Y

      A Z

      A X

      A X

      C Y

      C X

      C Z

      C Y

      C Y

      C X

      C Y

      A X

      A X

      A Y

      C Z

      C Z

      C X

      B Z

      C Y

      A X

      C Y

      B Z

      A X

      C Z

      C Y

      A Y

      A X

      B Z

      A X

      C Y

      B X

      B Z

      A X

      B X

      B X

      C Y

      C X

      C Y

      C Y

      C Y

      C Z

      B Z

      C Y

      C Y

      C Z

      C Y

      C Y

      C Y

      A X

      A X

      C Z

      A X

      C Y

      C Y

      B Z

      A X

      A Z

      C Z

      C Y

      C Y

      C Y

      C Z

      C Y

      C Y

      C Y

      C Y

      B Z

      C Y

      C Z

      C Z

      C Y

      B Z

      A X

      C Y

      B X

      C X

      A X

      A X

      B X

      C Y

      C Y

      C Y

      C X

      B Z

      C Y

      A X

      C Z

      A X

      A Z

      C Z

      C Y

      C Y

      C Y

      C X

      A X

      C Y

      A Y

      C Y

      B Z

      A Y

      C Y

      A X

      C Y

      A X

      C Y

      C Y

      C Y

      B X

      C Y

      C Y

      A X

      C Y

      C Y

      C Y

      C Y

      A X

      B Z

      B X

      A X

      C Y

      C X

      C Y

      B X

      C X

      C Y

      C Y

      A X

      A X

      C Y

      C Z

      A X

      C Y

      A X

      C Y

      C X

      C Y

      B Y

      A Y

      C Y

      C Z

      A X

      B X

      C Y

      B X

      A X

      C Y

      B X

      A Z

      C Y

      B X

      C Y

      A X

      B X

      C Z

      A X

      B X

      C Y

      A X

      A X

      B X

      C Y

      A X

      C Z

      A X

      C Y

      A X

      B X

      C Y

      C Y

      C Y

      C Y

      C Y

      A X

      A Z

      C Y

      A X

      C Y

      C Y

      B X

      C Y

      A X

      C Y

      C Z

      C Y

      C Y

      A X

      A X

      A X

      C Y

      C Y

      C Y

      C Z

      C Y

      C Y

      C Y

      C Y

      C Z

      C X

      C Y

      C Z

      C Y

      C Y

      C Y

      C Y

      A X

      B X

      C Z

      A X

      C Z

      C Y

      C Y

      C Y

      C Y

      A Z

      B X

      A X

      B Z

      C Y

      C Y

      C X

      C Y

      B Y

      B X

      C X

      C X

      A X

      C Y

      C Y

      A X

      A X

      B Z

      C Y

      C Y

      C Y

      A X

      A X

      C Y

      C X

      C Y

      A X

      C X

      B Y

      C X

      C Y

      C Y

      A X

      B Z

      C Y

      B X

      A X

      B Y

      C Y

      C Y

      C Y

      A X

      A X

      C Y

      C Y

      A X

      C Y

      C X

      C Y

      B Z

      C Y

      C Y

      A Z

      C Y

      C Z

      C Z

      C X

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      A X

      C Y

      B X

      C Z

      C Y

      C X

      C X

      A Y

      C Y

      A X

      A X

      B Z

      C Y

      C Y

      A X

      A Z

      B X

      C Y

      C Y

      B Y

      C Y

      C Y

      C Y

      C Y

      A X

      C Z

      C Y

      C Z

      A Y

      C Y

      A X

      A X

      C Y

      C Y

      C Y

      B X

      B X

      B Z

      A X

      C Z

      C X

      A X

      C Y

      C Y

      C Y

      C Y

      C X

      C X

      B Z

      A Z

      C Y

      B Z

      C Z

      A X

      C Z

      A X

      C Y

      A X

      C Y

      A X

      A X

      C Y

      A X

      C Y

      C Y

      C Y

      B X

      C Y

      C X

      C Y

      C Z

      C Y

      A X

      C Y

      C Y

      C Y

      B Z

      C Y

      A X

      B X

      C Y

      C Y

      B Y

      C Z

      C Z

      C Y

      A X

      C Y

      C Y

      A X

      C X

      B X

      A X

      A X

      C Y

      C Y

      C Y

      C Y

      C Y

      A X

      A X

      C Y

      C Y

      B X

      C Y

      C Y

      C X

      C Y

      C Z

      B Z

      C Z

      C Y

      B X

      C Y

      C X

      A X

      C Y

      B X

      B X

      A X

      C Y

      A X

      C Y

      A X

      C X

      C Y

      C Y

      B X

      C Y

      C Y

      C Y

      C Y

      C X

      B Z

      A X

      A X

      C X

      C X

      C Y

      A X

      C Z

      C Y

      C Z

      A X

      A X

      C X

      C X

      C Z

      B X

      A X

      C Y

      B X

      C Y

      B X

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      B Z

      C Z

      A Z

      B X

      C Z

      C Z

      C Y

      B Z

      C Y

      A X

      C Y

      C Y

      C Y

      B Z

      C Y

      A X

      B Z

      B Z

      C Z

      A Y

      C Z

      A X

      C Y

      C Z

      C X

      A X

      B X

      C Y

      C Y

      C Y

      A X

      A Y

      C Y

      C Y

      C Y

      A X

      C Y

      B X

      A X

      A X

      B X

      C Z

      C Y

      B Z

      C Y

      A Y

      B X

      C Z

      B Z

      B Z

      C X

      B Z

      C X

      A X

      C Y

      B X

      C Y

      A X

      C Y

      A X

      C Y

      C Y

      C Z

      C Y

      A X

      B X

      C Y

      A X

      B X

      C Y

      C X

      C Y

      C Y

      A X

      C Y

      A X

      B X

      C Y

      B X

      B X

      C Y

      A X

      C X

      C X

      B X

      B Z

      C Y

      B X

      C Y

      C Y

      B X

      A X

      C Z

      A Y

      C Y

      C Z

      A X

      A X

      C Y

      A X

      B Z

      A X

      A X

      C Y

      B Z

      B Z

      C Y

      B X

      B X

      A X

      A X

      C Y

      C Z

      C X

      C Y

      A X

      B Y

      A X

      C Y

      B Z

      B X

      A Y

      A X

      C Y

      A X

      A X

      C Y

      C Y

      C Y

      C Z

      C Z

      A X

      B Z

      A Z

      A X

      C Y

      B Z

      C X

      C Y

      C Z

      C Z

      B X

      B Z

      B X

      C Y

      B X

      B X

      C Y

      C Y

      C X

      B X

      A X

      C Z

      A X

      C Y

      A X

      A X

      C Y

      B X

      B X

      A X

      B X

      B Y

      C Y

      A X

      A X

      A X

      B X

      C Y

      B Z

      C Z

      B X

      C Y

      C Z

      A X

      C Y

      C Y

      B Z

      C Z

      C Y

      C Z

      A X

      B X

      A Z

      C Z

      B Z

      A X

      A X

      B X

      A X

      C Y

      C Y

      C Y

      C Y

      A X

      C Y

      C Z

      C Z

      B X

      A X

      A X

      B X

      B X

      B X

      C Y

      C Y

      A X

      C Y

      B Z

      C Y

      C Y

      B Z

      A Z

      C X

      C Z

      B X

      C Y

      A X

      A X

      C Y

      C Y

      C Y

      C Z

      A X

      C X

      B X

      C Y

      A X

      C Y

      C X

      A X

      A Z

      C X

      C Z

      A X

      C Y

      C Y

      C Y

      A X

      A X

      A X

      B Z

      C Z

      C Z

      A X

      B X

      B X

      A X

      C Y

      B X

      C Z

      B Y

      A X

      C Z

      A Z

      C Y

      C Y

      A X

      A X

      B X

      C Y

      B Z

      C Y

      A X

      A X

      A X

      C Y

      A X

      C Y

      C Y

      C Y

      B X

      A X

      B Z

      C Y

      A X

      A X

      A Z

      A X

      A Y

      A X

      C Y

      C Y

      B X

      A Y

      C Y

      C Y

      A X

      A Y

      C Y

      B X

      C Y

      C Y

      C Y

      C Y

      C Y

      B X

      C Y

      C Y

      C X

      C Y

      A X

      B Z

      B X

      B X

      C Y

      A X

      C Y

      C X

      C X

      C Y

      C Y

      C Z

      C Y

      A X

      C Y

      A X

      C Y

      A X

      A X

      C Y

      C Y

      B X

      B Y

      C Y

      A X

      B Z

      C Y

      C Y

      C Y

      A X

      A X

      A X

      C Z

      C Y

      C Z

      C Y

      C Y

      C Y

      A X

      C Y

      C Y

      C Y

      B X

      A X

      C Y

      C Y

      C Z

      A X

      A X

      C Y

      C Y

      B X

      A Z

      C Y

      C Y

      C Y

      C Z

      C Y

      A Y

      C Y

      C Y

      C Y

      B Z

      C Y

      B X

      C Y

      C Y

      B Z

      A X

      C X

      C Y

      A Y

      A X

      C X

      C Y

      C Y

      A Y

      B X

      A X

      A Y

      C Y

      C Y

      C Y

      A X

      A X

      A X

      B X

      A X

      C Y

      C Y

      C Z

      C Y

      C Y

      C Y

      C Y

      C Y

      C Z

      C Y

      B Z

      A X

      B X

      A X

      C Y

      A X

      C Z

      B X

      B X

      B Z

      C Y

      C Y

      C Z

      C Y

      C Z

      B Z

      C Z

      A X

      C Y

      B Z

      B Z

      C Y

      A Y

      B Z

      B Y

      C Z

      C Y

      C Y

      B X

      A X

      C Y

      B Y

      A X

      A X

      C Y

      C X

      C Y

      B Z

      A X

      C Y

      A X

      C Z

      C Y

      B Z

      C Y

      B Y

      A X

      C Y

      A X

      B X

      A Y

      C Y

      C Y

      B X

      C Y

      C Z

      A X

      C Y

      B X

      C Y

      B Z

      C Y

      B X

      B Z

      C X

      C Y

      C Z

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      A X

      A X

      A X

      A X

      A X

      A X

      C Y

      A X

      B Z

      B X

      C Y

      C Y

      C Y

      C X

      A X

      C X

      A X

      C Y

      B X

      B X

      C Z

      C Y

      C Y

      A Y

      C Y

      C X

      A X

      B Z

      C Y

      C Z

      A X

      B Z

      B Z

      A X

      A X

      C Z

      C Y

      B Z

      A X

      B X

      A Y

      B Z

      A X

      C Z

      C X

      C Y

      C X

      C Y

      C Y

      A X

      C Y

      C Y

      C Z

      A X

      B Z

      C Y

      C Z

      A Y

      C Y

      C Y

      A Z

      C Y

      C Y

      C Z

      C Y

      C Y

      C Z

      C Z

      C Y

      A Y

      B X

      B Z

      A Y

      A X

      B X

      C Y

      C Y

      C Y

      A X

      C Y

      A X

      B X

      C Y

      C Y

      B X

      C Y

      A X

      A Z

      B Z

      B Z

      A X

      A Y

      A X

      A X

      C Y

      C Z

      A X

      B X

      C Y

      B X

      C Y

      C Z

      B X

      C Y

      C Z

      A X

      C Y

      C Y

      C Y

      B X

      C Z

      A X

      A X

      C Y

      C X

      A X

      C Y

      C Y

      C Z

      A X

      B X

      A X

      C Y

      C Y

      C Y

      C Y

      B X

      B Z

      C Z

      A X

      A X

      A X

      A X

      A X

      A X

      C Y

      C Y

      C Y

      B Z

      C Z

      C Y

      C Y

      C Y

      C Z

      A X

      C Y

      B X

      A X

      A X

      C Z

      B X

      C Z

      B Z

      C Y

      A X

      A X

      C Y

      C Y

      C Y

      C Y

      C Y

      A X

      C Y

      A X

      C Y

      A X

      C Y

      C Y

      C Y

      C Y

      A X

      A X

      C Y

      C Y

      C Y

      B X

      A X

      C Y

      C Y

      C X

      A X

      A X

      C X

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      C Y

      C X

      C Y

      B X

      B Z

      C Z

      C Y

      C Y

      C Y

      C Y

      B X

      C Y

      C Y

      C Y

      C Y

      B Z

      A X

      C Y

      A X

      C Y

      A X

      C Y

      C Y

      A X

      C Y

      C Y

      A X

      A Z

      A X

      C Z

      C Z

      C Y

      B X

      C X

      C Y

      C Y

      C Y

      B Z

      B Y

      A X

      B Z

      A X

      A X

      A X

      B X

      B X

      A X

      C Y

      C Z

      A X

      C Y

      C Y

      C Y

      A X

      C Y

      C Y

      C Y

      A X

      A Y

      A X

      C Y

      C Y

      C Z

      C Y

      C Y

      C X

      A X

      C Y

      A X

      A X

      A X

      C Y

      C Y

      C X

      A X

      A X

      B Z

      A X

      C Y

      A X

      B Z

      C Z

      A X

      C Y

      A X

      B X

      C Y

      C Z

      A X

      A X

      C Y

      A X

      A X

      C Z

      B X

      A X

      A X

      B X

      C Y

      B X

      C Y

      A X

      B X

      C Y

      C Y

      A X

      B X

      C Y

      C Y

      B X

      A X

      B X

      A Y

      C Y

      C Y

      C Y

      A X

      C Y

      A X

      B Z

      B X

      C Y

      B Z

      A X

      C Z

      C X

      C Y

      C Y

      A X

      A X

      A X

      C Y

      A X

      B Z

      B Z

      C Y

      B X

      C X

      C X

      B X

      C Y

      C Y

      C Y

      C Y

      B Z

      C Y

      C Y

      C Y

      A X

      C Y

      A Y

      B X

      C Y

      C Y

      B X

      A X

      B Z

      C Z

      A X

      C Y

      C Y

      C Z

      C Y

      C Y

      C Y

      C Y

      B Y

      C Z

      C Y

      C X

      A X

      A Z

      C Y

      A X

      A Y

      B X

      C X

      B X

      B X

      B X

      C X

      C Y

      C Y

      C Y

      A Z

      A X

      C Y

      C X

      A Y

      A X'
    parts:
      part1: "--- Day 2: Rock Paper Scissors ---\nThe Elves begin to set up camp on\
        \ the beach. To decide whose tent gets to be closest to the snack storage,\
        \ a giant \nRock Paper Scissors\n tournament is already in progress.\n\n\n\
        Rock Paper Scissors is a game between two players. Each game contains many\
        \ rounds; in each round, the players each simultaneously choose one of Rock,\
        \ Paper, or Scissors using a hand shape. Then, a winner for that round is\
        \ selected: Rock defeats Scissors, Scissors defeats Paper, and Paper defeats\
        \ Rock. If both players choose the same shape, the round instead ends in a\
        \ draw.\n\n\nAppreciative of your help yesterday, one Elf gives you an \n\
        encrypted strategy guide\n (your puzzle input) that they say will be sure\
        \ to help you win. \"The first column is what your opponent is going to play:\
        \ \nA\n for Rock, \nB\n for Paper, and \nC\n for Scissors. The second column--\"\
        \ Suddenly, the Elf is called away to help with someone's tent.\n\n\nThe second\
        \ column, \nyou reason\n, must be what you should play in response: \nX\n\
        \ for Rock, \nY\n for Paper, and \nZ\n for Scissors. Winning every time would\
        \ be suspicious, so the responses must have been carefully chosen.\n\n\nThe\
        \ winner of the whole tournament is the player with the highest score. Your\
        \ \ntotal score\n is the sum of your scores for each round. The score for\
        \ a single round is the score for the \nshape you selected\n (1 for Rock,\
        \ 2 for Paper, and 3 for Scissors) plus the score for the \noutcome of the\
        \ round\n (0 if you lost, 3 if the round was a draw, and 6 if you won).\n\n\
        \nSince you can't be sure if the Elf is trying to help you or trick you, you\
        \ should calculate the score you would get if you were to follow the strategy\
        \ guide.\n\n\nFor example, suppose you were given the following strategy guide:\n\
        \n\nA Y\nB X\nC Z\n\n\n\nThis strategy guide predicts and recommends the following:\n\
        \n\n\n\nIn the first round, your opponent will choose Rock (\nA\n), and you\
        \ should choose Paper (\nY\n). This ends in a win for you with a score of\
        \ \n8\n (2 because you chose Paper + 6 because you won).\n\n\nIn the second\
        \ round, your opponent will choose Paper (\nB\n), and you should choose Rock\
        \ (\nX\n). This ends in a loss for you with a score of \n1\n (1 + 0).\n\n\n\
        The third round is a draw with both players choosing Scissors, giving you\
        \ a score of 3 + 3 = \n6\n.\n\n\n\n\nIn this example, if you were to follow\
        \ the strategy guide, you would get a total score of \n15\n (8 + 1 + 6).\n\
        \n\nWhat would your total score be if everything goes exactly according to\
        \ your strategy guide?"
      part2: "--- Day 2: Rock Paper Scissors ---\nThe Elves begin to set up camp on\
        \ the beach. To decide whose tent gets to be closest to the snack storage,\
        \ a giant \nRock Paper Scissors\n tournament is already in progress.\n\n\n\
        Rock Paper Scissors is a game between two players. Each game contains many\
        \ rounds; in each round, the players each simultaneously choose one of Rock,\
        \ Paper, or Scissors using a hand shape. Then, a winner for that round is\
        \ selected: Rock defeats Scissors, Scissors defeats Paper, and Paper defeats\
        \ Rock. If both players choose the same shape, the round instead ends in a\
        \ draw.\n\n\nAppreciative of your help yesterday, one Elf gives you an \n\
        encrypted strategy guide\n (your puzzle input) that they say will be sure\
        \ to help you win. \"The first column is what your opponent is going to play:\
        \ \nA\n for Rock, \nB\n for Paper, and \nC\n for Scissors. The second column--\"\
        \ Suddenly, the Elf is called away to help with someone's tent.\n\n\nThe second\
        \ column, \nyou reason\n, must be what you should play in response: \nX\n\
        \ for Rock, \nY\n for Paper, and \nZ\n for Scissors. Winning every time would\
        \ be suspicious, so the responses must have been carefully chosen.\n\n\nThe\
        \ winner of the whole tournament is the player with the highest score. Your\
        \ \ntotal score\n is the sum of your scores for each round. The score for\
        \ a single round is the score for the \nshape you selected\n (1 for Rock,\
        \ 2 for Paper, and 3 for Scissors) plus the score for the \noutcome of the\
        \ round\n (0 if you lost, 3 if the round was a draw, and 6 if you won).\n\n\
        \nSince you can't be sure if the Elf is trying to help you or trick you, you\
        \ should calculate the score you would get if you were to follow the strategy\
        \ guide.\n\n\nFor example, suppose you were given the following strategy guide:\n\
        \n\nA Y\nB X\nC Z\n\n\n\nThis strategy guide predicts and recommends the following:\n\
        \n\n\n\nIn the first round, your opponent will choose Rock (\nA\n), and you\
        \ should choose Paper (\nY\n). This ends in a win for you with a score of\
        \ \n8\n (2 because you chose Paper + 6 because you won).\n\n\nIn the second\
        \ round, your opponent will choose Paper (\nB\n), and you should choose Rock\
        \ (\nX\n). This ends in a loss for you with a score of \n1\n (1 + 0).\n\n\n\
        The third round is a draw with both players choosing Scissors, giving you\
        \ a score of 3 + 3 = \n6\n.\n\n\n\n\nIn this example, if you were to follow\
        \ the strategy guide, you would get a total score of \n15\n (8 + 1 + 6).\n\
        \n\nWhat would your total score be if everything goes exactly according to\
        \ your strategy guide?\n\n--- Part Two ---\nThe Elf finishes helping with\
        \ the tent and sneaks back over to you. \"Anyway, the second column says how\
        \ the round needs to end: \nX\n means you need to lose, \nY\n means you need\
        \ to end the round in a draw, and \nZ\n means you need to win. Good luck!\"\
        \n\n\nThe total score is still calculated in the same way, but now you need\
        \ to figure out what shape to choose so the round ends as indicated. The example\
        \ above now goes like this:\n\n\n\n\nIn the first round, your opponent will\
        \ choose Rock (\nA\n), and you need the round to end in a draw (\nY\n), so\
        \ you also choose Rock. This gives you a score of 1 + 3 = \n4\n.\n\n\nIn the\
        \ second round, your opponent will choose Paper (\nB\n), and you choose Rock\
        \ so you lose (\nX\n) with a score of 1 + 0 = \n1\n.\n\n\nIn the third round,\
        \ you will defeat your opponent's Scissors with Rock for a score of 1 + 6\
        \ = \n7\n.\n\n\n\n\nNow that you're correctly decrypting the ultra top secret\
        \ strategy guide, you would get a total score of \n12\n.\n\n\nFollowing the\
        \ Elf's instructions for the second column, \nwhat would your total score\
        \ be if everything goes exactly according to your strategy guide?"
    title: '--- Day 2: Rock Paper Scissors ---'
  3:
    answers:
      part1:
        correct: '8185'
        wrong: []
      part2:
        correct: '2817'
        wrong: []
    input: 'shzsFcPssFhjFssBzdpRcNHNZrpdJdJVJZ

      fwvMCntfCCbSbSbtDgDNrDtDtJHZVH

      GbCwwbwwnGrLhBzjFFFsWPhL

      PpCqRsqqmmtCwMJC

      LHFrLLHDSNHlfWNhDzmjzzJlJzPJMvPJjQ

      SGSWDNrhZhPDSWDZLgVVRgbRppgpGVnpnn

      GRRjbVjmJZlgMRzzrN

      FpDptHpfHfnpPTvDFTWpFPnPcMfNCClNrzcVcrMMzVsCZlsZ

      TFTQDnvLHPFDtVbLwbjdGjdwwJ

      lhljvvhCjjzhjszzBPmnmGVZMGzG

      FbTcTwbtSFdtcMPnTBPQVnnBZT

      SFMpHDtNDSSbSdwppvgJWjJCJJgWgvlJHH

      wzNCWpzCzJnWWpRRNdJrgHLhjfbLrHrchV

      lBMStmPmmLQDPQZlshrdhgrfrcrrddgHgs

      mvGDGQSvDPBlGMLGCvCWpNvpzRWFwqRw

      stBttBThtDZqPWssPWZp

      gRggwwggCGFSBBvPRpHZZrHdZLZq

      ccFJGCNJmmGQzbTDhnQhBBnB

      HJqMqtZbJMmJTqtLtVMqhpfphNdQfhfzzjhhlHll

      rWSBrnwFwWCvwWCwBgPgCgzjQccQhhgRzcdQzjfcNfzR

      CWBCwCvCvvwssWLMtJJGMdMZJsGV

      nFwSFQwsNrrsssSwCrhrCNnfcCRgJRMJTJcMfRzMCMCRvW

      DdbGdLZLttllWWvTzgzzgR

      ZqGzPdLtDjBjDZGPZVmnhQFwqrFQhVFnss

      sNNpCjttjsJjSpgpWjslCTnqqSVffrnhSfDhmhrhfm

      dBwcGzbPBHbbwZcwJbcTTFDFFFDVrdVmFdnDqf

      HzGcczQPHGwzPzGHRctWlvRgtvJlvNlJvRNj

      cFNCFdvcCHvFBCZcwBfRSpttGhDmCghGShmSRt

      QjLnTTzQVzTTnLMqhDgPhGDDSjGPrgSh

      TTJGnJJlLQdNWZWJNBJZ

      WHBpHcMDZHLDbHLtGCnmRmLNGmRqvsCC

      PzTFzPPTJzrSbGsvnmqfsqfqRz

      dJSQQdVFQgjTrjQPWcWHbBVcZVccZtWp

      JDtnRtJzNzTTNlHc

      rQPJFrLPGMMwrGPFwjFMVLjSTWHdWBTdSWdWZlcWTHlZ

      MGFrCvLLwrwPFVVhvLMGGtnqfsmRJgDnqbRgfbqmfC

      jnTtFjcSSvctJjznzvFmpqqPMqQDRVpRqPzqQzVQ

      bhHBfrWpfHsfGNllRrRCPqDCqPqq

      gsGZZpbWgbwHWGNgfZNjvLSTTjtnTgjSSSSJmL

      RLQNdVNnRQdQHVVLGpspNqvtsqptqpTtsp

      MlRWwbRBBFMFjCTFTTFDvj

      WmlWBmBwwmrndnmLRHRQ

      WnftJWlfnWSHGCjWWWSCFqFGBDqBwMcDmmMmGmqD

      pTNhpTrPhhhRPzbhrppLhThLgqDmwccwqPBmMMqnFBcwwmBB

      ZrhQTpzdjSVVtnvZ

      jgtnJtBjtlTdJBZJVQBngQGDCGWpPGCcPWCbWdWMbcpP

      wHstNNttSHPDmHcMCp

      rrFFSvLLNfsFtNSqrtfrhsNjjVTBVgVvnTBvTQvjTgjVZz

      qhZwlqFqFwlJwrDHqHcDvgcNzv

      RCCTQmjCbQTBtRTbjJRDpBrgDHPPpPDvHccDPc

      VmjVWstQJhlJlGVJ

      GggpGwZmgvgJMvbJFQQDbDFbBbFCQDCW

      rtrLzNLtNSPnNqDSQDcQCWlqBQ

      VtzdRPtztLtVRtZmmMTRwCGZpMwp

      vtvqjsCqtshfjcWFHWGjGFJj

      zGrnzDDMpPcTHcSTVTJP

      DbDwMbZRDrZdBBnMznZMGZDfwtlgQhsqCttClsqvsLfCff

      JLzLtLsrzsQdvrWRwMHwcc

      qPmCTzlPjljjFTZmWwcwwvHMMRWwHvMm

      PFqZnVCqTCNjCzNgQsbGBLzLQQ

      CBnppDHllVpPCBshBHpjDTSmZcSrfwvmJcDDTJfw

      dFRLdLFQzNSTBTSNmBJv

      FzFFzRMBFWtQlPlsjjPVMnhC

      CVCfwnfdVvBdBbTNTT

      LNzsHPNWsDjTZqDHqT

      PtLgQsGQLSzWLstPgGWcgQLSNrpplffrnrNhpVCwlGVlrwMn

      jPPVqPsHffzVnHzvSgMcCJGGMSVCll

      pdbpDpBLNmNNppJgcvgSllGjDSGQ

      hrbBwLpjLhhhNZLhNrhZZLHzfsztFzzsrtHfRFnFfRHf

      tdjBdbmSfdHBdHHmZlWjFrnlWQlqvMFvFn

      pDNDJhLhPVPLLLJphJLwNcwnQTcWWTqTrqMWTZvqMrlvFM

      gpVLhNwpgZJCghCLDNwphgmsBdzHHHmSstmfggzdbR

      TfMpfMBVftLMDBSjWDHgzHbgwLgHHvdzggzs

      QJnZcFFnZRHdHjJvwgdg

      RjjRRnmNmmZNjZqZnQcVffBrWqVTqrtffTSTVV

      fZTdTVcVjrjdBzdTnGtgnnGSHHNFGn

      thMWPtPMslmGnWnNnS

      thvbMvQMRphhLCjrzBjZVdcQfC

      MpmgZFgMGdrFrBCVnJ

      JsbJlTTlvLQbVffRRvBBRVjd

      LWlbhHlJhLTJmmGcMMHNmNgN

      bhvmhPrbhqNqQRRGzQjVvvRL

      wTwBZDBTwwggfnngcDfdsVVFQCdzCzDVRsFdQs

      pngWMcgzMgpZWncnMpWNrbNHrNbmHhltWlbl

      nPndBjLPscWSccBVGnScsSzMdhMppMthdMgpMgrzvhhp

      CCFTFDwqZqCCJmhvpDzztVzDNztp

      qQFJTbRVbmCfwTwfmnnssWBGnLnWlRLSGn

      JRlJDSvLRRCdvmDSvdlbZNVBSWZGNgWsZGNgZBVs

      QrjPMqMnLzzjLjFnNNgBpsgtgGGGVZ

      hrjrFqjqFrQfMHPhQzDvvCLJdwwwmvbJbwDH

      HDGrDDDpNsGQNdZQ

      jpjgtgjSjpjllfZZtZsvNdtshqqq

      cbgMfjclWTJcMwjWJfpfmVPLPBnVBHnmVbnmLBbD

      rPrMZNsNrsvrwqvFFFdgQWNzLJJzRW

      pStppStHmcmHpgVSllVcbVbWWDdLFhdbzdRRFhJFLLRF

      cltCHmCBmtSlgjpllgGvTwPZPMfZvPsCMCwZvC

      FRQQMdlFMDWRFQRQMQQDWdFbSSSVJSBbJSlBVVBnPJnzJL

      rsftPfhsrgwznSzzHSLgJG

      fhNsjrjhvsTTvdjcCRMRMRPcCW

      tRtJttHFrjtDQHHBQMMBgMBSghhZQb

      vqWPLpLvqrmPdmqwvqfmPhNBBBlSnbwbgnlnlhNSZZ

      pGpdfzLLspddmqsqPvfvvPpGTVcJJCDRjHrccRtDjcRDFD

      GJMHCdTMWJRhSTlhhSPllt

      fVvqpfBFrqvqNzzgVDFrpDPmSVtQSlSmhjwltlRtmVhn

      pzpBNDBzfDrsNsDRJJRdCssMLdLZWZ

      hFfvWWvdpCwwcwFhphpcZCMmllHLfmbQlbrQLBJmGgQrQm

      nVSNGjGzzSVNTsjzSJrbSrHBSHlrrmQHJB

      PttTNsTRVnNjNqRnzRzRWCCCcpMCWGPMwwFZvFwW

      DvZbFnDDsqDBwwRQgNBm

      HhWpWWRMWChlChdHLlGlGtQtggSNPSSpgPmNgPJQtw

      CMlWGMhhCVHlLCdHTHdrGHdbzjVqnzcvqqjRjFbbzbFFqR

      ZZgCNqqBmjZsNgZCqJgNBdrLFHbBrWlPdHWFbPnHPW

      TVwTDfzDwSDzmcSTcrzdbllnHPHdFlLzbF

      tvDQwVtVvDVmtRsNMgRpJg

      BBpDCpNJnmnpnDDmDGGmtTzqHcGTvTTjTbGjHLVcLb

      swNNhPwwHzTVwwHw

      rPRlPRhSQmmBDpnNfl

      pbRhffPzcPDmfcNTpVBLpBjMGBGjZLLg

      ssrCsqrszgJjZMqZLQ

      SzCwnsllCrssvdrvwzPmDmPPbFRbSThPTPDD

      QWLfcfczQQpcDTpLPfdZRRvRRVqbFWvZbvtqvv

      NsGGJBhCmNdZVqsbdssZ

      rMwwwBBJMrdzPfQMpzMnLQ

      rdtCQhrCtQQprtTWQCHFjPgGBPdFPgvBqRRPqB

      lsVsSnVSbLmmgBcgTLTFGgvq

      wTTDTszsbzMDppJrJhDQ

      ZlmsGLBVCBBZFCFFHqcHVvQhqVQSSHpH

      dbbTRMrRwwzDfrTbFtMvcptvHFQQpqtc

      gdJTDWgfwDwTwmgmNPnNsgFBlZ

      PWhWhGFzzzrLdHCPccbJQJcHPD

      NRpVTpTgRWVlHJNHMcHQMb

      pSRSpVSZWRSTZjgTRTWnFLdZLrrndhdzZvtvzn

      LgctLgVBVLhlPjqRhBLVcVlhbDDcGnNGfwCrbNDnrGbGCJNw

      HmppHMWWmQmMqZZHWQrDDfDCffJrDGJrCb

      qpWZsZZZMZWTLPhTRgTtThRP

      hfhQfFQWzBfhfTQdmzdLDtDjtvHLjt

      qsgpcqMNRmgpqsCwpCmZDvjwvdddHZHvZDtrrd

      SgmNmqScbTSJbhJQ

      dvMTQvTnZJsrQdbbSvMVZMblDwlflfDGgwwHcfGjPfjjrG

      FqBLpBpFpFzRzqNFmgjGlDRHcwPPGwgcgs

      tLNtWshsLLqWMJhTQVVbhvJd

      bgZLMZgzbbLCcPCbMZbcNMgBqSTqSWVtSzvvTTBTqBvRBW

      FhQpJQnGrlhGlrnTqRtTRJqSwDwtVR

      FqlnnFnqFHnGHHdNZdbZbCNMdPLMPb

      HHFnbftcfnfbbTbTnHTNVZZzJlPQlFrFzVJFZsdr

      mvpGCBgwqCvLCqvMQWWzsQQWlPzwzsrV

      hpGSGgqSvqbHcnhfVfct

      lGVrnHsGcnVHzscrlGjHcrHqqWPlJCPJClTLLqCSPLPdqS

      fRbwbtMQZtMMRFMSqfJTTWCTJPJCmd

      ggdvtvdbVVGnpDGg

      BnBjTcbnvhjjlMnNJJfnDnQDGdNDfP

      qwFqVSWwqLpWFmFVCSqFpDDCJNJRQTRfRDGPfdfDQN

      zwHwWVVWWFSqqwWTLqzzztHMvBhlcghblMlcttMllh

      PFFNPNPmlFllbctNLmcjBstrsVrQHJSSHHSnnB

      fddfDhdwGhTWWTDMwMggssjsjndsBsjsnSrVqSVV

      MCvvTWvRMwCvGPpzCcmbplpCVC

      thTqlPPTNbGNhGdqRRhRrNtFWnDnvvFZDpnFvfQDZtvWvv

      HcMzVcVVcHrgHzcMcmmgfQvFQnMjnWDjfnvjQFfQ

      VSmHJLHBJrTrJTlT

      NjnsHjLLjNRddNdBFBSR

      ftsbqfDcDqsrDtqsfSVBhJVFJgdBRVFS

      wvDqwtDlsDDczjzjHvLzLQQM

      qDwstwDtRfpJfVhBVZBMvnlRvv

      zSFzQHFWdgZBVTZhTzrp

      NHdggjGjWHQFPWHNPPbpJfPDtCwCtqDqJfbt

      pvnbqHvnTvlCCpjsBsMGBGWWPp

      RJSJhJCRVJmJwScrhSJdfwFsBGhZBjhGFFFFGgFPGhZW

      cdRrdmwtfcdSmLtcSCQlvQNqQTlqqvtTlv

      rnSlSrgWjVGpTTRhSffpRd

      HtgHPsNNgNHszPcTBphMdhHhBcTc

      JNNbZPZZsszNmtDbPgsmJlwFvWVnCwrlmWlnjnGvCC

      WrVBVgVGGQCrSTTqvVjDqDjv

      FmwRRwwRQhhLFMjFMzdqSSzS

      RcJtbnnLtQWrGHcfrP

      vpzssjmVjVZWNZzzQwtQwccpQhgtQCct

      qDdfLMnMrrTbBLqTqltlTfbGQnghgRwggGgRnhhccCJJcG

      MtdLfSSSddMftlrjjzsSWVSjFvjNvs

      qTRPpRPzJglzGJzpGRHWHljwDtbwffjtbhjfwNfHmwwf

      SZLVdsvrrdFdBcdZvsBdDCNtbmftNwfNbNhCNvtz

      MLzzddLsQRppRlQGPq

      PDDpdJgtpppGgttgdGdgJFzLjVcvVnnCTrVrRPTLvwnTTC

      ZSbHBsSNlZcsfNnnvRrnVjrHwvCC

      NmSmsfsfhmzcDmctJW

      NbrLfrrLqpqWQHtBzbFttJgcgB

      CmwjPPjjjShPvljwvwwjPBFttBtcHzFJcHTRHJRRmT

      CCljjDGhvPCVdVSCdPvrrNfnnQsGqMpqqMqnFW

      bdPdbcDZlddsZbHjrrgrmZmCZhCGjv

      BffLfLVFVMMBRfwMpfzhFGFhGWvWvrhNvvNj

      RMBpRSnffBJjSbJqdPHsDcbqtl

      BgwGwDDZttDDTNND

      WzNNnFRWFtTFlFsh

      WJjPpPqqzWRbrqnNqvVvgvvdcBwgdrVBZG

      FFbMVMFPvJppgvcvrZMjHlCJWHmHHBlqhCmqChCl

      RGQVdVVLnLsQnQnnqWBlBmDRBDWWlhBD

      SftLzQndGfVgFfjvvM

      npvLlFLTWWqdLnJCmBmmpjQjjmjB

      tfgDwzwVVVVtgtrsJtrbjSPQjQmjNBCNBNhPHDHC

      ggVzVtMRgzMrvJLqFnnRnnRT

      gZFZssWgNZTDwHDWzsFwWDQMMpqqpBPMjFtMPSQFqqqM

      vrmvhdnVvQpftStnMN

      JCdLddhhdJdcCdrrmCGhlgNsWDWDwWsgwHgHLZHW

      vSsSGjSPvjvRSGpFprFbqFpppRfp

      ZdmlndtBZbwrwfpWFn

      JmdHdBBHtgllZldBhJZldLLBjPVQTfvGPNzQQSjjzPgTGNTs

      TjTjBjVrTsLRRrMBsMMgzLqGGqgQHQdCQGgpgd

      nbZcmNnPNcbNftvhlhZpgQgCqdSpgCHCqPFzSH

      WfcNvtmmNmQlvNcbsWWjMwMVMRDVMDJM

      hHHnfZSwHDgHcfclSGSnvrnvBCvWWntvzvzbWWVq

      dTJTmspFTsFdRRLvtvLzvvVqtPVtrb

      VFMNFpRJNTppTpsJVRcMGgfGfgZwghgGfcGh

      lLGvwsMJLCMVnTrCrVdHRd

      tbzqtDNNBpNWBtqzfRrFFnrVTTdrQVSVGp

      tztfzmfzzPDzgWNNBbhGMlJLsvhJJjGJhGmM

      rHrVJQVQVJLggDQQLbTvdCCSTdWLLLbCbS

      pNtnwPthmZGRpmPFtqbMSzqffFSdTvbSzW

      GpvvshwtmwsZDljjssHjVBVj

      SmhJdtJhhzQSrzVhtQbtBRNfnFNSnDNGRfFGGMgR

      lHwqPjqwTjLHCWLvPpvNrNMvnNGNfNGNBffGRN

      lCrPTrwpPZWlqPlqpWWqZjsmJzbzVtVhhdsJcQdddZVJ

      QqpCWHdQdVQlWcQCqcfRjnZZZPDnSPqPhhqZ

      tmmzgWGgwJwwStSZZDRnZssR

      GbFbLLvgmMMwGgmLCrppQrWVlWrFTHHd

      qdqCgSVdVSVqfwsdZhpJspZsph

      RjZBbmRlrlmmJwLNNNhLpwhB

      vZlRrtTZCzCMfSPT

      JBjhCNwjrlJlHJJRsscZrTcvLLgTsLPP

      dDztmntCSgbLgqTzgc

      fGVWnSMFtVGMNNNQllBjWHJC

      dSDhVVdVZtnSgHQGThQvFNQQqF

      LcfLRpMpcBpbrJfsbsscBNWRNPRGHvqPdTGPGqPWFH

      spmrCcrdJJpLLmcmLLLDlzSzCCjVwZVtgnSZzn

      ZJtgPTHtZPZQGbtNzzprVWWVrbrpCD

      BRlfcRmBhSMVBqSVfBvNWrDrjWCjjzprCDCl

      LfMRSmfqfSLcnnMqVSfccnhZwJFHZFTGZQGFLggwZTZGPJ

      BChWddRRRcfmDbfhDP

      MgpMFFsvMfGwvLgPjQPzPPmDcztDtw

      NFgJpqvpLgqFnWWVNSfnNSCR

      zMMMRmMfJpfhpzQJLMVtjtjPntgBtlZlVgJP

      SdNbZvZbvbHTNbZbSWTdrTVBglBDlWBjDPDgntPqBDPt

      rrNcrFwNdSrfzwMzZMLQQs

      JPmCSfHTGJdTCbHgpgqLgRhghhffhg

      ZWSSFVSVFQghQvwpphgh

      lsDtZjVMMSdCNdbGCbjb

      PBQPvDvVVRvQDqLDzJTlzwjz

      tGcZTcdgGcncdrFrsTjzJSJqJqqwHSzzSZwq

      CgtgdFgcFCMnMgsGFGGQWPQpQTCBvbNpNVVWVT

      FHVFWMHMgVhnLWWMpnppfcdZNcPplnfn

      RSvSCBSqGgDRjqCpPlPpppTpPjlcNP

      zRzsGgJDqJwLVWVFwM

      ThhWhNthVWTWqbWbFWbTdBtWSdMlHSlGlCGCdsCMClmnSlMn

      DPPpvvfDHfLgDHvzpvPDsssMsmmzsMcClScMMcGG

      rgPLHHJJHgZfvvZQQZfrpfFqBBwFBTNTBNBwtthQwVqt

      JJgSWDSmSDQCFrhbRLSwLS

      VznqzVNsMsZLdqslbRChtbHdHRrwHb

      LVfNLMsLTmWDpBpf

      cbTsnNpcnnchllFQlMRgJhRP

      WddmdMVSBMWSBWjwCJVCPRwPFCQRRC

      DWSSfjdSrTpDnHHMbZ

      fgsVqqwQQtHhCrDfJH

      pvbnBZWBbvWbTdthrJbDmqrmHq

      TvZSNSNNSvFMBpqpnLnTBZBFGQwlQFggcFzcVGRlswsRll

      zfMcQHzPtRNvlllc

      BLnMhbZMLJLNNVtCdNgZgt

      BJGFpqMBhBLLMqnwBhbrbhLssjFzssjfDzsmFmjmQFQPjT

      JPBJPnpBFrqBJHtjlCjHJcCthM

      wQZggQWQGfZFVmmGfDRjlvvNcvlNDhcNttlctt

      SfmWfwVFwVGZWQVGSTdTbBpTPSqBbLnnrn

      RJqBRJbqpqqJGvqHMmcfczfcjvHQfm

      llgVnSWSlsssTnlWjhTcsZMcZcZMZMcccMNmcH

      TnFhhllnWCnVCTllLnhhVSrbDDPrdpjRRqjBPRBBpbFJ

      mRwRRNDjNTqwDNjNnNRTsQLcQWpQWZJLlLpQWs

      PMFGCSzzgbBVzCGShVQZcgWsQLLftttQtlZZ

      SlGVldCGGbBPMhPCVSBrNNdjRqjDrNmDnmrRwN

      mqGGqGHnqGBCMrnGCbbbLgTTFFNNghHNTj

      SdRfcsDPPcDdRzWPWltSlscwTSbShhgpQhgbFLbTQFjwhN

      DPWWZzzztsDDtfzlscsPdcWZnVMNVqqGJnBrVqCrMrVvZnBJ

      ZgglFCrrrlrWCJswHmwRVmFSwSsP

      zhzqBLcjjnpzMzjhTtcqnVGbwssVRmqbHNPbwPsVNH

      ftBjzLtptRWdvZlQQZQf

      nGpsMncVRMGSnfsBllZdppwrTljZrQ

      gcgHmtbCthHWhwBFBWZBlWlWrd

      bCDDqHhcqbbtqcqtvJMzsGRsvVfPsfnzJV

      TclPvSGZsPZRjhjWDgjp

      JtnwHFtJqtwfQfgWgRWhdhjtgdRM

      JBwnHwgFFqVJrsGmPvNTPsVvSN

      ZJnfZNnDNZJLzNntDtDNNzNWTVBPrrvRRGdBcVRfPPcvfdMr

      CFgjFmggQSQQmSggVMMvRdTvBVRjrdrc

      mbsqQFqFgwwmgmSbwQWWLDWzpLcLnzZzLbLL

      PnwSFSLSTwbbHdtstW

      RrDZVVfJNZCmDCfVDVlblZHbddtHScbWbMjt

      NmzqhzCCqmzffhCCqrhhLLnPvpnTPPgpGTTBSL

      ShhfLSDDFMPQddpMrDgNbjzffqqqzgcjbqZR

      sCstmwJwVBtmTltVmTVbRbcbcRvqvrZvBRvZbR

      VwCnwnVrrrWShWPHHDdQFL

      pbpDpWjZMmFCmmmb

      jTjtJLJgJncCFmnJFC

      LvhvhTQhBSdRNtLNsSszlGrHSGjZDlGf

      JrhvTNJJhhCrtVtcrNLwDBSBwqzDwQVbBLQS

      RnCgHmHHGMdPsGMfDlDqlSQbQnQQDbzD

      RdPMPsmWHmjfMffPcCWrptcprpFTFrFp'
    parts:
      part1: "--- Day 3: Rucksack Reorganization ---\nOne Elf has the important job\
        \ of loading all of the \nrucksacks\n with supplies for the \njungle\n journey.\
        \ Unfortunately, that Elf didn't quite follow the packing instructions, and\
        \ so a few items now need to be rearranged.\n\n\nEach rucksack has two large\
        \ \ncompartments\n. All items of a given type are meant to go into exactly\
        \ one of the two compartments. The Elf that did the packing failed to follow\
        \ this rule for exactly one item type per rucksack.\n\n\nThe Elves have made\
        \ a list of all of the items currently in each rucksack (your puzzle input),\
        \ but they need your help finding the errors. Every item type is identified\
        \ by a single lowercase or uppercase letter (that is, \na\n and \nA\n refer\
        \ to different types of items).\n\n\nThe list of items for each rucksack is\
        \ given as characters all on a single line. A given rucksack always has the\
        \ same number of items in each of its two compartments, so the first half\
        \ of the characters represent items in the first compartment, while the second\
        \ half of the characters represent items in the second compartment.\n\n\n\
        For example, suppose you have the following list of contents from six rucksacks:\n\
        \n\nvJrwpWtwJgWrhcsFMMfFFhFp\njqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL\nPmmdzqPrVvPwwTWBwg\n\
        wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn\nttgJtRGJQctTZtZT\nCrZsJsPPZsGzwwsLwLmpwMDw\n\
        \n\n\n\n\nThe first rucksack contains the items \nvJrwpWtwJgWrhcsFMMfFFhFp\n\
        , which means its first compartment contains the items \nvJrwpWtwJgWr\n, while\
        \ the second compartment contains the items \nhcsFMMfFFhFp\n. The only item\
        \ type that appears in both compartments is lowercase \np\n.\n\n\nThe second\
        \ rucksack's compartments contain \njqHRNqRjqzjGDLGL\n and \nrsFMfFZSrLrFZsSL\n\
        . The only item type that appears in both compartments is uppercase \nL\n\
        .\n\n\nThe third rucksack's compartments contain \nPmmdzqPrV\n and \nvPwwTWBwg\n\
        ; the only common item type is uppercase \nP\n.\n\n\nThe fourth rucksack's\
        \ compartments only share item type \nv\n.\n\n\nThe fifth rucksack's compartments\
        \ only share item type \nt\n.\n\n\nThe sixth rucksack's compartments only\
        \ share item type \ns\n.\n\n\n\n\nTo help prioritize item rearrangement, every\
        \ item type can be converted to a \npriority\n:\n\n\n\n\nLowercase item types\
        \ \na\n through \nz\n have priorities 1 through 26.\n\n\nUppercase item types\
        \ \nA\n through \nZ\n have priorities 27 through 52.\n\n\n\n\nIn the above\
        \ example, the priority of the item type that appears in both compartments\
        \ of each rucksack is 16 (\np\n), 38 (\nL\n), 42 (\nP\n), 22 (\nv\n), 20 (\n\
        t\n), and 19 (\ns\n); the sum of these is \n157\n.\n\n\nFind the item type\
        \ that appears in both compartments of each rucksack. \nWhat is the sum of\
        \ the priorities of those item types?"
      part2: "--- Day 3: Rucksack Reorganization ---\nOne Elf has the important job\
        \ of loading all of the \nrucksacks\n with supplies for the \njungle\n journey.\
        \ Unfortunately, that Elf didn't quite follow the packing instructions, and\
        \ so a few items now need to be rearranged.\n\n\nEach rucksack has two large\
        \ \ncompartments\n. All items of a given type are meant to go into exactly\
        \ one of the two compartments. The Elf that did the packing failed to follow\
        \ this rule for exactly one item type per rucksack.\n\n\nThe Elves have made\
        \ a list of all of the items currently in each rucksack (your puzzle input),\
        \ but they need your help finding the errors. Every item type is identified\
        \ by a single lowercase or uppercase letter (that is, \na\n and \nA\n refer\
        \ to different types of items).\n\n\nThe list of items for each rucksack is\
        \ given as characters all on a single line. A given rucksack always has the\
        \ same number of items in each of its two compartments, so the first half\
        \ of the characters represent items in the first compartment, while the second\
        \ half of the characters represent items in the second compartment.\n\n\n\
        For example, suppose you have the following list of contents from six rucksacks:\n\
        \n\nvJrwpWtwJgWrhcsFMMfFFhFp\njqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL\nPmmdzqPrVvPwwTWBwg\n\
        wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn\nttgJtRGJQctTZtZT\nCrZsJsPPZsGzwwsLwLmpwMDw\n\
        \n\n\n\n\nThe first rucksack contains the items \nvJrwpWtwJgWrhcsFMMfFFhFp\n\
        , which means its first compartment contains the items \nvJrwpWtwJgWr\n, while\
        \ the second compartment contains the items \nhcsFMMfFFhFp\n. The only item\
        \ type that appears in both compartments is lowercase \np\n.\n\n\nThe second\
        \ rucksack's compartments contain \njqHRNqRjqzjGDLGL\n and \nrsFMfFZSrLrFZsSL\n\
        . The only item type that appears in both compartments is uppercase \nL\n\
        .\n\n\nThe third rucksack's compartments contain \nPmmdzqPrV\n and \nvPwwTWBwg\n\
        ; the only common item type is uppercase \nP\n.\n\n\nThe fourth rucksack's\
        \ compartments only share item type \nv\n.\n\n\nThe fifth rucksack's compartments\
        \ only share item type \nt\n.\n\n\nThe sixth rucksack's compartments only\
        \ share item type \ns\n.\n\n\n\n\nTo help prioritize item rearrangement, every\
        \ item type can be converted to a \npriority\n:\n\n\n\n\nLowercase item types\
        \ \na\n through \nz\n have priorities 1 through 26.\n\n\nUppercase item types\
        \ \nA\n through \nZ\n have priorities 27 through 52.\n\n\n\n\nIn the above\
        \ example, the priority of the item type that appears in both compartments\
        \ of each rucksack is 16 (\np\n), 38 (\nL\n), 42 (\nP\n), 22 (\nv\n), 20 (\n\
        t\n), and 19 (\ns\n); the sum of these is \n157\n.\n\n\nFind the item type\
        \ that appears in both compartments of each rucksack. \nWhat is the sum of\
        \ the priorities of those item types?\n\n--- Part Two ---\nAs you finish identifying\
        \ the misplaced items, the Elves come to you with another issue.\n\n\nFor\
        \ safety, the Elves are divided into groups of three. Every Elf carries a\
        \ badge that identifies their group. For efficiency, within each group of\
        \ three Elves, the badge is the \nonly item type carried by all three Elves\n\
        . That is, if a group's badge is item type \nB\n, then all three Elves will\
        \ have item type \nB\n somewhere in their rucksack, and at most two of the\
        \ Elves will be carrying any other item type.\n\n\nThe problem is that someone\
        \ forgot to put this year's updated authenticity sticker on the badges. All\
        \ of the badges need to be pulled out of the rucksacks so the new authenticity\
        \ stickers can be attached.\n\n\nAdditionally, nobody wrote down which item\
        \ type corresponds to each group's badges. The only way to tell which item\
        \ type is the right one is by finding the one item type that is \ncommon between\
        \ all three Elves\n in each group.\n\n\nEvery set of three lines in your list\
        \ corresponds to a single group, but each group can have a different badge\
        \ item type. So, in the above example, the first group's rucksacks are the\
        \ first three lines:\n\n\nvJrwpWtwJgWrhcsFMMfFFhFp\njqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL\n\
        PmmdzqPrVvPwwTWBwg\n\n\n\nAnd the second group's rucksacks are the next three\
        \ lines:\n\n\nwMqvLMZHhHMvwLHjbvcjnnSBnvTQFn\nttgJtRGJQctTZtZT\nCrZsJsPPZsGzwwsLwLmpwMDw\n\
        \n\n\nIn the first group, the only item type that appears in all three rucksacks\
        \ is lowercase \nr\n; this must be their badges. In the second group, their\
        \ badge item type must be \nZ\n.\n\n\nPriorities for these items must still\
        \ be found to organize the sticker attachment efforts: here, they are 18 (\n\
        r\n) for the first group and 52 (\nZ\n) for the second group. The sum of these\
        \ is \n70\n.\n\n\nFind the item type that corresponds to the badges of each\
        \ three-Elf group. \nWhat is the sum of the priorities of those item types?"
    title: '--- Day 3: Rucksack Reorganization ---'
  4:
    answers:
      part1:
        correct: '595'
        wrong: []
      part2:
        correct: '952'
        wrong: []
    input: null
  5:
    answers:
      part1:
        correct: JDTMRWCQJ
        wrong: []
      part2:
        correct: VHJDDCWRD
        wrong: []
    input: "[P]     [C]         [M]            \n[D]     [P] [B]     [V] [S]     \
      \   \n[Q] [V] [R] [V]     [G] [B]        \n[R] [W] [G] [J]     [T] [M]     [V]\n\
      [V] [Q] [Q] [F] [C] [N] [V]     [W]\n[B] [Z] [Z] [H] [L] [P] [L] [J] [N]\n[H]\
      \ [D] [L] [D] [W] [R] [R] [P] [C]\n[F] [L] [H] [R] [Z] [J] [J] [D] [D]\n 1 \
      \  2   3   4   5   6   7   8   9 \n\nmove 4 from 9 to 1\nmove 6 from 3 to 1\n\
      move 7 from 4 to 1\nmove 2 from 8 to 5\nmove 1 from 9 to 7\nmove 1 from 8 to\
      \ 5\nmove 3 from 6 to 4\nmove 6 from 1 to 5\nmove 14 from 1 to 2\nmove 1 from\
      \ 6 to 1\nmove 2 from 6 to 2\nmove 9 from 5 to 9\nmove 2 from 4 to 5\nmove 2\
      \ from 5 to 3\nmove 6 from 9 to 6\nmove 4 from 1 to 2\nmove 2 from 1 to 2\n\
      move 5 from 6 to 1\nmove 1 from 4 to 9\nmove 4 from 9 to 4\nmove 2 from 3 to\
      \ 7\nmove 2 from 4 to 9\nmove 2 from 9 to 6\nmove 5 from 2 to 9\nmove 1 from\
      \ 4 to 9\nmove 1 from 4 to 3\nmove 5 from 9 to 8\nmove 1 from 6 to 5\nmove 3\
      \ from 7 to 5\nmove 2 from 1 to 6\nmove 5 from 6 to 8\nmove 1 from 9 to 4\n\
      move 1 from 6 to 5\nmove 9 from 2 to 7\nmove 1 from 2 to 3\nmove 1 from 4 to\
      \ 6\nmove 8 from 5 to 4\nmove 1 from 6 to 1\nmove 2 from 8 to 6\nmove 1 from\
      \ 6 to 4\nmove 7 from 4 to 6\nmove 1 from 3 to 1\nmove 1 from 3 to 4\nmove 3\
      \ from 4 to 1\nmove 2 from 3 to 4\nmove 2 from 4 to 5\nmove 3 from 5 to 7\n\
      move 7 from 8 to 2\nmove 5 from 1 to 2\nmove 12 from 7 to 6\nmove 2 from 1 to\
      \ 9\nmove 2 from 9 to 1\nmove 1 from 7 to 5\nmove 6 from 2 to 3\nmove 5 from\
      \ 2 to 6\nmove 6 from 2 to 6\nmove 4 from 3 to 1\nmove 3 from 2 to 1\nmove 1\
      \ from 5 to 4\nmove 7 from 1 to 2\nmove 1 from 4 to 8\nmove 7 from 2 to 9\n\
      move 5 from 2 to 8\nmove 2 from 6 to 8\nmove 21 from 6 to 9\nmove 8 from 9 to\
      \ 1\nmove 2 from 6 to 1\nmove 3 from 8 to 7\nmove 6 from 6 to 4\nmove 7 from\
      \ 1 to 8\nmove 1 from 9 to 1\nmove 7 from 7 to 3\nmove 1 from 7 to 4\nmove 1\
      \ from 7 to 4\nmove 7 from 8 to 1\nmove 5 from 4 to 8\nmove 10 from 1 to 2\n\
      move 3 from 1 to 4\nmove 3 from 2 to 9\nmove 1 from 4 to 5\nmove 3 from 3 to\
      \ 6\nmove 1 from 6 to 4\nmove 1 from 6 to 7\nmove 1 from 7 to 8\nmove 7 from\
      \ 2 to 4\nmove 10 from 9 to 1\nmove 10 from 4 to 5\nmove 2 from 5 to 2\nmove\
      \ 2 from 2 to 1\nmove 11 from 8 to 9\nmove 7 from 1 to 4\nmove 1 from 6 to 1\n\
      move 1 from 8 to 3\nmove 1 from 4 to 6\nmove 6 from 4 to 5\nmove 1 from 5 to\
      \ 7\nmove 1 from 6 to 8\nmove 6 from 1 to 6\nmove 19 from 9 to 2\nmove 1 from\
      \ 1 to 8\nmove 1 from 4 to 7\nmove 9 from 2 to 6\nmove 1 from 9 to 2\nmove 2\
      \ from 8 to 1\nmove 1 from 1 to 9\nmove 7 from 3 to 6\nmove 3 from 9 to 2\n\
      move 5 from 2 to 6\nmove 1 from 9 to 3\nmove 15 from 6 to 7\nmove 6 from 6 to\
      \ 7\nmove 1 from 1 to 9\nmove 5 from 6 to 2\nmove 1 from 6 to 1\nmove 6 from\
      \ 5 to 8\nmove 1 from 3 to 4\nmove 1 from 9 to 7\nmove 6 from 8 to 1\nmove 3\
      \ from 4 to 6\nmove 1 from 6 to 1\nmove 3 from 5 to 2\nmove 1 from 5 to 7\n\
      move 5 from 1 to 5\nmove 2 from 6 to 9\nmove 2 from 9 to 2\nmove 7 from 5 to\
      \ 1\nmove 1 from 5 to 7\nmove 1 from 5 to 9\nmove 20 from 7 to 1\nmove 23 from\
      \ 1 to 7\nmove 1 from 1 to 2\nmove 4 from 7 to 9\nmove 4 from 9 to 8\nmove 1\
      \ from 9 to 2\nmove 16 from 7 to 6\nmove 4 from 1 to 5\nmove 9 from 7 to 6\n\
      move 11 from 2 to 6\nmove 1 from 1 to 9\nmove 1 from 1 to 7\nmove 1 from 8 to\
      \ 2\nmove 1 from 9 to 7\nmove 4 from 5 to 2\nmove 3 from 8 to 3\nmove 2 from\
      \ 2 to 4\nmove 2 from 7 to 4\nmove 4 from 4 to 9\nmove 28 from 6 to 9\nmove\
      \ 5 from 2 to 7\nmove 8 from 6 to 5\nmove 6 from 2 to 6\nmove 2 from 7 to 3\n\
      move 5 from 5 to 7\nmove 1 from 5 to 9\nmove 14 from 9 to 4\nmove 18 from 9\
      \ to 8\nmove 5 from 6 to 4\nmove 6 from 7 to 8\nmove 1 from 2 to 6\nmove 19\
      \ from 4 to 7\nmove 1 from 2 to 5\nmove 1 from 9 to 3\nmove 2 from 5 to 2\n\
      move 14 from 7 to 3\nmove 1 from 5 to 3\nmove 12 from 8 to 6\nmove 6 from 6\
      \ to 5\nmove 4 from 5 to 4\nmove 21 from 3 to 4\nmove 10 from 8 to 3\nmove 2\
      \ from 3 to 2\nmove 7 from 4 to 6\nmove 2 from 8 to 1\nmove 2 from 2 to 3\n\
      move 5 from 7 to 2\nmove 2 from 1 to 4\nmove 3 from 3 to 7\nmove 2 from 5 to\
      \ 7\nmove 2 from 2 to 7\nmove 2 from 2 to 3\nmove 7 from 4 to 1\nmove 3 from\
      \ 1 to 4\nmove 3 from 2 to 5\nmove 2 from 1 to 5\nmove 7 from 4 to 3\nmove 15\
      \ from 6 to 2\nmove 1 from 1 to 4\nmove 1 from 5 to 1\nmove 14 from 3 to 1\n\
      move 9 from 4 to 1\nmove 5 from 7 to 1\nmove 1 from 3 to 5\nmove 1 from 4 to\
      \ 2\nmove 20 from 1 to 2\nmove 17 from 2 to 5\nmove 1 from 3 to 7\nmove 5 from\
      \ 7 to 3\nmove 6 from 5 to 1\nmove 3 from 3 to 2\nmove 10 from 1 to 9\nmove\
      \ 3 from 5 to 6\nmove 12 from 5 to 6\nmove 1 from 5 to 1\nmove 15 from 6 to\
      \ 5\nmove 13 from 5 to 3\nmove 1 from 5 to 1\nmove 10 from 3 to 2\nmove 3 from\
      \ 3 to 2\nmove 1 from 5 to 3\nmove 2 from 3 to 6\nmove 1 from 3 to 4\nmove 2\
      \ from 6 to 4\nmove 3 from 4 to 2\nmove 8 from 9 to 4\nmove 8 from 4 to 8\n\
      move 7 from 2 to 1\nmove 5 from 8 to 7\nmove 2 from 2 to 3\nmove 13 from 1 to\
      \ 2\nmove 2 from 3 to 8\nmove 2 from 9 to 7\nmove 3 from 8 to 1\nmove 2 from\
      \ 1 to 2\nmove 2 from 8 to 4\nmove 6 from 7 to 2\nmove 3 from 1 to 8\nmove 1\
      \ from 7 to 5\nmove 24 from 2 to 1\nmove 2 from 8 to 5\nmove 15 from 1 to 4\n\
      move 1 from 5 to 8\nmove 9 from 1 to 4\nmove 2 from 8 to 5\nmove 26 from 2 to\
      \ 4\nmove 1 from 5 to 8\nmove 1 from 5 to 8\nmove 50 from 4 to 1\nmove 1 from\
      \ 8 to 9\nmove 1 from 4 to 6\nmove 1 from 4 to 9\nmove 22 from 1 to 5\nmove\
      \ 1 from 6 to 2\nmove 1 from 5 to 8\nmove 1 from 2 to 4\nmove 1 from 8 to 1\n\
      move 28 from 1 to 3\nmove 2 from 9 to 4\nmove 21 from 5 to 8\nmove 1 from 1\
      \ to 8\nmove 1 from 5 to 8\nmove 1 from 5 to 7\nmove 3 from 4 to 8\nmove 1 from\
      \ 7 to 9\nmove 1 from 9 to 7\nmove 20 from 8 to 4\nmove 2 from 8 to 1\nmove\
      \ 1 from 7 to 6\nmove 2 from 1 to 4\nmove 27 from 3 to 1\nmove 4 from 8 to 4\n\
      move 1 from 6 to 9\nmove 19 from 4 to 2\nmove 5 from 2 to 5\nmove 1 from 4 to\
      \ 1\nmove 1 from 9 to 2\nmove 17 from 1 to 9\nmove 1 from 3 to 8\nmove 15 from\
      \ 9 to 2\nmove 2 from 4 to 8\nmove 2 from 5 to 8\nmove 2 from 5 to 9\nmove 3\
      \ from 9 to 8\nmove 9 from 1 to 2\nmove 2 from 1 to 3\nmove 4 from 4 to 5\n\
      move 2 from 5 to 7\nmove 1 from 8 to 5\nmove 2 from 3 to 8\nmove 4 from 5 to\
      \ 2\nmove 1 from 9 to 6\nmove 5 from 8 to 5\nmove 1 from 7 to 9\nmove 29 from\
      \ 2 to 3\nmove 1 from 8 to 6\nmove 1 from 9 to 7\nmove 2 from 2 to 8\nmove 2\
      \ from 5 to 2\nmove 2 from 7 to 5\nmove 4 from 5 to 9\nmove 1 from 5 to 9\n\
      move 10 from 3 to 4\nmove 10 from 4 to 7\nmove 1 from 3 to 4\nmove 5 from 2\
      \ to 9\nmove 5 from 8 to 6\nmove 1 from 6 to 5\nmove 2 from 6 to 3\nmove 4 from\
      \ 6 to 7\nmove 1 from 5 to 2\nmove 2 from 2 to 7\nmove 5 from 7 to 8\nmove 8\
      \ from 7 to 2\nmove 6 from 8 to 7\nmove 14 from 2 to 5\nmove 3 from 7 to 3\n\
      move 1 from 4 to 7\nmove 2 from 7 to 2\nmove 3 from 2 to 8\nmove 3 from 8 to\
      \ 5\nmove 8 from 9 to 1\nmove 3 from 7 to 2\nmove 2 from 7 to 4\nmove 17 from\
      \ 3 to 6\nmove 8 from 1 to 6\nmove 16 from 5 to 2\nmove 1 from 5 to 2\nmove\
      \ 1 from 3 to 1\nmove 21 from 6 to 7\nmove 1 from 4 to 8\nmove 7 from 7 to 8\n\
      move 1 from 1 to 3\nmove 11 from 7 to 2\nmove 7 from 2 to 6\nmove 8 from 8 to\
      \ 5\nmove 2 from 7 to 4\nmove 4 from 5 to 6\nmove 8 from 2 to 8\nmove 17 from\
      \ 2 to 3\nmove 4 from 5 to 3\nmove 7 from 6 to 9\nmove 2 from 6 to 9\nmove 1\
      \ from 4 to 1\nmove 1 from 4 to 2\nmove 3 from 6 to 2\nmove 1 from 6 to 8\n\
      move 1 from 4 to 1\nmove 1 from 7 to 5\nmove 10 from 9 to 2\nmove 1 from 5 to\
      \ 6\nmove 1 from 8 to 2\nmove 1 from 1 to 4\nmove 12 from 3 to 4\nmove 1 from\
      \ 6 to 2\nmove 2 from 8 to 6\nmove 1 from 1 to 2\nmove 1 from 9 to 8\nmove 2\
      \ from 8 to 7\nmove 6 from 3 to 2\nmove 1 from 3 to 5\nmove 8 from 4 to 9\n\
      move 22 from 2 to 9\nmove 7 from 3 to 5\nmove 3 from 8 to 2\nmove 2 from 7 to\
      \ 8\nmove 3 from 6 to 9\nmove 1 from 2 to 9\nmove 1 from 6 to 2\nmove 4 from\
      \ 8 to 5\nmove 5 from 5 to 9\nmove 1 from 3 to 6\nmove 1 from 5 to 6\nmove 2\
      \ from 4 to 1\nmove 2 from 2 to 4\nmove 4 from 4 to 6\nmove 1 from 1 to 5\n\
      move 5 from 6 to 3\nmove 35 from 9 to 1\nmove 4 from 9 to 1\nmove 1 from 4 to\
      \ 7\nmove 3 from 3 to 7\nmove 37 from 1 to 7\nmove 2 from 2 to 3\nmove 3 from\
      \ 3 to 7\nmove 1 from 5 to 8\nmove 2 from 1 to 8\nmove 2 from 5 to 2\nmove 1\
      \ from 6 to 9\nmove 16 from 7 to 1\nmove 5 from 1 to 5\nmove 3 from 8 to 2\n\
      move 10 from 7 to 9\nmove 6 from 7 to 9\nmove 3 from 2 to 1\nmove 4 from 5 to\
      \ 3\nmove 2 from 1 to 2\nmove 5 from 7 to 9\nmove 5 from 7 to 9\nmove 5 from\
      \ 5 to 3\nmove 8 from 3 to 7\nmove 6 from 9 to 4\nmove 8 from 7 to 3\nmove 2\
      \ from 3 to 6\nmove 1 from 6 to 7\nmove 1 from 6 to 7\nmove 5 from 4 to 9\n\
      move 3 from 7 to 1\nmove 2 from 2 to 8\nmove 1 from 8 to 6\nmove 6 from 1 to\
      \ 8\nmove 1 from 7 to 9\nmove 1 from 3 to 9\nmove 4 from 3 to 2\nmove 8 from\
      \ 1 to 6\nmove 1 from 3 to 9\nmove 5 from 8 to 4\nmove 2 from 3 to 1\nmove 1\
      \ from 8 to 2\nmove 4 from 9 to 1\nmove 2 from 1 to 5\nmove 1 from 8 to 5\n\
      move 11 from 9 to 5\nmove 1 from 2 to 8\nmove 10 from 5 to 4\nmove 1 from 1\
      \ to 9\nmove 3 from 5 to 4\nmove 5 from 2 to 3\nmove 1 from 5 to 1\nmove 9 from\
      \ 9 to 4\nmove 1 from 6 to 7\nmove 1 from 3 to 9\nmove 4 from 3 to 1\nmove 1\
      \ from 2 to 4\nmove 1 from 1 to 4\nmove 1 from 4 to 7\nmove 5 from 1 to 3\n\
      move 1 from 3 to 2\nmove 1 from 8 to 3\nmove 3 from 9 to 5\nmove 1 from 2 to\
      \ 9\nmove 4 from 1 to 4\nmove 1 from 7 to 4\nmove 2 from 5 to 8\nmove 1 from\
      \ 7 to 6\nmove 4 from 3 to 1\nmove 1 from 5 to 8\nmove 1 from 3 to 4\nmove 22\
      \ from 4 to 1\nmove 11 from 1 to 9\nmove 2 from 1 to 4\nmove 11 from 1 to 6\n\
      move 8 from 6 to 7\nmove 1 from 8 to 7\nmove 7 from 9 to 2\nmove 6 from 7 to\
      \ 6\nmove 2 from 4 to 9\nmove 2 from 7 to 1\nmove 14 from 6 to 3\nmove 2 from\
      \ 3 to 1\nmove 3 from 6 to 7\nmove 6 from 1 to 3\nmove 8 from 9 to 6\nmove 7\
      \ from 4 to 6\nmove 7 from 6 to 8\nmove 1 from 9 to 1\nmove 2 from 9 to 8\n\
      move 4 from 3 to 4\nmove 1 from 8 to 4\nmove 1 from 4 to 3\nmove 6 from 3 to\
      \ 7\nmove 7 from 2 to 5\nmove 8 from 4 to 6\nmove 1 from 7 to 2\nmove 1 from\
      \ 5 to 7\nmove 6 from 7 to 3\nmove 1 from 7 to 1\nmove 8 from 8 to 4\nmove 8\
      \ from 4 to 2\nmove 3 from 7 to 3\nmove 6 from 5 to 6\nmove 15 from 3 to 1\n\
      move 21 from 6 to 1\nmove 4 from 2 to 6\nmove 5 from 6 to 5\nmove 1 from 2 to\
      \ 6\nmove 1 from 4 to 5\nmove 1 from 4 to 3\nmove 1 from 8 to 6\nmove 4 from\
      \ 5 to 7\nmove 18 from 1 to 4\nmove 2 from 5 to 7\nmove 6 from 7 to 6\nmove\
      \ 1 from 3 to 2\nmove 6 from 1 to 2\nmove 3 from 3 to 9\nmove 3 from 9 to 4\n\
      move 1 from 8 to 3\nmove 1 from 6 to 5\nmove 6 from 2 to 5\nmove 1 from 5 to\
      \ 9\nmove 1 from 3 to 5\nmove 2 from 6 to 8\nmove 2 from 1 to 4\nmove 5 from\
      \ 4 to 6\nmove 15 from 4 to 9\nmove 5 from 9 to 1\nmove 2 from 6 to 2\nmove\
      \ 6 from 6 to 3\nmove 1 from 8 to 6\nmove 6 from 5 to 9\nmove 3 from 6 to 5\n\
      move 2 from 4 to 7"
    parts:
      part1: "--- Day 5: Supply Stacks ---\nThe expedition can depart as soon as the\
        \ final supplies have been unloaded from the ships. Supplies are stored in\
        \ stacks of marked \ncrates\n, but because the needed supplies are buried\
        \ under many other crates, the crates need to be rearranged.\n\n\nThe ship\
        \ has a \ngiant cargo crane\n capable of moving crates between stacks. To\
        \ ensure none of the crates get crushed or fall over, the crane operator will\
        \ rearrange them in a series of carefully-planned steps. After the crates\
        \ are rearranged, the desired crates will be at the top of each stack.\n\n\
        \nThe Elves don't want to interrupt the crane operator during this delicate\
        \ procedure, but they forgot to ask her \nwhich\n crate will end up where,\
        \ and they want to be ready to unload them as soon as possible so they can\
        \ embark.\n\n\nThey do, however, have a drawing of the starting stacks of\
        \ crates \nand\n the rearrangement procedure (your puzzle input). For example:\n\
        \n\n    [D]    \n[N] [C]    \n[Z] [M] [P]\n 1   2   3 \n\nmove 1 from 2 to\
        \ 1\nmove 3 from 1 to 3\nmove 2 from 2 to 1\nmove 1 from 1 to 2\n\n\n\nIn\
        \ this example, there are three stacks of crates. Stack 1 contains two crates:\
        \ crate \nZ\n is on the bottom, and crate \nN\n is on top. Stack 2 contains\
        \ three crates; from bottom to top, they are crates \nM\n, \nC\n, and \nD\n\
        . Finally, stack 3 contains a single crate, \nP\n.\n\n\nThen, the rearrangement\
        \ procedure is given. In each step of the procedure, a quantity of crates\
        \ is moved from one stack to a different stack. In the first step of the above\
        \ rearrangement procedure, one crate is moved from stack 2 to stack 1, resulting\
        \ in this configuration:\n\n\n[D]        \n[N] [C]    \n[Z] [M] [P]\n 1  \
        \ 2   3 \n\n\n\nIn the second step, three crates are moved from stack 1 to\
        \ stack 3. Crates are moved \none at a time\n, so the first crate to be moved\
        \ (\nD\n) ends up below the second and third crates:\n\n\n        [Z]\n  \
        \      [N]\n    [C] [D]\n    [M] [P]\n 1   2   3\n\n\n\nThen, both crates\
        \ are moved from stack 2 to stack 1. Again, because crates are moved \none\
        \ at a time\n, crate \nC\n ends up below crate \nM\n:\n\n\n        [Z]\n \
        \       [N]\n[M]     [D]\n[C]     [P]\n 1   2   3\n\n\n\nFinally, one crate\
        \ is moved from stack 1 to stack 2:\n\n\n        [\nZ\n]\n        [N]\n  \
        \      [D]\n[\nC\n] [\nM\n] [P]\n 1   2   3\n\n\n\nThe Elves just need to\
        \ know \nwhich crate will end up on top of each stack\n; in this example,\
        \ the top crates are \nC\n in stack 1, \nM\n in stack 2, and \nZ\n in stack\
        \ 3, so you should combine these together and give the Elves the message \n\
        CMZ\n.\n\n\nAfter the rearrangement procedure completes, what crate ends up\
        \ on top of each stack?"
      part2: "--- Day 5: Supply Stacks ---\nThe expedition can depart as soon as the\
        \ final supplies have been unloaded from the ships. Supplies are stored in\
        \ stacks of marked \ncrates\n, but because the needed supplies are buried\
        \ under many other crates, the crates need to be rearranged.\n\n\nThe ship\
        \ has a \ngiant cargo crane\n capable of moving crates between stacks. To\
        \ ensure none of the crates get crushed or fall over, the crane operator will\
        \ rearrange them in a series of carefully-planned steps. After the crates\
        \ are rearranged, the desired crates will be at the top of each stack.\n\n\
        \nThe Elves don't want to interrupt the crane operator during this delicate\
        \ procedure, but they forgot to ask her \nwhich\n crate will end up where,\
        \ and they want to be ready to unload them as soon as possible so they can\
        \ embark.\n\n\nThey do, however, have a drawing of the starting stacks of\
        \ crates \nand\n the rearrangement procedure (your puzzle input). For example:\n\
        \n\n    [D]    \n[N] [C]    \n[Z] [M] [P]\n 1   2   3 \n\nmove 1 from 2 to\
        \ 1\nmove 3 from 1 to 3\nmove 2 from 2 to 1\nmove 1 from 1 to 2\n\n\n\nIn\
        \ this example, there are three stacks of crates. Stack 1 contains two crates:\
        \ crate \nZ\n is on the bottom, and crate \nN\n is on top. Stack 2 contains\
        \ three crates; from bottom to top, they are crates \nM\n, \nC\n, and \nD\n\
        . Finally, stack 3 contains a single crate, \nP\n.\n\n\nThen, the rearrangement\
        \ procedure is given. In each step of the procedure, a quantity of crates\
        \ is moved from one stack to a different stack. In the first step of the above\
        \ rearrangement procedure, one crate is moved from stack 2 to stack 1, resulting\
        \ in this configuration:\n\n\n[D]        \n[N] [C]    \n[Z] [M] [P]\n 1  \
        \ 2   3 \n\n\n\nIn the second step, three crates are moved from stack 1 to\
        \ stack 3. Crates are moved \none at a time\n, so the first crate to be moved\
        \ (\nD\n) ends up below the second and third crates:\n\n\n        [Z]\n  \
        \      [N]\n    [C] [D]\n    [M] [P]\n 1   2   3\n\n\n\nThen, both crates\
        \ are moved from stack 2 to stack 1. Again, because crates are moved \none\
        \ at a time\n, crate \nC\n ends up below crate \nM\n:\n\n\n        [Z]\n \
        \       [N]\n[M]     [D]\n[C]     [P]\n 1   2   3\n\n\n\nFinally, one crate\
        \ is moved from stack 1 to stack 2:\n\n\n        [\nZ\n]\n        [N]\n  \
        \      [D]\n[\nC\n] [\nM\n] [P]\n 1   2   3\n\n\n\nThe Elves just need to\
        \ know \nwhich crate will end up on top of each stack\n; in this example,\
        \ the top crates are \nC\n in stack 1, \nM\n in stack 2, and \nZ\n in stack\
        \ 3, so you should combine these together and give the Elves the message \n\
        CMZ\n.\n\n\nAfter the rearrangement procedure completes, what crate ends up\
        \ on top of each stack?\n\n--- Part Two ---\nAs you watch the crane operator\
        \ expertly rearrange the crates, you notice the process isn't following your\
        \ prediction.\n\n\nSome mud was covering the writing on the side of the crane,\
        \ and you quickly wipe it away. The crane isn't a CrateMover 9000 - it's a\
        \ \nCrateMover 9001\n.\n\n\nThe CrateMover 9001 is notable for many new and\
        \ exciting features: air conditioning, leather seats, an extra cup holder,\
        \ and \nthe ability to pick up and move multiple crates at once\n.\n\n\nAgain\
        \ considering the example above, the crates begin in the same configuration:\n\
        \n\n    [D]    \n[N] [C]    \n[Z] [M] [P]\n 1   2   3 \n\n\n\nMoving a single\
        \ crate from stack 2 to stack 1 behaves the same as before:\n\n\n[D]     \
        \   \n[N] [C]    \n[Z] [M] [P]\n 1   2   3 \n\n\n\nHowever, the action of\
        \ moving three crates from stack 1 to stack 3 means that those three moved\
        \ crates \nstay in the same order\n, resulting in this new configuration:\n\
        \n\n        [D]\n        [N]\n    [C] [Z]\n    [M] [P]\n 1   2   3\n\n\n\n\
        Next, as both crates are moved from stack 2 to stack 1, they \nretain their\
        \ order\n as well:\n\n\n        [D]\n        [N]\n[C]     [Z]\n[M]     [P]\n\
        \ 1   2   3\n\n\n\nFinally, a single crate is still moved from stack 1 to\
        \ stack 2, but now it's crate \nC\n that gets moved:\n\n\n        [\nD\n]\n\
        \        [N]\n        [Z]\n[\nM\n] [\nC\n] [P]\n 1   2   3\n\n\n\nIn this\
        \ example, the CrateMover 9001 has put the crates in a totally different order:\
        \ \nMCD\n.\n\n\nBefore the rearrangement process finishes, update your simulation\
        \ so that the Elves know where they should stand to be ready to unload the\
        \ final supplies. \nAfter the rearrangement procedure completes, what crate\
        \ ends up on top of each stack?"
    title: '--- Day 5: Supply Stacks ---'
  6:
    answers:
      part1:
        correct: '1142'
        wrong: []
      part2:
        correct: '2803'
        wrong: []
    input: wzsspbssbhshchmmrmprmrfrsfrrjhjphjjtppbfflqfqppdhdbhdhbbjgghgzgsgfsfhfhvvwcwhwwnppsbsggqnnvvtffpssjfjnnltntdtdddptprppjmmqssrlrplllfrrzggbmmlmnmtnnzddfdgfdfsstbstbbzcbbcjcvvfwwwzlzssglsgllnbnmbnmbbgmmppmwwsrrzqqvgqgnqnmmswwrnnbsnnbdbwwqnwqnwwzzqwzqzjqqwbqbccjcwwjlwjwppqfqjffwddrzrjzrjzzzhchjjlqqrggzvvnlvnvjvhvnvjvbbvdvldldbbwddtsscbbhccmbmbppbmmgjggcjjlrrwjwtjwwmffgddwvdvbdbvvhchmhmdmwwbjbjcbbcmbmmslmlslsjjrnrjrjpjcjgcjcjbbwsbsbfssjzsjsggcmcsswgssbbqpbqqdsdqqztzmzpmpbmbvbjjtrjtthwhbhnbhnbnssvpvsppgrrcwrrmqqhpphrpphchvhphqhbqbtttllsrlsrshrrmhmvvrmrnngbgnbnpbprrrftfjtjwwmrmvmcmvmrmwmssrccfbbhppjbpbwbqwbqbzzfmzmtttjbbvcvppmwwrbbzsbzbfzfdzzhrhzhvvsqvsqsnslljwllqlwllvccnttzhtzzpspqspqsqgsssvnsvshvsvqvnvlldbbfdfmmpbpgphhpqhpppchhbfbrfrllntnznrrhdrdhhdhjjgwwqhhfssjbjwjqqbffvvcrchccwmcwcllljtjrrqgrrdcrddvfvwvzzjqqcffgjgzzdhdwdssffjjhccggmtmltlhtthzhvhlvlddsfsbbtjbjcbjcjzcjjpfjfzzpnnbtbqtbqtqptpnplllbzbllhbllnqnttpddqvdqvqmmjnjggnnnhqqfcqcffqppdgpddvqddmhmrhrtrmrzmzhzpzlzqlqpqhphrpppjqqppzbzmmjgggqtggtjthhlclnclcnccmcppdcpddqrrfgrgbbhwhdhrrqtqpqjpqjpqjqqmcqmccnngqqqmtqtssnvnzvvpcpwcwwqcqqqfcqffsvsmvmttttmrrzssghgssjmsmbmvvwggggzhhfvdpgjmmvzbfjghqhrfbpmbvjzwvfmcthrqwdhghpwsspmhpqnmwhjzpnlzfnvhdnnrqwnvctbmjqzhqrpjlwrssdlwqzmsfrfzmgjhnwwnwczswnhsdbvqbmdlvntsdrhrjjcjjhpbblgwhjwdcdjtpvtmslwvncwdjbwzvbpzbvddvssnrhtshrcvnhqnpmjzfswqbbrztnwjcpflfbhnphfwmjvnvtswgfttgjcqcngmmwjlfsprwfcfwcmgrgbnqmzbtzbtbztngvrzpsnrzvhbsdjnzpwwzllgnfdrlwpmnrznqsqcmvnfbnhqjddvcjmtgbpbmsgqdqzflmlmqncmhwltrmdmgnwpfwddrdpfhsgsnggchzjhgpwrsmdzgjtrgmnprhbwbcbpzbdvvstfqcnqzbdjqpmrdbtgcthtclftghhmnrzrjqqsbndhpvmdpfpwdlhvmczvdfgvpqclssvlhqnhlcfnfbvtspdzmgzdctvpdcwchtqhpsgmmblspjdlvgblbpgrfrgnqqsphcsrgfsdmpqscbjmnqrfbcwfthdtswbzthpnvsfbntnbmmgpfzlqwhppvvdrmwbqzbgppbgsqmjfqtmntgwpnccthftwdmvwmnchlbjhsnmbhndczbrhhjpbvnjdzrcndbbmfwfwsjwfgbqhwhrsvlngsbhhlrdjzzbmjpsqhlpzwcsntjhlmngblspmsjrjwsjsrqwnrcwsmcsbmpjwrthbqhrschrmrppnnbmjbvjzlmzsrfdwqlfnfjljftjvzsqdwlhbblqcdlqjbprpcllhlhmwrbrlgfrcqshrtjpnmhljttdvpfnhdjqvjhhfczwvbzqgnzgljcfrbpgwnfhfchwzqmqqzpbcdpqmnbrppzblnnzqrfnmgtljwnfgzwvnjppdbdhbznvpgwhbdjjvlspgwgjsmfsvllpgwlfnnptmwnfsshjjvqzjwrqpvmsphpmftqdllqqdzcjwfvpftgvspprdwvvcnglmbpntghntdwpjvvsppgjvnbjgvtzchtqtwbddncsbrfcvrnvlggvwgmmnfzrswnzjrwthzmdsmzqmzsnrqsnslnhmfqljnnnzshqfqshrhhjmnhdgphctswdbhnrcgnzmmzqpjqbtdfhhltsmvvtntbgsznshhsghblhlhqpmdcfhmnfzvhgnfsfflcfwbfqzmccrjdpfvphtqbrdnzjfmfhbzqcpdnjdcgwprvchlzrcvrghgjqncjvnndbcshntrfsbsnmjlhclnzpfdgztflcpwqpnvlscfndwqzfvcmpgfncszpmwcsrdbrrhdjvmthslfvmlgpqhlgwhqnjljcvhswbsbqfrfhvzwjvdmhzsgbmbmfnbpclqdwhvrlpppszptjvwtvdmfltfqqgjttdggcvllblnnhjqnjzhvpgpzzpzwbpjqbthnjjlmsjgjzqwnjlqrcdmmvsldtcrzqdrcmwqhnhfghdlmzwcspgmlpzhbdsmlwlqnhhvcvdfzmvfwpbfmjtdllprfqzzjpbrshdzgspsrlrwrhdpmznzzqngwrzqpmtwgbsswrnnnfctjhbcftnslsqwjvmfwfdvfqcnsvfsvgstgbzpmljjtlvtnfsdzpvcgbjqwgbgzqbjfgltqvnhffflsbjzfqfrfbssrvvwqvqptmhrbgllqjwptrzgvqgccsrvbgtvmzfzlmtqrgfwhzddsptclbhjlwqfntvjqdvcddnffmbtqrnsvtmlvljcqdsrpggcmqvmmlzwwbgznhblwzjdppvtqzjvcmtfzhdzjplrdbrfrgzpldvnsgqlbwbmfvrbgwzmjmmqdfgwtbgtzmdqnvqbwvcfjhddqvnjtjlhhjnltbtqqvblwlmglrqcrcfjvdntrnqzzbmrjqglmrdcjgnshcghtprjqqsdrmgdnzmzcfqqdtjtrqgtqtgrpmmgzjtcrznmqccjbdpbvrnnbmbzvgdcnrczbctbrsrrqrjnfcdpzlnngwvcdtbbgssvhpptntqdzhcqtlpvzjbfgzggrgrcgtdfjbwdcrpztnfcdbscnlmqmwcbmtnddgbmhwsgvcfdcmhlsvtnqtmrnsjzhppgwvzlmhwwmpfjzrfbhsgntzrdhwswrnfmmmczqrvdrqnhgrvqbdddhglwsftsljvgbnjqfwfzsspdqvgsnlgfsfpvdrjhzcldtrmjjrmdhvvfrjldhhtqnvsvlldjpjbpwstfsmrpmbqbnnpvqtbgjvblthbmwqtfcfgnjscvtbvlqcmlhffpzgjzfscsqwnhrjhvbrrzwqvbjwtwhtqsdbssfgncppnsfgfltdcbjqjzqqtprsbvjzhmchnltvmbsvpvhgzhfhbrnttsqbcmwpdnwqqgdrjrdwdhtzwsmcdffqgsddvbzfjhtfhtnfdbfrwmdtcqshfjrcpswzcptgwgmctpmzjdbqlmqwthmnfplmctpsslcsdtqpqhjtmjdnmnqnjgchwstsmtpvsmgpsbfgwqnzhrdgdvcdlcldfcmjvsdldgbmhltjhczffwmzqssnhfnwftfgpshntjbpjdffjpcmcpwhclrrwqcqzmntjglzgcfrplfpvprtpvpjdlcrfwrtrzdzmhsrsmdcpqqrqgvfpdbmzbzqdfhpplmgfrdghclbclgswvwhhdvcpmpzflpffmptcrwglftztccrpbrvmpnqmqdgjgrrlbtqtvgcjpljttwtdslqjqlsdpblgrqbrtbmtblfbqtbvsqhpqzpqfhjqpmjrmcvqmsbbpjpdncgnjftclbltwszrrfzqbjcdtphcvpmbhppvwjwlprgmghrjzzgnvzlvghnjbzqjpdgzfsnjchpbzqdzpsjmsrvvqwjcpwznlpbjldlrdfqtrzhqzcnpjqbbbf
    parts:
      part1: "--- Day 6: Tuning Trouble ---\nThe preparations are finally complete;\
        \ you and the Elves leave camp on foot and begin to make your way toward the\
        \ \nstar\n fruit grove.\n\n\nAs you move through the dense undergrowth, one\
        \ of the Elves gives you a handheld \ndevice\n. He says that it has many fancy\
        \ features, but the most important one to set up right now is the \ncommunication\
        \ system\n.\n\n\nHowever, because he's heard you have \nsignificant\n \nexperience\n\
        \ \ndealing\n \nwith\n \nsignal-based\n \nsystems\n, he convinced the other\
        \ Elves that it would be okay to give you their one malfunctioning device\
        \ - surely you'll have no problem fixing it.\n\n\nAs if inspired by comedic\
        \ timing, the device emits a few \ncolorful sparks\n.\n\n\nTo be able to communicate\
        \ with the Elves, the device needs to \nlock on to their signal\n. The signal\
        \ is a series of seemingly-random characters that the device receives one\
        \ at a time.\n\n\nTo fix the communication system, you need to add a subroutine\
        \ to the device that detects a \nstart-of-packet marker\n in the datastream.\
        \ In the protocol being used by the Elves, the start of a packet is indicated\
        \ by a sequence of \nfour characters that are all different\n.\n\n\nThe device\
        \ will send your subroutine a datastream buffer (your puzzle input); your\
        \ subroutine needs to identify the first position where the four most recently\
        \ received characters were all different. Specifically, it needs to report\
        \ the number of characters from the beginning of the buffer to the end of\
        \ the first such four-character marker.\n\n\nFor example, suppose you receive\
        \ the following datastream buffer:\n\n\nmjqjpqmgbljsphdztnvjfqwrcgsmlb\n\n\
        \nAfter the first three characters (\nmjq\n) have been received, there haven't\
        \ been enough characters received yet to find the marker. The first time a\
        \ marker could occur is after the fourth character is received, making the\
        \ most recent four characters \nmjqj\n. Because \nj\n is repeated, this isn't\
        \ a marker.\n\n\nThe first time a marker appears is after the \nseventh\n\
        \ character arrives. Once it does, the last four characters received are \n\
        jpqm\n, which are all different. In this case, your subroutine should report\
        \ the value \n7\n, because the first start-of-packet marker is complete after\
        \ 7 characters have been processed.\n\n\nHere are a few more examples:\n\n\
        \n\n\nbvwbjplbgvbhsrlpgdmjqwftvncz\n: first marker after character \n5\n\n\
        \nnppdvjthqldpwncqszvftbrmjlhg\n: first marker after character \n6\n\n\nnznrnfrfntjfmvfwmzdfjlvtqnbhcprsg\n\
        : first marker after character \n10\n\n\nzcfzfwzzqfrljwzlrfnpqdbhtmscgvjw\n\
        : first marker after character \n11\n\n\n\n\nHow many characters need to be\
        \ processed before the first start-of-packet marker is detected?"
      part2: "--- Day 6: Tuning Trouble ---\nThe preparations are finally complete;\
        \ you and the Elves leave camp on foot and begin to make your way toward the\
        \ \nstar\n fruit grove.\n\n\nAs you move through the dense undergrowth, one\
        \ of the Elves gives you a handheld \ndevice\n. He says that it has many fancy\
        \ features, but the most important one to set up right now is the \ncommunication\
        \ system\n.\n\n\nHowever, because he's heard you have \nsignificant\n \nexperience\n\
        \ \ndealing\n \nwith\n \nsignal-based\n \nsystems\n, he convinced the other\
        \ Elves that it would be okay to give you their one malfunctioning device\
        \ - surely you'll have no problem fixing it.\n\n\nAs if inspired by comedic\
        \ timing, the device emits a few \ncolorful sparks\n.\n\n\nTo be able to communicate\
        \ with the Elves, the device needs to \nlock on to their signal\n. The signal\
        \ is a series of seemingly-random characters that the device receives one\
        \ at a time.\n\n\nTo fix the communication system, you need to add a subroutine\
        \ to the device that detects a \nstart-of-packet marker\n in the datastream.\
        \ In the protocol being used by the Elves, the start of a packet is indicated\
        \ by a sequence of \nfour characters that are all different\n.\n\n\nThe device\
        \ will send your subroutine a datastream buffer (your puzzle input); your\
        \ subroutine needs to identify the first position where the four most recently\
        \ received characters were all different. Specifically, it needs to report\
        \ the number of characters from the beginning of the buffer to the end of\
        \ the first such four-character marker.\n\n\nFor example, suppose you receive\
        \ the following datastream buffer:\n\n\nmjqjpqmgbljsphdztnvjfqwrcgsmlb\n\n\
        \nAfter the first three characters (\nmjq\n) have been received, there haven't\
        \ been enough characters received yet to find the marker. The first time a\
        \ marker could occur is after the fourth character is received, making the\
        \ most recent four characters \nmjqj\n. Because \nj\n is repeated, this isn't\
        \ a marker.\n\n\nThe first time a marker appears is after the \nseventh\n\
        \ character arrives. Once it does, the last four characters received are \n\
        jpqm\n, which are all different. In this case, your subroutine should report\
        \ the value \n7\n, because the first start-of-packet marker is complete after\
        \ 7 characters have been processed.\n\n\nHere are a few more examples:\n\n\
        \n\n\nbvwbjplbgvbhsrlpgdmjqwftvncz\n: first marker after character \n5\n\n\
        \nnppdvjthqldpwncqszvftbrmjlhg\n: first marker after character \n6\n\n\nnznrnfrfntjfmvfwmzdfjlvtqnbhcprsg\n\
        : first marker after character \n10\n\n\nzcfzfwzzqfrljwzlrfnpqdbhtmscgvjw\n\
        : first marker after character \n11\n\n\n\n\nHow many characters need to be\
        \ processed before the first start-of-packet marker is detected?\n\n--- Part\
        \ Two ---\nYour device's communication system is correctly detecting packets,\
        \ but still isn't working. It looks like it also needs to look for \nmessages\n\
        .\n\n\nA \nstart-of-message marker\n is just like a start-of-packet marker,\
        \ except it consists of \n14 distinct characters\n rather than 4.\n\n\nHere\
        \ are the first positions of start-of-message markers for all of the above\
        \ examples:\n\n\n\n\nmjqjpqmgbljsphdztnvjfqwrcgsmlb\n: first marker after\
        \ character \n19\n\n\nbvwbjplbgvbhsrlpgdmjqwftvncz\n: first marker after character\
        \ \n23\n\n\nnppdvjthqldpwncqszvftbrmjlhg\n: first marker after character \n\
        23\n\n\nnznrnfrfntjfmvfwmzdfjlvtqnbhcprsg\n: first marker after character\
        \ \n29\n\n\nzcfzfwzzqfrljwzlrfnpqdbhtmscgvjw\n: first marker after character\
        \ \n26\n\n\n\n\nHow many characters need to be processed before the first\
        \ start-of-message marker is detected?"
    title: '--- Day 6: Tuning Trouble ---'
  7:
    answers:
      part1:
        correct: '1581595'
        wrong: []
      part2:
        correct: '1544176'
        wrong: []
    input: '$ cd /

      $ ls

      dir bcfwbq

      14779 cmss

      dir ctctt

      101350 gpbswq.njr

      270744 mglrchsr

      260405 qtvftbl

      dir rbsrpg

      dir rzgnbgv

      dir svsgnbs

      dir wqctlzz

      71582 wrqbm

      $ cd bcfwbq

      $ ls

      dir bsbpc

      dir gpbswq

      172204 lpn.qjd

      269121 lts.zjd

      dir pfps

      dir phvgmv

      dir pjcrwh

      dir pvf

      dir rthpbmhr

      dir sjnvdz

      $ cd bsbpc

      $ ls

      191305 hlqptq.nrj

      15627 lts.zjd

      $ cd ..

      $ cd gpbswq

      $ ls

      dir ctctt

      dir jcw

      dir jnh

      53143 lts.zjd

      dir qrrjgdbd

      dir tnsjg

      $ cd ctctt

      $ ls

      dir hhmm

      $ cd hhmm

      $ ls

      89761 brfjczv.lmr

      226384 gwqfwwp.ctl

      174778 pgsdmfj

      $ cd ..

      $ cd ..

      $ cd jcw

      $ ls

      149585 gpbswq.lbv

      $ cd ..

      $ cd jnh

      $ ls

      10840 ctctt

      dir fzplg

      dir jvpc

      dir lpn

      dir mcz

      48063 nczc

      8024 rthpbmhr.qwq

      65222 vqgbgm

      $ cd fzplg

      $ ls

      34828 lpn.vcl

      dir svsgnbs

      $ cd svsgnbs

      $ ls

      216427 bvtl

      242012 gpbswq.qlg

      dir gsmltmw

      11388 lpn.trp

      dir lrr

      dir vwqlvj

      $ cd gsmltmw

      $ ls

      66467 pldhhjch

      $ cd ..

      $ cd lrr

      $ ls

      dir ctctt

      dir lpn

      16831 lts.zjd

      dir svsgnbs

      dir tdpmdfgd

      177469 wct.njp

      $ cd ctctt

      $ ls

      145394 phd.tvj

      $ cd ..

      $ cd lpn

      $ ls

      dir svsgnbs

      $ cd svsgnbs

      $ ls

      148504 ctctt.vjd

      $ cd ..

      $ cd ..

      $ cd svsgnbs

      $ ls

      245750 ggbhsgz.snc

      $ cd ..

      $ cd tdpmdfgd

      $ ls

      dir cghfclv

      dir mcfzvlvw

      dir mdgvcgbc

      $ cd cghfclv

      $ ls

      49162 shwslwsf.lww

      $ cd ..

      $ cd mcfzvlvw

      $ ls

      dir bsbswh

      $ cd bsbswh

      $ ls

      dir hqsdsp

      $ cd hqsdsp

      $ ls

      70065 pldhhjch

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd mdgvcgbc

      $ ls

      235514 dhfms.nwl

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd vwqlvj

      $ ls

      269473 jwv.dqh

      90324 mglrchsr

      194977 rwgsvszh.jbf

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd jvpc

      $ ls

      dir rdgqr

      dir sspn

      $ cd rdgqr

      $ ls

      dir qcjccsth

      $ cd qcjccsth

      $ ls

      dir rqwvslc

      $ cd rqwvslc

      $ ls

      275985 pgqph.lcn

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd sspn

      $ ls

      200316 gpbswq

      162820 pldhhjch

      $ cd ..

      $ cd ..

      $ cd lpn

      $ ls

      277995 hlqptq.nrj

      $ cd ..

      $ cd mcz

      $ ls

      dir fjtj

      157693 gqfgrfqw.wtc

      dir jqbpcd

      206235 lpn

      54229 mglrchsr

      238506 rthpbmhr

      dir snr

      dir ztlrtgjl

      $ cd fjtj

      $ ls

      240610 fbwzn

      207688 hlqptq.nrj

      150032 lts.zjd

      48060 mcrgn

      265551 zqrnt.srf

      $ cd ..

      $ cd jqbpcd

      $ ls

      256141 ctctt.nbp

      dir gpbswq

      78480 hmddcjdd.bmc

      31403 lpn

      120619 mvdfjzdr

      dir nqgvl

      $ cd gpbswq

      $ ls

      125791 ctctt

      $ cd ..

      $ cd nqgvl

      $ ls

      174465 jrbfcvf.rqr

      144210 lts.zjd

      258976 rthpbmhr

      $ cd ..

      $ cd ..

      $ cd snr

      $ ls

      185943 rthpbmhr.jhb

      $ cd ..

      $ cd ztlrtgjl

      $ ls

      232309 ntlzfsz.vjd

      254942 zhrds.nbp

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd qrrjgdbd

      $ ls

      dir gpbswq

      $ cd gpbswq

      $ ls

      170768 rthpbmhr.qwf

      $ cd ..

      $ cd ..

      $ cd tnsjg

      $ ls

      242206 bjmgvmp.hht

      245356 frtdp

      dir jrflhz

      128115 lpn

      120081 rfhs

      dir sfplvt

      dir tts

      114165 zfl.ccr

      $ cd jrflhz

      $ ls

      dir gpbswq

      dir nnlzjwts

      dir sctf

      $ cd gpbswq

      $ ls

      121401 mglrchsr

      $ cd ..

      $ cd nnlzjwts

      $ ls

      dir gljnss

      165011 lts.zjd

      69364 svsgnbs.bqm

      $ cd gljnss

      $ ls

      181850 cfjbd.fmj

      $ cd ..

      $ cd ..

      $ cd sctf

      $ ls

      109435 gqfgrfqw.wtc

      146343 lpn.mbs

      255948 svsgnbs.hbf

      231472 vdrfwqwv.pzf

      263352 zgzj

      $ cd ..

      $ cd ..

      $ cd sfplvt

      $ ls

      51580 hlqptq.nrj

      dir mldph

      $ cd mldph

      $ ls

      163815 hsnw

      $ cd ..

      $ cd ..

      $ cd tts

      $ ls

      dir ctctt

      211239 rpm

      dir rthpbmhr

      dir wpnnrzb

      $ cd ctctt

      $ ls

      dir ctctt

      137333 hshpfwl

      183146 srd

      $ cd ctctt

      $ ls

      89470 hlqptq.nrj

      $ cd ..

      $ cd ..

      $ cd rthpbmhr

      $ ls

      139569 fhjlbrmp.phd

      223589 jvrs.bpj

      198566 rthpbmhr.qdr

      $ cd ..

      $ cd wpnnrzb

      $ ls

      dir ctctt

      158058 fjtcc

      dir jqqhgjv

      dir qvbvvb

      16429 wds.hpj

      $ cd ctctt

      $ ls

      166551 gcjt.wld

      233189 gpbswq.mls

      193694 rthpbmhr.rvz

      dir svsgnbs

      $ cd svsgnbs

      $ ls

      248185 fpssfvd.zft

      215781 rwtg.gch

      $ cd ..

      $ cd ..

      $ cd jqqhgjv

      $ ls

      dir gpbswq

      14842 lts.zjd

      dir mqp

      258342 pldhhjch

      103492 sddj.sbq

      248024 svsgnbs

      $ cd gpbswq

      $ ls

      dir sqchbqc

      176209 vdq.jbz

      $ cd sqchbqc

      $ ls

      dir cphf

      $ cd cphf

      $ ls

      253613 snzbgfs.rjf

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd mqp

      $ ls

      10090 mfw

      $ cd ..

      $ cd ..

      $ cd qvbvvb

      $ ls

      dir mzw

      dir svsgnbs

      $ cd mzw

      $ ls

      98994 mmv.hcl

      $ cd ..

      $ cd svsgnbs

      $ ls

      108748 lts.zjd

      10351 mglrchsr

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd pfps

      $ ls

      dir cpp

      110535 mglrchsr

      120669 qvh.fbm

      $ cd cpp

      $ ls

      dir htnmrjpq

      $ cd htnmrjpq

      $ ls

      120225 bdjmsbg.wfz

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd phvgmv

      $ ls

      113550 pldhhjch

      31171 zcfm

      $ cd ..

      $ cd pjcrwh

      $ ls

      265625 snbjdmg.jtn

      $ cd ..

      $ cd pvf

      $ ls

      91010 ctctt

      dir hdz

      dir qtwfpmvz

      $ cd hdz

      $ ls

      103787 rlnrs

      $ cd ..

      $ cd qtwfpmvz

      $ ls

      244905 lts.zjd

      $ cd ..

      $ cd ..

      $ cd rthpbmhr

      $ ls

      dir phq

      dir svsgnbs

      dir wzwfz

      dir zpwfj

      $ cd phq

      $ ls

      91709 bzfnqh

      dir ccwqrjn

      dir gpbswq

      dir svsgnbs

      $ cd ccwqrjn

      $ ls

      8953 fffqzmqp

      dir ftnb

      dir svsgnbs

      $ cd ftnb

      $ ls

      226615 rthpbmhr

      $ cd ..

      $ cd svsgnbs

      $ ls

      dir bhnnm

      dir tjrqtmd

      $ cd bhnnm

      $ ls

      dir prfqw

      $ cd prfqw

      $ ls

      dir hzsjlq

      $ cd hzsjlq

      $ ls

      99285 cfpwbvp

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd tjrqtmd

      $ ls

      237461 cqr.wfj

      149955 zchnb

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd gpbswq

      $ ls

      dir bqqtnfb

      dir ctctt

      261108 gpbswq

      135193 hnrflng

      264503 jrp.bls

      224864 mghhgrj.tgp

      dir pljbtbn

      dir rthpbmhr

      244222 svsgnbs.rzp

      $ cd bqqtnfb

      $ ls

      dir jnzfr

      $ cd jnzfr

      $ ls

      dir bdrqmr

      168907 pldhhjch

      $ cd bdrqmr

      $ ls

      151767 vfw.jjc

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ctctt

      $ ls

      dir zdsshmr

      $ cd zdsshmr

      $ ls

      77208 hlqptq.nrj

      $ cd ..

      $ cd ..

      $ cd pljbtbn

      $ ls

      63719 hlqptq.nrj

      103719 jjctg.dhw

      547 tljz.wnv

      $ cd ..

      $ cd rthpbmhr

      $ ls

      dir sjbfhcpc

      $ cd sjbfhcpc

      $ ls

      184946 sgpgszw

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd svsgnbs

      $ ls

      dir ctctt

      dir flzsvb

      dir pbw

      23408 qprlnvwv.jmz

      dir wjhplc

      $ cd ctctt

      $ ls

      11507 cnf

      dir gpbswq

      87778 rthpbmhr.wzv

      dir slmbb

      dir sqc

      75556 wsbzwn.mpf

      $ cd gpbswq

      $ ls

      173498 dsg

      202811 msvs.szd

      208419 pldhhjch

      $ cd ..

      $ cd slmbb

      $ ls

      dir jcth

      dir njldhbln

      $ cd jcth

      $ ls

      6106 hlqptq.nrj

      $ cd ..

      $ cd njldhbln

      $ ls

      241153 mvnvzqfc.rtn

      $ cd ..

      $ cd ..

      $ cd sqc

      $ ls

      dir zhrc

      $ cd zhrc

      $ ls

      dir qswqqzb

      $ cd qswqqzb

      $ ls

      264937 btqmqn.hqv

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd flzsvb

      $ ls

      58735 hlqptq.nrj

      $ cd ..

      $ cd pbw

      $ ls

      80787 bgfmdg

      234807 gqfgrfqw.wtc

      44816 pldhhjch

      dir qjjpmq

      dir rthpbmhr

      153500 ssmdz

      $ cd qjjpmq

      $ ls

      155209 ctghhsdh

      182544 fprdp.ffs

      $ cd ..

      $ cd rthpbmhr

      $ ls

      136673 lts.zjd

      $ cd ..

      $ cd ..

      $ cd wjhplc

      $ ls

      246593 hhcgnfjb.nbl

      29266 hlqptq.nrj

      246096 lts.zjd

      40242 rrfgvvhg

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd svsgnbs

      $ ls

      215743 fwm

      236816 gqfgrfqw.wtc

      235185 sjdlr.rzj

      dir ztsgb

      $ cd ztsgb

      $ ls

      265998 rthpbmhr.pdp

      275979 zqfcprz.wtd

      $ cd ..

      $ cd ..

      $ cd wzwfz

      $ ls

      dir bsqwtf

      dir ctctt

      dir lpng

      dir svsgnbs

      $ cd bsqwtf

      $ ls

      dir rhjb

      dir sgzvb

      $ cd rhjb

      $ ls

      166599 rthpbmhr.msg

      $ cd ..

      $ cd sgzvb

      $ ls

      185594 zmnb.bcq

      $ cd ..

      $ cd ..

      $ cd ctctt

      $ ls

      130367 svsgnbs

      17459 tdsztr.fsn

      242273 wfs

      $ cd ..

      $ cd lpng

      $ ls

      145778 snmcwfg.hjz

      $ cd ..

      $ cd svsgnbs

      $ ls

      dir ctctt

      dir nqrlzg

      dir qczmdfm

      54814 wtmjh.jdv

      $ cd ctctt

      $ ls

      244171 pldhhjch

      $ cd ..

      $ cd nqrlzg

      $ ls

      dir qjhlj

      $ cd qjhlj

      $ ls

      dir gncct

      $ cd gncct

      $ ls

      141943 wsdgmdd.ctz

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd qczmdfm

      $ ls

      4482 lpn.fmp

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd zpwfj

      $ ls

      226995 lts.zjd

      dir sflcgdm

      $ cd sflcgdm

      $ ls

      199168 bjrjrrm.bfw

      dir fpcq

      24906 gdzfmhz.jhp

      7267 hdpzvh.ngg

      dir jjsgqb

      137796 psws.hvp

      $ cd fpcq

      $ ls

      195792 nghcc.wps

      $ cd ..

      $ cd jjsgqb

      $ ls

      18774 ctctt

      106399 jvbgfhs

      208035 rthpbmhr

      dir zptz

      $ cd zptz

      $ ls

      278792 gqfgrfqw.wtc

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd sjnvdz

      $ ls

      dir fchgggp

      dir gldg

      40164 gnh.gmv

      dir lpn

      dir njtgjt

      81415 qqfm.grb

      dir vvcbjct

      $ cd fchgggp

      $ ls

      dir fjcclj

      dir lpn

      145291 lts.zjd

      7288 mglrchsr

      dir pmhdzvfn

      dir qtpdfwh

      dir vjwtvb

      $ cd fjcclj

      $ ls

      28333 gpbswq.vtg

      258676 lts.zjd

      $ cd ..

      $ cd lpn

      $ ls

      197797 pldhhjch

      $ cd ..

      $ cd pmhdzvfn

      $ ls

      21538 gpbswq.pwq

      5451 hqjg

      dir llhp

      220717 lzqmh.stl

      123800 pldhhjch

      dir pmv

      dir rzs

      dir tztv

      160018 zfvgjtzr.qth

      $ cd llhp

      $ ls

      dir lsft

      dir pfjmphs

      $ cd lsft

      $ ls

      78424 gpbswq.ddb

      101497 gqfgrfqw.wtc

      137686 hlqptq.nrj

      122325 mglrchsr

      $ cd ..

      $ cd pfjmphs

      $ ls

      185141 mbw.gnd

      $ cd ..

      $ cd ..

      $ cd pmv

      $ ls

      139255 gqfgrfqw.wtc

      272882 hlqptq.nrj

      $ cd ..

      $ cd rzs

      $ ls

      dir gpbswq

      89153 gpbswq.vcv

      81882 gqfgrfqw.wtc

      39252 hlqptq.nrj

      dir tmcm

      $ cd gpbswq

      $ ls

      205674 ctctt.gqd

      $ cd ..

      $ cd tmcm

      $ ls

      156591 gmjvzj.wzl

      199254 lts.zjd

      dir vzhbsdd

      dir zfs

      $ cd vzhbsdd

      $ ls

      70059 gsgzqgn.fhf

      43456 hrttvrqc

      $ cd ..

      $ cd zfs

      $ ls

      223726 hlqptq.nrj

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd tztv

      $ ls

      200126 lpn.bns

      dir wfjwmbj

      $ cd wfjwmbj

      $ ls

      120344 gdqgml.gdn

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd qtpdfwh

      $ ls

      dir qszjt

      $ cd qszjt

      $ ls

      7207 rthpbmhr.rpv

      20452 ztdnfmgp.dsb

      $ cd ..

      $ cd ..

      $ cd vjwtvb

      $ ls

      dir scswlmn

      $ cd scswlmn

      $ ls

      207195 svsgnbs.jqq

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd gldg

      $ ls

      119560 ctctt.wbc

      203041 gqfgrfqw.wtc

      dir hrp

      274270 lts.zjd

      25081 mhsfdhjr.ndw

      dir svsgnbs

      $ cd hrp

      $ ls

      dir lpn

      $ cd lpn

      $ ls

      dir gpbswq

      dir wvrzhdb

      $ cd gpbswq

      $ ls

      dir vtgc

      $ cd vtgc

      $ ls

      231107 hlqptq.nrj

      $ cd ..

      $ cd ..

      $ cd wvrzhdb

      $ ls

      83303 lts.zjd

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd svsgnbs

      $ ls

      dir fhfqlv

      13446 frn.hzg

      126475 wmjjjl.cjr

      $ cd fhfqlv

      $ ls

      243574 hjn.jzb

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd lpn

      $ ls

      dir mqglznd

      $ cd mqglznd

      $ ls

      dir gpbswq

      177654 gpbswq.zhv

      128217 gqfgrfqw.wtc

      66750 hlqptq.nrj

      136018 hvphz

      dir pswvwtf

      113363 rthpbmhr.gwz

      dir twddrn

      $ cd gpbswq

      $ ls

      244278 lts.zjd

      dir pfrjwbvl

      dir qlrfw

      222491 rthpbmhr

      $ cd pfrjwbvl

      $ ls

      46802 cfl.ljt

      dir ctctt

      dir dfqzmd

      110525 gshdhsfm

      dir jcbw

      dir lpn

      237385 pldhhjch

      15812 prcwhhq.jjh

      dir rthpbmhr

      260693 zmgq

      $ cd ctctt

      $ ls

      6529 hctcg.dpw

      188655 lpn.qjf

      202221 wjnb

      $ cd ..

      $ cd dfqzmd

      $ ls

      197980 ctctt

      $ cd ..

      $ cd jcbw

      $ ls

      1281 gpbswq

      15778 jfgjlcd.mqh

      38803 mdtcrb.dbj

      dir qtjbpbs

      $ cd qtjbpbs

      $ ls

      59348 mglrchsr

      $ cd ..

      $ cd ..

      $ cd lpn

      $ ls

      dir ctctt

      dir hsjjp

      260465 mglrchsr

      $ cd ctctt

      $ ls

      dir wvbrsb

      $ cd wvbrsb

      $ ls

      135584 lts.zjd

      $ cd ..

      $ cd ..

      $ cd hsjjp

      $ ls

      249448 ddfqnwgf

      164051 dsnhsbp.wvv

      dir fmzgm

      dir gpbswq

      113907 gqfgrfqw.wtc

      $ cd fmzgm

      $ ls

      150025 ngnqjcj.tbf

      $ cd ..

      $ cd gpbswq

      $ ls

      33139 dmgqhf.nzd

      dir gpbswq

      dir rwd

      $ cd gpbswq

      $ ls

      148820 lnqqds.rpg

      $ cd ..

      $ cd rwd

      $ ls

      133433 pldhhjch

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd rthpbmhr

      $ ls

      262342 fdnr.svq

      dir nbpsdm

      161791 pldhhjch

      6835 qvclr

      228110 whf

      $ cd nbpsdm

      $ ls

      dir rthpbmhr

      dir svsgnbs

      $ cd rthpbmhr

      $ ls

      267109 chb

      $ cd ..

      $ cd svsgnbs

      $ ls

      150446 rlv.vcc

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd qlrfw

      $ ls

      dir sgcpwst

      $ cd sgcpwst

      $ ls

      dir fss

      $ cd fss

      $ ls

      244165 gpbswq.qtz

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd pswvwtf

      $ ls

      162099 jhdrnv.zrd

      54856 mglrchsr

      dir psdz

      169053 qhq

      $ cd psdz

      $ ls

      dir lbcf

      $ cd lbcf

      $ ls

      218770 ctctt.chv

      95266 pldhhjch

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd twddrn

      $ ls

      120791 hlqptq.nrj

      212213 vffj

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd njtgjt

      $ ls

      dir mzwdb

      $ cd mzwdb

      $ ls

      108520 lts.zjd

      $ cd ..

      $ cd ..

      $ cd vvcbjct

      $ ls

      155890 ctctt.fbw

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ctctt

      $ ls

      5656 mpftwp.nds

      8998 pldhhjch

      185601 snrng.qsv

      $ cd ..

      $ cd rbsrpg

      $ ls

      113129 cpwmjw.rbj

      dir jdhmlzr

      114254 sqj.fzp

      120708 svsgnbs.hpn

      $ cd jdhmlzr

      $ ls

      dir cdnmflmm

      248055 hlqptq.nrj

      247942 pldhhjch

      dir qrwsnzdv

      80053 svsgnbs

      219309 zhqgvd.bhw

      $ cd cdnmflmm

      $ ls

      83138 lpn.wtg

      $ cd ..

      $ cd qrwsnzdv

      $ ls

      197145 zspfb.sbd

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd rzgnbgv

      $ ls

      208692 clz

      dir tmcqcpfc

      dir twlnjr

      $ cd tmcqcpfc

      $ ls

      dir jtnf

      $ cd jtnf

      $ ls

      242978 fhvtvdff.swr

      21748 lwcplzmw

      $ cd ..

      $ cd ..

      $ cd twlnjr

      $ ls

      dir ctctt

      dir gpbswq

      98435 rthpbmhr.pcr

      dir snpm

      dir svsgnbs

      104969 zzd

      $ cd ctctt

      $ ls

      200382 pqswsnhp

      $ cd ..

      $ cd gpbswq

      $ ls

      90380 qqrfbwn

      $ cd ..

      $ cd snpm

      $ ls

      57996 swfjlfh.qft

      $ cd ..

      $ cd svsgnbs

      $ ls

      86028 clcfrnr.jwl

      199666 ctctt.ftr

      200949 ctctt.mrh

      23594 dhlmbh.gjt

      278047 mbchg

      dir pgfhp

      $ cd pgfhp

      $ ls

      21555 rlblnvsd

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd ..

      $ cd svsgnbs

      $ ls

      155183 jgjj.sgs

      28150 pldhhjch

      $ cd ..

      $ cd wqctlzz

      $ ls

      23662 mglrchsr

      60923 pldhhjch'
    parts:
      part1: "--- Day 7: No Space Left On Device ---\nYou can hear birds chirping\
        \ and raindrops hitting leaves as the expedition proceeds. Occasionally, you\
        \ can even hear much louder sounds in the distance; how big do the animals\
        \ get out here, anyway?\n\n\nThe device the Elves gave you has problems with\
        \ more than just its communication system. You try to run a system update:\n\
        \n\n$ system-update --please --pretty-please-with-sugar-on-top\n\nError\n\
        : No space left on device\n\n\n\nPerhaps you can delete some files to make\
        \ space for the update?\n\n\nYou browse around the filesystem to assess the\
        \ situation and save the resulting terminal output (your puzzle input). For\
        \ example:\n\n\n$ cd /\n$ ls\ndir a\n14848514 b.txt\n8504156 c.dat\ndir d\n\
        $ cd a\n$ ls\ndir e\n29116 f\n2557 g\n62596 h.lst\n$ cd e\n$ ls\n584 i\n$\
        \ cd ..\n$ cd ..\n$ cd d\n$ ls\n4060174 j\n8033020 d.log\n5626152 d.ext\n\
        7214296 k\n\n\n\nThe filesystem consists of a tree of files (plain data) and\
        \ directories (which can contain other directories or files). The outermost\
        \ directory is called \n/\n. You can navigate around the filesystem, moving\
        \ into or out of directories and listing the contents of the directory you're\
        \ currently in.\n\n\nWithin the terminal output, lines that begin with \n\
        $\n are \ncommands you executed\n, very much like some modern computers:\n\
        \n\n\n\ncd\n means \nchange directory\n. This changes which directory is the\
        \ current directory, but the specific result depends on the argument:\n  \n\
        \n\ncd x\n moves \nin\n one level: it looks in the current directory for the\
        \ directory named \nx\n and makes it the current directory.\n\n\ncd ..\n moves\
        \ \nout\n one level: it finds the directory that contains the current directory,\
        \ then makes that directory the current directory.\n\n\ncd /\n switches the\
        \ current directory to the outermost directory, \n/\n.\n\n\n\n\n\n\nls\n means\
        \ \nlist\n. It prints out all of the files and directories immediately contained\
        \ by the current directory:\n  \n\n\n123 abc\n means that the current directory\
        \ contains a file named \nabc\n with size \n123\n.\n\n\ndir xyz\n means that\
        \ the current directory contains a directory named \nxyz\n.\n\n\n\n\n\n\n\n\
        \nGiven the commands and output in the example above, you can determine that\
        \ the filesystem looks visually like this:\n\n\n- / (dir)\n  - a (dir)\n \
        \   - e (dir)\n      - i (file, size=584)\n    - f (file, size=29116)\n  \
        \  - g (file, size=2557)\n    - h.lst (file, size=62596)\n  - b.txt (file,\
        \ size=14848514)\n  - c.dat (file, size=8504156)\n  - d (dir)\n    - j (file,\
        \ size=4060174)\n    - d.log (file, size=8033020)\n    - d.ext (file, size=5626152)\n\
        \    - k (file, size=7214296)\n\n\n\nHere, there are four directories: \n\
        /\n (the outermost directory), \na\n and \nd\n (which are in \n/\n), and \n\
        e\n (which is in \na\n). These directories also contain files of various sizes.\n\
        \n\nSince the disk is full, your first step should probably be to find directories\
        \ that are good candidates for deletion. To do this, you need to determine\
        \ the \ntotal size\n of each directory. The total size of a directory is the\
        \ sum of the sizes of the files it contains, directly or indirectly. (Directories\
        \ themselves do not count as having any intrinsic size.)\n\n\nThe total sizes\
        \ of the directories above can be found as follows:\n\n\n\n\nThe total size\
        \ of directory \ne\n is \n584\n because it contains a single file \ni\n of\
        \ size 584 and no other directories.\n\n\nThe directory \na\n has total size\
        \ \n94853\n because it contains files \nf\n (size 29116), \ng\n (size 2557),\
        \ and \nh.lst\n (size 62596), plus file \ni\n indirectly (\na\n contains \n\
        e\n which contains \ni\n).\n\n\nDirectory \nd\n has total size \n24933642\n\
        .\n\n\nAs the outermost directory, \n/\n contains every file. Its total size\
        \ is \n48381165\n, the sum of the size of every file.\n\n\n\n\nTo begin, find\
        \ all of the directories with a total size of \nat most 100000\n, then calculate\
        \ the sum of their total sizes. In the example above, these directories are\
        \ \na\n and \ne\n; the sum of their total sizes is \n95437\n (94853 + 584).\
        \ (As in this example, this process can count files more than once!)\n\n\n\
        Find all of the directories with a total size of at most 100000. \nWhat is\
        \ the sum of the total sizes of those directories?"
      part2: "--- Day 7: No Space Left On Device ---\nYou can hear birds chirping\
        \ and raindrops hitting leaves as the expedition proceeds. Occasionally, you\
        \ can even hear much louder sounds in the distance; how big do the animals\
        \ get out here, anyway?\n\n\nThe device the Elves gave you has problems with\
        \ more than just its communication system. You try to run a system update:\n\
        \n\n$ system-update --please --pretty-please-with-sugar-on-top\n\nError\n\
        : No space left on device\n\n\n\nPerhaps you can delete some files to make\
        \ space for the update?\n\n\nYou browse around the filesystem to assess the\
        \ situation and save the resulting terminal output (your puzzle input). For\
        \ example:\n\n\n$ cd /\n$ ls\ndir a\n14848514 b.txt\n8504156 c.dat\ndir d\n\
        $ cd a\n$ ls\ndir e\n29116 f\n2557 g\n62596 h.lst\n$ cd e\n$ ls\n584 i\n$\
        \ cd ..\n$ cd ..\n$ cd d\n$ ls\n4060174 j\n8033020 d.log\n5626152 d.ext\n\
        7214296 k\n\n\n\nThe filesystem consists of a tree of files (plain data) and\
        \ directories (which can contain other directories or files). The outermost\
        \ directory is called \n/\n. You can navigate around the filesystem, moving\
        \ into or out of directories and listing the contents of the directory you're\
        \ currently in.\n\n\nWithin the terminal output, lines that begin with \n\
        $\n are \ncommands you executed\n, very much like some modern computers:\n\
        \n\n\n\ncd\n means \nchange directory\n. This changes which directory is the\
        \ current directory, but the specific result depends on the argument:\n  \n\
        \n\ncd x\n moves \nin\n one level: it looks in the current directory for the\
        \ directory named \nx\n and makes it the current directory.\n\n\ncd ..\n moves\
        \ \nout\n one level: it finds the directory that contains the current directory,\
        \ then makes that directory the current directory.\n\n\ncd /\n switches the\
        \ current directory to the outermost directory, \n/\n.\n\n\n\n\n\n\nls\n means\
        \ \nlist\n. It prints out all of the files and directories immediately contained\
        \ by the current directory:\n  \n\n\n123 abc\n means that the current directory\
        \ contains a file named \nabc\n with size \n123\n.\n\n\ndir xyz\n means that\
        \ the current directory contains a directory named \nxyz\n.\n\n\n\n\n\n\n\n\
        \nGiven the commands and output in the example above, you can determine that\
        \ the filesystem looks visually like this:\n\n\n- / (dir)\n  - a (dir)\n \
        \   - e (dir)\n      - i (file, size=584)\n    - f (file, size=29116)\n  \
        \  - g (file, size=2557)\n    - h.lst (file, size=62596)\n  - b.txt (file,\
        \ size=14848514)\n  - c.dat (file, size=8504156)\n  - d (dir)\n    - j (file,\
        \ size=4060174)\n    - d.log (file, size=8033020)\n    - d.ext (file, size=5626152)\n\
        \    - k (file, size=7214296)\n\n\n\nHere, there are four directories: \n\
        /\n (the outermost directory), \na\n and \nd\n (which are in \n/\n), and \n\
        e\n (which is in \na\n). These directories also contain files of various sizes.\n\
        \n\nSince the disk is full, your first step should probably be to find directories\
        \ that are good candidates for deletion. To do this, you need to determine\
        \ the \ntotal size\n of each directory. The total size of a directory is the\
        \ sum of the sizes of the files it contains, directly or indirectly. (Directories\
        \ themselves do not count as having any intrinsic size.)\n\n\nThe total sizes\
        \ of the directories above can be found as follows:\n\n\n\n\nThe total size\
        \ of directory \ne\n is \n584\n because it contains a single file \ni\n of\
        \ size 584 and no other directories.\n\n\nThe directory \na\n has total size\
        \ \n94853\n because it contains files \nf\n (size 29116), \ng\n (size 2557),\
        \ and \nh.lst\n (size 62596), plus file \ni\n indirectly (\na\n contains \n\
        e\n which contains \ni\n).\n\n\nDirectory \nd\n has total size \n24933642\n\
        .\n\n\nAs the outermost directory, \n/\n contains every file. Its total size\
        \ is \n48381165\n, the sum of the size of every file.\n\n\n\n\nTo begin, find\
        \ all of the directories with a total size of \nat most 100000\n, then calculate\
        \ the sum of their total sizes. In the example above, these directories are\
        \ \na\n and \ne\n; the sum of their total sizes is \n95437\n (94853 + 584).\
        \ (As in this example, this process can count files more than once!)\n\n\n\
        Find all of the directories with a total size of at most 100000. \nWhat is\
        \ the sum of the total sizes of those directories?\n\n--- Part Two ---\nNow,\
        \ you're ready to choose a directory to delete.\n\n\nThe total disk space\
        \ available to the filesystem is \n70000000\n. To run the update, you need\
        \ unused space of at least \n30000000\n. You need to find a directory you\
        \ can delete that will \nfree up enough space\n to run the update.\n\n\nIn\
        \ the example above, the total size of the outermost directory (and thus the\
        \ total amount of used space) is \n48381165\n; this means that the size of\
        \ the \nunused\n space must currently be \n21618835\n, which isn't quite the\
        \ \n30000000\n required by the update. Therefore, the update still requires\
        \ a directory with total size of at least \n8381165\n to be deleted before\
        \ it can run.\n\n\nTo achieve this, you have the following options:\n\n\n\n\
        \nDelete directory \ne\n, which would increase unused space by \n584\n.\n\n\
        \nDelete directory \na\n, which would increase unused space by \n94853\n.\n\
        \n\nDelete directory \nd\n, which would increase unused space by \n24933642\n\
        .\n\n\nDelete directory \n/\n, which would increase unused space by \n48381165\n\
        .\n\n\n\n\nDirectories \ne\n and \na\n are both too small; deleting them would\
        \ not free up enough space. However, directories \nd\n and \n/\n are both\
        \ big enough! Between these, choose the \nsmallest\n: \nd\n, increasing unused\
        \ space by \n24933642\n.\n\n\nFind the smallest directory that, if deleted,\
        \ would free up enough space on the filesystem to run the update. \nWhat is\
        \ the total size of that directory?"
    title: '--- Day 7: No Space Left On Device ---'
  8:
    answers:
      part1:
        correct: '1703'
        wrong: []
      part2:
        correct: '496650'
        wrong: []
    input: '133120320210233440424211425033311533112110111336536142004454550513525522325223123404213204010312200

      201131111014211324423255354022022243226445013613610423653614522135534505055120330313403031333103010

      312033232323231244025301315245341424106564334260061464515142114141551050411122254121204214442432210

      101223224313414001513045124413405604251532415616200623342234245060512030200002055453441222043022132

      302000022010423415300513533001221654231646352603366222420353100303160621313144421120541324031322221

      022041343104313414435021243154525050055065506466215004364316065443031303052541012204020300331224312

      103341401201343234101335152026143021665443260024145323023321363412215203352344024010350241320230403

      113420142141151035404302242616255522460104100534576523546245441245051223305614204355454223220120301

      141313120334140413444311032422155464031057323373712672513175353623531154646460010504312302300002224

      222122233241135333145102102244620325637577115357373355166254434732406430504542404102101335430322111

      303334221050505214133200215501142243567431213624743475716112467711442460620524310041114411011423020

      314200333004550151023253063621162447552734266222424315622125733562141045411643325165010440012411104

      002041023423222500521530364652321342767176666734452465675417573276212213343035032650010252311440041

      424112310115314154624123026322722176144615437667237551164455332134452657635041110204303331153310423

      403331525242111322464321027125164326531546671615634451453753666614652523355664316050035035431040223

      043240150545010061116502263626227235517673287377662722735257631252161774623714640414211242003124031

      120153432445266666010553121747235535567222344854553227754373283562766712275433030145041514430322020

      130205252451225625553367153422361135376345652238658565468884466665635712475577163231554521534443142

      111112125502543266131422234726554665525278247588365447865236325776254766323137341434403365242323513

      303144132003506154604725457356146262354554756268227328243768455722852644644163423635454133132303535

      355321430425362320027571672735837582654822875282477453446323242873743335342262324741355251635040132

      134315335666154514547724226424352647855667536237263286847676436882327536177762242121655513144251300

      540433012152253201644772517187257277883368828477658659796427367852347254442546347411045431414354124

      123440236041532033152645165666552487887293658447738333978367787858534683322123676621510536503333401

      513523462114216537146475772264724378429935336847846348444575554346687726237537112655265045664650022

      152254463440132245722174776775434287876777476649865634494799993998688326736773121545343121065304241

      250224151321236513227671833576566739347663376834388478944395578563955424353347453672417622666244155

      515223301360505722213752783545553644495694566664938776366634393433784855746658113613537562051065554

      554241245610333147211334537367835857366454575934899676895788946595666473766285253431355325406031452

      100314521636253352672223432738853968767459797559486648888395749643933624738538781345525612342532041

      341462234622615555235573736647638675877393747847457878744844899855446378852378466172227414636330202

      345125124225634624432677378235488673587578945954767695474694483979633396738646725252521775306550112

      413420352557414334236458423883348897736674897485778466695756868398399557654674634472471146623221025

      251143521254271126368347667353953675589776644454498798849645686658369675764886773874127564444411365

      221413142252611772737673846553885549867478965666795885777985495763559573589863845361134756354652555

      243065641366675316826485533843887969469458797465896675796454946875597936434758642384462157714462066

      520553502161266638252882759578566955579648578498775589886979787578896857766344736358531725733564135

      424035430516117723442423478595343855468789497988556567558494878666699996375768427758374271236421335

      252313015177661777278432468494855844559656687766987679695575558744879656544795683583262246546564621

      066230444571526644743382974447835556985988567697575656976987588986595376466888728567376162756500435

      466346066733165454546438886894789699679455689766757985688888664759568963398874674733715475614334101

      325014552177542688745486585579599747867559596676796865787567755944786444539663262282351475561402534

      241163303516225237353826934978454869995779765759887659668665685578986859343646684568651136735352562

      450361264326612736655359595445797648876877955597997887987765775498545883744548752574473726565411112

      554605215356217343577344399893857478777797855566878769757669857854854856357865565536552164136515351

      526446641376374684266375494495458695869978975788699978669887967564769488567376982882762633361324360

      131314671231526545866684867949989786895865986986978678997899677764988874736369482822342624761635224

      623254034413371684428636874768586849979569867987768799666579796798469744978968758623884477174221325

      451620621666445477562568544366499474968796999686779676678989576768596484478933764745243527321126622

      454130052341168772645439448775675586969558878998779766779998798589986885955369648636673756137543515

      052463667567627485865289577459895546659595768687867979887989666587865576357344373227477771625616331

      460630633631764266522893997758984967975685969969798677679989558694657986684466928784764257141450213

      624130637644652532575536775488944945689777797679988979876565896659695947897698966634635115577122034

      312106635521463635433584476586795448766769568869779667989675669974989668369378542526764316562641343

      162151455625714643563689555468449898859656786796979798687579985864586658783373657585741615177725655

      522113305657225658843435489885646557577988797667968888669868768989959977879557377455733555272325032

      304510566333111422674633384687874565587979787768979689685867565897484896499888736286384551117254613

      501463041455354857783745556844585568845776985978966685877875599798784456633539465754543114144204310

      033044042511137887672349889484876755578886688778959586777755687684946795536886522746575472552603266

      506221035322726455557224463853355996897775558969955685797667999588974556935495475632746634441041151

      433136161743725565262636565676447685475989796568778598958657768879849778786859753335661722543205305

      265454361556653132263478888989675487694888975877759959776785674478666588788563747772733262666414514

      052441631644734262283652379957577654769979687765967795697668686969788694345962866843241632716655446

      236003436545632166356247457495793686988694668988898785686844466844799668333966735544674562633412352

      521460600027621624875854349394389587767654998655578976768847769685597639387383648267451531624063352

      342222114334344716267243334967869638699594976567878976765649455495834476654882454551336614731204621

      033566313156263553885434364795389663465876465857797479766958478858465479967473865454116236530266023

      312652012603144155543338267594667756579949844587785799854455597889659839838335338227724422251205254

      300006533237512225736566526838475448787546947968579975977675656694697397732838257677271224106345603

      133143326544516157647526755363599347754745759889457964588954897669586537634253625642342472416641244

      154255220262671713413357272553997888597745494647794956965689397737688378433337485552276212554465555

      100240040401314462336283253854484757937369955476776566463546476496874852334852883176722554655020500

      114224164252562264455188387248845988369836588899857935337746669656565572827235667727764740332042104

      210035410165643165676172383567428973379998596753776399638478657839665546428878531777515004325230423

      210124643010215635561443542385838474565467799589387569934754637575772733563765332372676641151131504

      302221012422133674231332744234367852633548864367379437949776375866557752335873376756770315423300102

      332125266633066263556242566636554222886478446383395355568773939525563625678526672212234343222625410

      025325451166410144267526457225543863563576656495967865696633785745578788783545643421165350000423343

      002055431510265615765734547166486528454663847694453963495886284323368575223225414276066312104153401

      355245141260142612771253626632378444477523462347872628387736452238277834561572523626005254261254042

      203545210065351052363237141625823577635472367448676276452678742864237273162112414622640501555430121

      335510044411666505051763342712375473385677658477545568853568734655885763312211631300144242225254322

      420503535251235101224431771412136627846753333256668624663675776462422374227471570160056336045543305

      311442220344522144201454355125161416822475756464544562823568565277363143626236634605524051151344323

      221042430004563020306242752654674353744234455564453257548654537765566764222366445225313642034222311

      410315020300414623613025143245525766347157877736466252545465214236744364172443246502214503112203230

      342304354225251006345461616171626576425171512572743837515273314522745717111151266035240243530314400

      101402542354002125435251304674647534521162334775342133371111747561164265140621412560624450505304430

      011211315525203435452400223603127166746242764515517634515312173434163762164444142306041434112503201

      312201041521122523410120106532007714457744313215145447526753371116262403622123305243410143403304001

      420143230433241404304622552610552657576751252637557577175144676122663421114064036341501055504120312

      321114124142324224151525015553652243236362311234247651266113535462142056365353412114023231401141232

      144010233331150422332523034411415500511027722375253755262514425243333354512150011301540445044301243

      321223141143321313415515024451144622413543514327723454716501265226013550620005111202312303242203422

      220312222242043544521300416060642531526303363025212311016020154415132623214322110011054242222314401

      120043213410140522500232142235034335033562221102412305131143065020436150033340525535242031300403012

      333011210021031104353104420453564321600565055235040060414452305642301521213234000231332120021102311

      213000422032423433105500120521112552552162045443040565055142555024614151234210022135411312102303010

      311113213314300134505043355233124354500023350433035532626242646113034040102425400244311432332422101'
    parts:
      part1: "--- Day 8: Treetop Tree House ---\nThe expedition comes across a peculiar\
        \ patch of tall trees all planted carefully in a grid. The Elves explain that\
        \ a previous expedition planted these trees as a reforestation effort. Now,\
        \ they're curious if this would be a good location for a \ntree house\n.\n\
        \n\nFirst, determine whether there is enough tree cover here to keep a tree\
        \ house \nhidden\n. To do this, you need to count the number of trees that\
        \ are \nvisible from outside the grid\n when looking directly along a row\
        \ or column.\n\n\nThe Elves have already launched a \nquadcopter\n to generate\
        \ a map with the height of each tree (\nyour puzzle input\n). For example:\n\
        \n\n30373\n25512\n65332\n33549\n35390\n\n\n\nEach tree is represented as a\
        \ single digit whose value is its height, where \n0\n is the shortest and\
        \ \n9\n is the tallest.\n\n\nA tree is \nvisible\n if all of the other trees\
        \ between it and an edge of the grid are \nshorter\n than it. Only consider\
        \ trees in the same row or column; that is, only look up, down, left, or right\
        \ from any given tree.\n\n\nAll of the trees around the edge of the grid are\
        \ \nvisible\n - since they are already on the edge, there are no trees to\
        \ block the view. In this example, that only leaves the \ninterior nine trees\n\
        \ to consider:\n\n\n\n\nThe top-left \n5\n is \nvisible\n from the left and\
        \ top. (It isn't visible from the right or bottom since other trees of height\
        \ \n5\n are in the way.)\n\n\nThe top-middle \n5\n is \nvisible\n from the\
        \ top and right.\n\n\nThe top-right \n1\n is not visible from any direction;\
        \ for it to be visible, there would need to only be trees of height \n0\n\
        \ between it and an edge.\n\n\nThe left-middle \n5\n is \nvisible\n, but only\
        \ from the right.\n\n\nThe center \n3\n is not visible from any direction;\
        \ for it to be visible, there would need to be only trees of at most height\
        \ \n2\n between it and an edge.\n\n\nThe right-middle \n3\n is \nvisible\n\
        \ from the right.\n\n\nIn the bottom row, the middle \n5\n is \nvisible\n\
        , but the \n3\n and \n4\n are not.\n\n\n\n\nWith 16 trees visible on the edge\
        \ and another 5 visible in the interior, a total of \n21\n trees are visible\
        \ in this arrangement.\n\n\nConsider your map; \nhow many trees are visible\
        \ from outside the grid?"
      part2: "--- Day 8: Treetop Tree House ---\nThe expedition comes across a peculiar\
        \ patch of tall trees all planted carefully in a grid. The Elves explain that\
        \ a previous expedition planted these trees as a reforestation effort. Now,\
        \ they're curious if this would be a good location for a \ntree house\n.\n\
        \n\nFirst, determine whether there is enough tree cover here to keep a tree\
        \ house \nhidden\n. To do this, you need to count the number of trees that\
        \ are \nvisible from outside the grid\n when looking directly along a row\
        \ or column.\n\n\nThe Elves have already launched a \nquadcopter\n to generate\
        \ a map with the height of each tree (\nyour puzzle input\n). For example:\n\
        \n\n30373\n25512\n65332\n33549\n35390\n\n\n\nEach tree is represented as a\
        \ single digit whose value is its height, where \n0\n is the shortest and\
        \ \n9\n is the tallest.\n\n\nA tree is \nvisible\n if all of the other trees\
        \ between it and an edge of the grid are \nshorter\n than it. Only consider\
        \ trees in the same row or column; that is, only look up, down, left, or right\
        \ from any given tree.\n\n\nAll of the trees around the edge of the grid are\
        \ \nvisible\n - since they are already on the edge, there are no trees to\
        \ block the view. In this example, that only leaves the \ninterior nine trees\n\
        \ to consider:\n\n\n\n\nThe top-left \n5\n is \nvisible\n from the left and\
        \ top. (It isn't visible from the right or bottom since other trees of height\
        \ \n5\n are in the way.)\n\n\nThe top-middle \n5\n is \nvisible\n from the\
        \ top and right.\n\n\nThe top-right \n1\n is not visible from any direction;\
        \ for it to be visible, there would need to only be trees of height \n0\n\
        \ between it and an edge.\n\n\nThe left-middle \n5\n is \nvisible\n, but only\
        \ from the right.\n\n\nThe center \n3\n is not visible from any direction;\
        \ for it to be visible, there would need to be only trees of at most height\
        \ \n2\n between it and an edge.\n\n\nThe right-middle \n3\n is \nvisible\n\
        \ from the right.\n\n\nIn the bottom row, the middle \n5\n is \nvisible\n\
        , but the \n3\n and \n4\n are not.\n\n\n\n\nWith 16 trees visible on the edge\
        \ and another 5 visible in the interior, a total of \n21\n trees are visible\
        \ in this arrangement.\n\n\nConsider your map; \nhow many trees are visible\
        \ from outside the grid?\n\n--- Part Two ---\nContent with the amount of tree\
        \ cover available, the Elves just need to know the best spot to build their\
        \ tree house: they would like to be able to see a lot of \ntrees\n.\n\n\n\
        To measure the viewing distance from a given tree, look up, down, left, and\
        \ right from that tree; stop if you reach an edge or at the first tree that\
        \ is the same height or taller than the tree under consideration. (If a tree\
        \ is right on the edge, at least one of its viewing distances will be zero.)\n\
        \n\nThe Elves don't care about distant trees taller than those found by the\
        \ rules above; the proposed tree house has large \neaves\n to keep it dry,\
        \ so they wouldn't be able to see higher than the tree house anyway.\n\n\n\
        In the example above, consider the middle \n5\n in the second row:\n\n\n30373\n\
        25\n5\n12\n65332\n33549\n35390\n\n\n\n\n\nLooking up, its view is not blocked;\
        \ it can see \n1\n tree (of height \n3\n).\n\n\nLooking left, its view is\
        \ blocked immediately; it can see only \n1\n tree (of height \n5\n, right\
        \ next to it).\n\n\nLooking right, its view is not blocked; it can see \n\
        2\n trees.\n\n\nLooking down, its view is blocked eventually; it can see \n\
        2\n trees (one of height \n3\n, then the tree of height \n5\n that blocks\
        \ its view).\n\n\n\n\nA tree's \nscenic score\n is found by \nmultiplying\
        \ together\n its viewing distance in each of the four directions. For this\
        \ tree, this is \n4\n (found by multiplying \n1 * 1 * 2 * 2\n).\n\n\nHowever,\
        \ you can do even better: consider the tree of height \n5\n in the middle\
        \ of the fourth row:\n\n\n30373\n25512\n65332\n33\n5\n49\n35390\n\n\n\n\n\n\
        Looking up, its view is blocked at \n2\n trees (by another tree with a height\
        \ of \n5\n).\n\n\nLooking left, its view is not blocked; it can see \n2\n\
        \ trees.\n\n\nLooking down, its view is also not blocked; it can see \n1\n\
        \ tree.\n\n\nLooking right, its view is blocked at \n2\n trees (by a massive\
        \ tree of height \n9\n).\n\n\n\n\nThis tree's scenic score is \n8\n (\n2 *\
        \ 2 * 1 * 2\n); this is the ideal spot for the tree house.\n\n\nConsider each\
        \ tree on your map. \nWhat is the highest scenic score possible for any tree?"
    title: '--- Day 8: Treetop Tree House ---'
  9:
    answers:
      part1:
        correct: '6745'
        wrong: []
      part2:
        correct: '2793'
        wrong: []
    input: 'D 1

      L 2

      D 2

      L 1

      R 1

      D 1

      R 2

      U 1

      R 1

      D 2

      R 1

      L 2

      U 1

      D 2

      R 1

      L 2

      R 1

      U 2

      D 2

      L 1

      U 2

      R 2

      D 1

      R 2

      D 1

      U 2

      D 2

      L 1

      U 1

      R 1

      D 1

      U 1

      D 1

      U 2

      L 2

      R 1

      U 1

      R 2

      L 2

      U 2

      R 1

      L 1

      U 1

      L 2

      R 1

      D 1

      L 1

      D 2

      U 1

      D 1

      R 1

      L 2

      D 1

      R 2

      L 2

      U 1

      D 2

      R 2

      D 1

      U 1

      R 2

      D 1

      L 1

      U 2

      R 2

      D 1

      U 2

      R 1

      D 2

      R 1

      D 1

      U 2

      R 2

      U 1

      R 1

      U 1

      L 1

      U 2

      D 1

      R 2

      D 2

      R 2

      D 1

      L 2

      D 2

      L 1

      R 1

      U 1

      D 2

      L 2

      D 2

      L 1

      D 2

      R 1

      D 1

      R 2

      L 2

      R 2

      D 2

      R 1

      D 2

      R 2

      U 2

      L 2

      R 1

      U 1

      R 1

      U 1

      D 1

      U 1

      R 2

      L 1

      R 1

      D 2

      U 3

      R 1

      L 2

      D 1

      R 3

      U 1

      D 2

      R 1

      D 1

      R 2

      L 1

      R 2

      L 2

      D 3

      R 3

      D 1

      U 2

      D 2

      R 1

      D 2

      R 1

      L 3

      D 1

      L 1

      R 2

      D 3

      R 2

      D 3

      R 3

      L 2

      U 3

      D 3

      L 2

      R 3

      L 1

      U 1

      L 2

      D 2

      U 1

      D 2

      U 1

      D 2

      R 1

      U 1

      D 2

      U 1

      L 1

      R 2

      L 2

      D 3

      U 2

      L 3

      D 2

      U 1

      D 3

      L 1

      U 1

      D 2

      R 2

      U 1

      L 2

      D 3

      L 3

      D 3

      U 1

      R 1

      U 2

      D 1

      R 3

      L 1

      D 1

      U 3

      D 1

      L 2

      U 1

      L 3

      D 2

      L 2

      R 1

      L 3

      U 3

      R 3

      U 1

      R 2

      D 1

      L 3

      U 3

      D 3

      L 2

      D 1

      U 2

      D 2

      U 2

      R 3

      U 2

      L 1

      U 1

      R 2

      L 3

      D 3

      U 3

      R 1

      L 1

      U 1

      D 1

      U 2

      R 1

      D 3

      L 1

      R 3

      L 4

      D 3

      R 2

      U 3

      R 1

      L 4

      R 1

      L 3

      R 3

      U 2

      D 1

      L 3

      D 4

      U 4

      L 3

      U 4

      R 4

      L 1

      R 4

      D 1

      R 1

      L 3

      R 3

      L 1

      R 4

      D 2

      L 3

      D 2

      U 1

      R 3

      D 2

      L 3

      R 4

      L 3

      U 3

      D 3

      R 1

      D 2

      U 4

      L 1

      R 1

      L 4

      R 3

      U 1

      L 4

      R 1

      U 3

      R 1

      L 1

      U 3

      R 3

      U 2

      R 2

      L 4

      U 1

      R 1

      D 3

      L 2

      D 1

      L 3

      R 3

      D 3

      L 4

      U 2

      L 3

      U 4

      L 2

      U 2

      D 4

      L 3

      D 1

      U 2

      L 3

      R 4

      U 1

      L 4

      R 4

      L 3

      U 2

      D 4

      L 1

      R 3

      D 2

      L 3

      U 1

      L 3

      U 4

      R 2

      U 2

      R 1

      D 2

      L 4

      R 3

      D 2

      L 3

      U 3

      D 3

      L 1

      D 4

      R 3

      U 1

      R 3

      L 1

      U 3

      R 2

      D 3

      L 3

      U 3

      L 3

      D 5

      U 4

      L 5

      D 2

      R 1

      D 2

      U 5

      R 1

      U 2

      D 2

      R 4

      U 2

      L 3

      U 2

      R 5

      D 4

      L 3

      U 3

      D 1

      R 2

      L 3

      U 1

      R 5

      D 1

      U 2

      R 1

      U 3

      L 2

      U 5

      R 4

      D 5

      L 4

      D 4

      L 2

      U 4

      R 5

      L 1

      D 1

      R 2

      U 2

      D 5

      R 2

      U 4

      L 3

      D 2

      R 4

      L 1

      R 1

      L 2

      U 4

      D 4

      R 5

      D 3

      R 1

      D 4

      L 4

      U 5

      L 2

      U 2

      L 3

      R 4

      U 5

      L 4

      U 2

      D 1

      R 2

      U 4

      L 1

      U 3

      R 1

      U 5

      D 5

      U 4

      D 3

      L 3

      U 3

      D 2

      U 4

      R 3

      D 1

      U 5

      D 3

      R 1

      U 2

      R 1

      D 4

      R 4

      L 4

      U 1

      L 5

      R 3

      D 2

      U 2

      L 5

      R 1

      L 1

      U 3

      D 4

      R 5

      L 4

      D 5

      L 2

      U 1

      D 1

      U 3

      R 4

      D 4

      L 4

      U 3

      L 2

      D 2

      L 5

      U 1

      R 6

      U 4

      R 3

      D 2

      R 6

      D 2

      R 6

      L 3

      R 4

      L 3

      D 5

      U 2

      R 5

      L 5

      R 4

      U 6

      R 6

      D 1

      U 4

      D 4

      L 3

      D 2

      U 5

      R 2

      U 5

      D 2

      U 3

      R 2

      D 5

      R 2

      D 6

      R 1

      U 5

      D 2

      L 6

      U 2

      L 4

      R 6

      L 6

      D 6

      L 3

      D 5

      L 1

      R 5

      D 4

      L 4

      U 1

      R 3

      D 6

      R 6

      U 2

      R 4

      D 1

      R 4

      U 4

      L 6

      U 6

      D 6

      R 2

      D 2

      L 4

      R 6

      L 1

      U 5

      D 4

      U 4

      R 3

      U 1

      D 3

      R 6

      D 4

      U 5

      R 3

      D 5

      R 5

      D 4

      U 4

      D 3

      U 6

      L 1

      D 4

      U 6

      L 3

      R 3

      D 6

      U 4

      R 3

      L 3

      R 1

      D 6

      R 4

      U 2

      R 6

      L 3

      D 3

      L 4

      R 3

      L 4

      R 3

      U 4

      R 3

      D 4

      R 6

      D 2

      U 1

      D 2

      L 3

      D 4

      L 1

      D 5

      L 6

      U 4

      L 7

      R 6

      U 7

      R 7

      L 5

      D 1

      U 3

      R 6

      U 6

      R 2

      U 5

      R 4

      U 7

      R 1

      L 3

      D 7

      L 4

      D 6

      U 1

      L 1

      R 3

      D 2

      L 5

      R 1

      U 1

      L 1

      R 6

      L 6

      D 2

      U 3

      L 6

      R 6

      L 3

      D 3

      R 2

      L 1

      U 5

      R 6

      D 2

      L 5

      U 1

      D 4

      R 3

      L 6

      R 2

      L 4

      D 4

      R 5

      D 3

      R 2

      L 5

      U 7

      D 5

      L 3

      R 2

      D 5

      U 5

      D 2

      U 2

      L 2

      R 5

      L 2

      D 5

      R 3

      U 4

      R 4

      D 1

      L 6

      U 2

      R 7

      L 3

      U 4

      D 2

      R 5

      L 6

      R 7

      L 1

      U 5

      L 3

      U 7

      D 6

      R 3

      D 3

      U 7

      L 4

      R 2

      U 1

      L 1

      R 6

      D 5

      R 7

      U 4

      D 2

      R 2

      D 4

      L 1

      U 4

      D 2

      R 2

      D 5

      U 7

      D 1

      U 7

      R 3

      U 5

      L 1

      R 7

      L 2

      R 5

      U 5

      R 5

      D 4

      U 5

      L 7

      D 3

      R 5

      L 3

      R 1

      U 8

      L 4

      U 3

      D 4

      U 1

      L 2

      D 5

      L 5

      D 4

      U 3

      L 2

      R 3

      D 6

      L 4

      U 3

      R 1

      U 1

      D 3

      R 5

      D 4

      L 7

      U 7

      R 7

      L 6

      D 7

      U 5

      L 2

      U 4

      R 8

      L 4

      U 4

      R 5

      U 1

      R 1

      D 7

      R 6

      L 8

      R 1

      D 4

      U 5

      R 6

      L 3

      R 7

      L 4

      D 7

      U 8

      R 5

      D 5

      U 4

      L 3

      D 4

      U 1

      L 8

      R 8

      U 2

      L 5

      R 7

      D 5

      L 5

      D 3

      L 5

      U 4

      D 1

      U 6

      R 7

      D 5

      R 4

      D 6

      U 4

      L 5

      D 8

      U 5

      L 7

      D 1

      U 8

      R 3

      U 4

      R 5

      U 7

      R 6

      L 3

      U 4

      L 7

      R 5

      U 6

      L 2

      R 2

      U 7

      R 4

      D 2

      L 2

      D 6

      L 5

      D 5

      L 1

      R 5

      D 1

      U 5

      L 8

      R 3

      D 4

      R 2

      U 2

      L 5

      D 4

      U 7

      D 9

      R 9

      U 9

      R 3

      L 2

      D 8

      U 6

      L 1

      R 1

      D 4

      L 9

      R 9

      L 3

      U 4

      D 7

      U 9

      D 5

      R 8

      D 6

      R 9

      U 2

      R 2

      U 8

      R 5

      U 6

      L 8

      D 7

      L 2

      U 3

      R 3

      U 6

      L 5

      R 4

      D 6

      U 6

      R 6

      D 5

      U 5

      D 6

      L 4

      D 2

      U 6

      L 8

      U 3

      D 6

      U 1

      L 7

      D 6

      R 3

      D 7

      U 6

      D 4

      U 5

      R 3

      D 7

      L 5

      U 6

      L 6

      R 2

      D 7

      L 7

      U 5

      D 9

      R 6

      L 9

      R 1

      L 6

      U 5

      R 4

      U 7

      L 2

      U 5

      L 9

      U 3

      R 2

      L 5

      R 2

      U 6

      L 3

      D 7

      R 9

      D 3

      L 4

      R 2

      D 8

      L 6

      D 9

      L 5

      D 1

      R 8

      D 4

      U 5

      L 7

      D 2

      R 2

      L 7

      D 6

      L 7

      R 1

      D 4

      U 3

      D 3

      U 8

      R 8

      L 3

      D 8

      U 7

      R 4

      D 9

      L 3

      U 10

      L 4

      D 4

      R 7

      U 1

      L 10

      U 10

      R 9

      U 3

      L 3

      R 1

      D 10

      L 4

      U 9

      L 4

      U 7

      L 8

      R 7

      D 1

      U 3

      L 3

      U 2

      R 4

      U 5

      D 9

      L 5

      U 10

      L 2

      U 1

      L 7

      D 9

      L 8

      R 10

      D 7

      U 9

      L 4

      U 10

      L 3

      U 1

      D 1

      L 1

      D 6

      U 8

      R 8

      L 6

      U 9

      L 3

      U 6

      R 6

      U 3

      R 7

      U 2

      D 4

      L 4

      R 8

      D 3

      R 8

      U 2

      R 3

      D 6

      U 4

      R 9

      L 4

      D 4

      L 6

      R 2

      D 10

      L 7

      R 9

      L 7

      D 8

      R 2

      D 2

      U 9

      R 2

      U 1

      R 10

      U 1

      D 2

      U 10

      D 10

      U 5

      R 3

      U 5

      R 10

      L 3

      R 5

      U 5

      L 4

      D 3

      L 7

      D 3

      U 10

      R 7

      L 3

      D 2

      L 1

      D 1

      L 7

      R 2

      L 10

      D 6

      R 4

      L 8

      R 9

      D 5

      L 2

      D 4

      R 1

      L 4

      R 8

      D 5

      R 10

      D 1

      L 10

      D 11

      L 10

      R 4

      L 3

      D 1

      U 4

      L 9

      D 6

      U 2

      R 4

      L 2

      U 5

      D 1

      R 6

      L 5

      U 7

      D 2

      R 5

      D 9

      R 11

      U 9

      D 9

      R 2

      L 9

      D 4

      U 7

      L 10

      D 7

      U 4

      D 1

      U 4

      D 10

      L 8

      D 3

      L 8

      D 8

      R 7

      D 10

      R 5

      U 1

      L 11

      D 2

      L 11

      U 4

      L 8

      D 10

      U 3

      D 11

      R 10

      L 1

      D 2

      U 11

      L 4

      U 2

      L 6

      D 7

      R 10

      L 2

      D 7

      R 9

      U 6

      D 5

      R 9

      U 1

      D 3

      R 8

      D 7

      L 3

      D 8

      U 4

      D 4

      R 8

      L 7

      R 1

      D 3

      U 7

      D 4

      L 10

      R 1

      D 6

      R 1

      L 5

      D 2

      L 9

      R 1

      U 5

      D 4

      U 11

      L 6

      R 11

      D 11

      R 6

      U 9

      R 1

      L 5

      U 3

      R 10

      L 8

      R 6

      L 2

      R 8

      D 11

      L 5

      R 3

      L 1

      R 3

      L 8

      R 10

      U 2

      R 2

      D 7

      L 9

      U 2

      L 8

      D 3

      U 1

      L 11

      D 1

      U 6

      L 2

      R 7

      D 5

      R 1

      D 11

      U 12

      D 10

      L 11

      U 3

      D 10

      L 6

      U 3

      D 12

      R 4

      D 9

      R 2

      U 12

      R 11

      L 2

      R 7

      L 11

      U 12

      R 12

      U 1

      R 2

      D 8

      R 10

      U 2

      D 8

      U 8

      D 5

      U 10

      R 4

      U 8

      D 4

      R 8

      D 8

      R 2

      U 4

      L 10

      D 2

      L 10

      R 2

      D 9

      U 6

      L 2

      D 10

      L 2

      D 11

      R 11

      U 2

      L 6

      D 3

      U 3

      R 4

      U 9

      L 9

      R 8

      D 5

      L 9

      U 8

      L 11

      D 8

      R 12

      U 1

      D 1

      U 7

      L 11

      U 2

      L 12

      R 11

      U 8

      R 12

      U 11

      L 7

      U 5

      L 4

      R 4

      D 1

      U 6

      D 7

      U 5

      R 5

      U 10

      D 2

      R 9

      L 12

      D 9

      U 6

      L 11

      D 7

      L 6

      D 10

      L 9

      D 11

      R 7

      D 10

      L 1

      R 9

      D 10

      L 1

      U 1

      L 13

      R 10

      D 9

      L 9

      U 7

      L 10

      R 1

      U 12

      R 13

      U 8

      L 9

      U 5

      L 11

      D 11

      U 8

      R 2

      D 2

      R 7

      D 3

      L 3

      R 2

      L 6

      U 11

      L 6

      U 8

      L 11

      U 12

      L 13

      D 4

      L 8

      U 11

      D 9

      U 11

      D 10

      U 4

      D 9

      L 12

      D 6

      L 11

      U 11

      L 1

      D 6

      R 12

      U 9

      D 1

      L 4

      R 9

      L 13

      R 10

      D 9

      L 2

      R 3

      D 10

      L 13

      R 3

      L 8

      R 8

      L 1

      R 5

      L 12

      D 10

      R 6

      U 7

      R 11

      U 11

      R 10

      D 9

      R 12

      D 8

      U 6

      L 8

      D 6

      L 10

      R 2

      L 2

      D 12

      U 12

      R 11

      L 8

      U 2

      R 2

      L 11

      U 11

      L 7

      D 2

      U 2

      L 9

      D 4

      R 2

      U 7

      D 3

      R 1

      D 6

      U 13

      R 11

      D 1

      U 4

      R 9

      D 7

      L 12

      U 12

      L 10

      U 9

      L 1

      D 1

      U 6

      L 1

      D 13

      U 14

      L 2

      D 6

      U 8

      D 8

      L 9

      D 1

      R 11

      D 6

      L 8

      R 11

      U 4

      L 5

      R 5

      D 10

      U 10

      R 7

      D 7

      L 8

      U 9

      R 1

      L 5

      D 4

      L 13

      D 4

      R 14

      D 13

      R 9

      L 13

      R 7

      L 14

      R 12

      D 1

      U 8

      L 10

      U 7

      D 9

      U 7

      D 13

      L 1

      R 1

      D 14

      L 9

      U 5

      R 7

      U 2

      L 11

      D 5

      U 7

      D 1

      L 13

      U 14

      L 1

      D 3

      R 3

      D 1

      L 3

      U 4

      R 14

      U 11

      R 4

      L 13

      U 3

      R 8

      D 5

      U 8

      L 6

      R 14

      L 3

      D 2

      L 5

      U 11

      R 8

      L 11

      U 8

      D 11

      U 14

      R 14

      L 4

      D 10

      R 11

      U 1

      D 4

      U 11

      D 5

      L 5

      R 14

      U 12

      L 1

      D 4

      R 11

      L 5

      R 9

      U 9

      D 2

      U 12

      D 2

      R 8

      U 6

      L 11

      U 8

      L 6

      U 9

      L 5

      U 3

      D 10

      R 10

      D 6

      U 1

      R 13

      U 5

      R 8

      U 11

      L 11

      D 10

      R 11

      U 2

      D 3

      R 10

      D 2

      L 9

      R 7

      L 8

      U 1

      R 6

      L 3

      D 10

      U 14

      D 4

      U 7

      L 6

      R 8

      U 15

      D 14

      U 5

      D 15

      U 2

      D 4

      L 11

      U 8

      L 10

      U 15

      R 8

      U 14

      D 6

      R 9

      L 15

      R 9

      L 11

      R 3

      D 2

      U 10

      L 12

      D 2

      L 5

      D 1

      R 8

      U 7

      L 7

      D 7

      L 15

      D 11

      U 3

      L 4

      U 10

      L 14

      U 10

      D 10

      U 11

      D 1

      L 3

      R 11

      L 3

      U 10

      L 2

      D 8

      R 8

      L 12

      D 15

      U 10

      L 14

      R 4

      L 9

      R 11

      U 10

      R 7

      D 13

      U 11

      D 10

      R 3

      U 6

      R 9

      L 15

      R 11

      D 6

      R 14

      L 7

      D 7

      L 3

      D 13

      U 10

      R 14

      U 2

      D 4

      U 1

      R 1

      D 8

      R 12

      L 15

      R 4

      L 15

      U 13

      D 12

      L 8

      D 1

      R 3

      U 11

      R 3

      U 2

      R 4

      D 15

      U 4

      L 6

      D 6

      L 9

      D 2

      L 15

      R 5

      U 2

      R 7

      D 7

      U 15

      L 4

      D 7

      R 9

      D 11

      R 8

      L 4

      R 6

      L 11

      U 16

      L 10

      U 10

      L 11

      U 9

      R 8

      U 13

      R 13

      L 5

      R 8

      L 12

      U 11

      L 4

      D 10

      R 2

      U 13

      R 4

      L 15

      D 15

      L 15

      R 16

      L 7

      R 14

      D 5

      L 16

      U 6

      D 3

      L 13

      D 8

      L 11

      U 13

      L 9

      U 6

      L 4

      U 11

      R 1

      L 13

      R 11

      L 13

      R 13

      L 9

      D 15

      R 1

      L 15

      R 14

      L 14

      U 7

      L 1

      R 6

      D 16

      L 2

      R 12

      L 4

      D 12

      R 8

      U 9

      D 10

      R 1

      L 2

      D 5

      L 3

      R 15

      L 8

      D 1

      L 1

      D 8

      U 13

      R 1

      L 2

      D 1

      R 3

      L 6

      U 12

      L 4

      D 13

      U 2

      L 4

      D 10

      R 16

      D 1

      U 1

      L 11

      D 8

      L 12

      R 8

      L 5

      R 1

      D 12

      R 2

      D 7

      U 16

      D 11

      L 15

      R 4

      U 4

      D 4

      U 4

      L 17

      U 3

      D 8

      U 1

      L 1

      U 4

      L 7

      U 9

      L 13

      D 10

      L 2

      U 7

      L 13

      D 16

      U 6

      L 10

      D 16

      L 8

      U 10

      L 6

      U 16

      L 5

      U 4

      R 9

      D 12

      R 1

      U 14

      L 14

      R 16

      D 5

      L 16

      R 14

      U 10

      R 4

      U 9

      L 15

      D 4

      U 15

      L 11

      R 14

      L 10

      D 14

      L 10

      D 12

      R 2

      D 3

      R 1

      U 1

      L 17

      U 9

      D 13

      R 7

      D 7

      U 13

      D 1

      R 14

      U 10

      R 16

      L 17

      R 7

      D 17

      U 11

      L 2

      U 16

      L 8

      U 13

      R 17

      U 5

      L 7

      R 3

      D 17

      L 10

      U 9

      D 16

      R 3

      U 5

      L 15

      R 16

      D 11

      U 9

      L 3

      R 14

      D 4

      L 4

      U 12

      D 9

      U 10

      D 15

      L 12

      R 6

      D 4

      L 14

      D 5

      L 4

      U 7

      R 15

      D 6

      L 15

      U 14

      D 10

      L 3

      D 9

      L 15

      R 9

      U 1

      L 4

      D 15

      U 12

      D 9

      R 8

      D 14

      R 15

      D 7

      U 18

      L 5

      U 6

      L 6

      D 10

      L 18

      R 3

      L 11

      D 10

      L 13

      U 13

      L 13

      R 3

      L 1

      U 3

      D 7

      L 9

      R 6

      U 18

      R 18

      U 15

      R 9

      U 4

      R 12

      L 12

      D 6

      U 10

      D 13

      L 6

      R 13

      L 13

      D 12

      U 4

      D 15

      L 12

      D 10

      U 12

      R 8

      L 13

      D 11

      L 13

      U 12

      D 5

      U 12

      R 10

      L 9

      U 13

      R 7

      D 2

      L 6

      U 13

      D 15

      R 3

      U 4

      D 5

      L 2

      D 10

      U 7

      L 2

      D 5

      L 5

      D 11

      R 5

      U 18

      L 9

      D 8

      U 12

      R 3

      U 8

      R 14

      D 1

      R 4

      L 5

      D 10

      R 18

      D 2

      R 9

      L 14

      U 4

      R 15

      D 4

      R 2

      L 4

      U 13

      R 6

      U 18

      D 4

      U 7

      L 15

      D 1

      L 6

      D 3

      U 15

      L 17

      U 15

      R 14

      L 9

      U 5

      L 4

      U 13

      R 5

      D 17

      U 17

      L 15

      U 14

      R 5

      L 1

      R 9

      U 8

      R 15

      U 18

      L 12

      R 13

      D 15

      R 5

      L 11

      R 5

      U 12

      R 8

      L 6

      R 1

      L 10

      U 17

      L 16

      U 12

      L 14

      D 16

      U 13

      D 18

      L 5

      U 16

      L 11

      D 15

      U 2

      L 9

      D 5

      L 17

      D 17

      L 4

      D 4

      L 19

      R 6

      D 6

      U 18

      R 16

      U 12

      D 2

      L 4

      U 19

      R 6

      U 1

      D 15

      R 13

      U 18

      D 12

      L 9

      U 1

      R 13

      D 18

      L 4

      D 17

      L 9

      D 8

      U 3

      D 5

      R 7

      L 16

      U 3

      L 1

      D 13

      R 17

      D 8

      R 9

      U 17

      L 2

      U 17

      D 16

      L 8

      R 9

      D 7

      L 16

      R 10

      L 16

      D 10

      L 15

      U 17

      L 2

      U 10

      D 16

      R 1

      L 2

      D 4

      R 13

      L 12

      D 8

      U 10

      L 6

      D 14

      L 6

      D 11

      R 1

      D 10

      L 18

      D 12

      R 14

      L 3

      D 7

      L 12

      R 19

      U 5

      R 19

      D 3

      L 15

      U 13'
    parts:
      part1: "--- Day 9: Rope Bridge ---\nThis rope bridge creaks as you walk along\
        \ it. You aren't sure how old it is, or whether it can even support your weight.\n\
        \n\nIt seems to support the Elves just fine, though. The bridge spans a gorge\
        \ which was carved out by the massive river far below you.\n\n\nYou step carefully;\
        \ as you do, the ropes stretch and twist. You decide to distract yourself\
        \ by modeling rope physics; maybe you can even figure out where \nnot\n to\
        \ step.\n\n\nConsider a rope with a knot at each end; these knots mark the\
        \ \nhead\n and the \ntail\n of the rope. If the head moves far enough away\
        \ from the tail, the tail is pulled toward the head.\n\n\nDue to nebulous\
        \ reasoning involving \nPlanck lengths\n, you should be able to model the\
        \ positions of the knots on a two-dimensional grid. Then, by following a hypothetical\
        \ \nseries of motions\n (your puzzle input) for the head, you can determine\
        \ how the tail will move.\n\n\nDue to the aforementioned Planck lengths\n\
        , the rope must be quite short; in fact, the head (\nH\n) and tail (\nT\n\
        ) must \nalways be touching\n (diagonally adjacent and even overlapping both\
        \ count as touching):\n\n\n....\n.TH.\n....\n\n....\n.H..\n..T.\n....\n\n\
        ...\n.H. (H covers T)\n...\n\n\n\nIf the head is ever two steps directly up,\
        \ down, left, or right from the tail, the tail must also move one step in\
        \ that direction so it remains close enough:\n\n\n.....    .....    .....\n\
        .TH.. -> .T.H. -> ..TH.\n.....    .....    .....\n\n...    ...    ...\n.T.\
        \    .T.    ...\n.H. -> ... -> .T.\n...    .H.    .H.\n...    ...    ...\n\
        \n\n\nOtherwise, if the head and tail aren't touching and aren't in the same\
        \ row or column, the tail always moves one step diagonally to keep up:\n\n\
        \n.....    .....    .....\n.....    ..H..    ..H..\n..H.. -> ..... -> ..T..\n\
        .T...    .T...    .....\n.....    .....    .....\n\n.....    .....    .....\n\
        .....    .....    .....\n..H.. -> ...H. -> ..TH.\n.T...    .T...    .....\n\
        .....    .....    .....\n\n\n\nYou just need to work out where the tail goes\
        \ as the head follows a series of motions. Assume the head and the tail both\
        \ start at the same position, overlapping.\n\n\nFor example:\n\n\nR 4\nU 4\n\
        L 3\nD 1\nR 4\nD 1\nL 5\nR 2\n\n\n\nThis series of motions moves the head\
        \ \nright\n four steps, then \nup\n four steps, then \nleft\n three steps,\
        \ then \ndown\n one step, and so on. After each step, you'll need to update\
        \ the position of the tail if the step means the head is no longer adjacent\
        \ to the tail. Visually, these motions occur as follows (\ns\n marks the starting\
        \ position as a reference point):\n\n\n== Initial State ==\n\n......\n......\n\
        ......\n......\nH.....  (H covers T, s)\n\n== R 4 ==\n\n......\n......\n......\n\
        ......\nTH....  (T covers s)\n\n......\n......\n......\n......\nsTH...\n\n\
        ......\n......\n......\n......\ns.TH..\n\n......\n......\n......\n......\n\
        s..TH.\n\n== U 4 ==\n\n......\n......\n......\n....H.\ns..T..\n\n......\n\
        ......\n....H.\n....T.\ns.....\n\n......\n....H.\n....T.\n......\ns.....\n\
        \n....H.\n....T.\n......\n......\ns.....\n\n== L 3 ==\n\n...H..\n....T.\n\
        ......\n......\ns.....\n\n..HT..\n......\n......\n......\ns.....\n\n.HT...\n\
        ......\n......\n......\ns.....\n\n== D 1 ==\n\n..T...\n.H....\n......\n......\n\
        s.....\n\n== R 4 ==\n\n..T...\n..H...\n......\n......\ns.....\n\n..T...\n\
        ...H..\n......\n......\ns.....\n\n......\n...TH.\n......\n......\ns.....\n\
        \n......\n....TH\n......\n......\ns.....\n\n== D 1 ==\n\n......\n....T.\n\
        .....H\n......\ns.....\n\n== L 5 ==\n\n......\n....T.\n....H.\n......\ns.....\n\
        \n......\n....T.\n...H..\n......\ns.....\n\n......\n......\n..HT..\n......\n\
        s.....\n\n......\n......\n.HT...\n......\ns.....\n\n......\n......\nHT....\n\
        ......\ns.....\n\n== R 2 ==\n\n......\n......\n.H....  (H covers T)\n......\n\
        s.....\n\n......\n......\n.TH...\n......\ns.....\n\n\n\nAfter simulating the\
        \ rope, you can count up all of the positions the \ntail visited at least\
        \ once\n. In this diagram, \ns\n again marks the starting position (which\
        \ the tail also visited) and \n#\n marks other positions the tail visited:\n\
        \n\n..##..\n...##.\n.####.\n....#.\ns###..\n\n\n\nSo, there are \n13\n positions\
        \ the tail visited at least once.\n\n\nSimulate your complete hypothetical\
        \ series of motions. \nHow many positions does the tail of the rope visit\
        \ at least once?"
      part2: "--- Day 9: Rope Bridge ---\nThis rope bridge creaks as you walk along\
        \ it. You aren't sure how old it is, or whether it can even support your weight.\n\
        \n\nIt seems to support the Elves just fine, though. The bridge spans a gorge\
        \ which was carved out by the massive river far below you.\n\n\nYou step carefully;\
        \ as you do, the ropes stretch and twist. You decide to distract yourself\
        \ by modeling rope physics; maybe you can even figure out where \nnot\n to\
        \ step.\n\n\nConsider a rope with a knot at each end; these knots mark the\
        \ \nhead\n and the \ntail\n of the rope. If the head moves far enough away\
        \ from the tail, the tail is pulled toward the head.\n\n\nDue to nebulous\
        \ reasoning involving \nPlanck lengths\n, you should be able to model the\
        \ positions of the knots on a two-dimensional grid. Then, by following a hypothetical\
        \ \nseries of motions\n (your puzzle input) for the head, you can determine\
        \ how the tail will move.\n\n\nDue to the aforementioned Planck lengths\n\
        , the rope must be quite short; in fact, the head (\nH\n) and tail (\nT\n\
        ) must \nalways be touching\n (diagonally adjacent and even overlapping both\
        \ count as touching):\n\n\n....\n.TH.\n....\n\n....\n.H..\n..T.\n....\n\n\
        ...\n.H. (H covers T)\n...\n\n\n\nIf the head is ever two steps directly up,\
        \ down, left, or right from the tail, the tail must also move one step in\
        \ that direction so it remains close enough:\n\n\n.....    .....    .....\n\
        .TH.. -> .T.H. -> ..TH.\n.....    .....    .....\n\n...    ...    ...\n.T.\
        \    .T.    ...\n.H. -> ... -> .T.\n...    .H.    .H.\n...    ...    ...\n\
        \n\n\nOtherwise, if the head and tail aren't touching and aren't in the same\
        \ row or column, the tail always moves one step diagonally to keep up:\n\n\
        \n.....    .....    .....\n.....    ..H..    ..H..\n..H.. -> ..... -> ..T..\n\
        .T...    .T...    .....\n.....    .....    .....\n\n.....    .....    .....\n\
        .....    .....    .....\n..H.. -> ...H. -> ..TH.\n.T...    .T...    .....\n\
        .....    .....    .....\n\n\n\nYou just need to work out where the tail goes\
        \ as the head follows a series of motions. Assume the head and the tail both\
        \ start at the same position, overlapping.\n\n\nFor example:\n\n\nR 4\nU 4\n\
        L 3\nD 1\nR 4\nD 1\nL 5\nR 2\n\n\n\nThis series of motions moves the head\
        \ \nright\n four steps, then \nup\n four steps, then \nleft\n three steps,\
        \ then \ndown\n one step, and so on. After each step, you'll need to update\
        \ the position of the tail if the step means the head is no longer adjacent\
        \ to the tail. Visually, these motions occur as follows (\ns\n marks the starting\
        \ position as a reference point):\n\n\n== Initial State ==\n\n......\n......\n\
        ......\n......\nH.....  (H covers T, s)\n\n== R 4 ==\n\n......\n......\n......\n\
        ......\nTH....  (T covers s)\n\n......\n......\n......\n......\nsTH...\n\n\
        ......\n......\n......\n......\ns.TH..\n\n......\n......\n......\n......\n\
        s..TH.\n\n== U 4 ==\n\n......\n......\n......\n....H.\ns..T..\n\n......\n\
        ......\n....H.\n....T.\ns.....\n\n......\n....H.\n....T.\n......\ns.....\n\
        \n....H.\n....T.\n......\n......\ns.....\n\n== L 3 ==\n\n...H..\n....T.\n\
        ......\n......\ns.....\n\n..HT..\n......\n......\n......\ns.....\n\n.HT...\n\
        ......\n......\n......\ns.....\n\n== D 1 ==\n\n..T...\n.H....\n......\n......\n\
        s.....\n\n== R 4 ==\n\n..T...\n..H...\n......\n......\ns.....\n\n..T...\n\
        ...H..\n......\n......\ns.....\n\n......\n...TH.\n......\n......\ns.....\n\
        \n......\n....TH\n......\n......\ns.....\n\n== D 1 ==\n\n......\n....T.\n\
        .....H\n......\ns.....\n\n== L 5 ==\n\n......\n....T.\n....H.\n......\ns.....\n\
        \n......\n....T.\n...H..\n......\ns.....\n\n......\n......\n..HT..\n......\n\
        s.....\n\n......\n......\n.HT...\n......\ns.....\n\n......\n......\nHT....\n\
        ......\ns.....\n\n== R 2 ==\n\n......\n......\n.H....  (H covers T)\n......\n\
        s.....\n\n......\n......\n.TH...\n......\ns.....\n\n\n\nAfter simulating the\
        \ rope, you can count up all of the positions the \ntail visited at least\
        \ once\n. In this diagram, \ns\n again marks the starting position (which\
        \ the tail also visited) and \n#\n marks other positions the tail visited:\n\
        \n\n..##..\n...##.\n.####.\n....#.\ns###..\n\n\n\nSo, there are \n13\n positions\
        \ the tail visited at least once.\n\n\nSimulate your complete hypothetical\
        \ series of motions. \nHow many positions does the tail of the rope visit\
        \ at least once?\n\n--- Part Two ---\nA rope snaps! Suddenly, the river is\
        \ getting a lot closer than you remember. The bridge is still there, but some\
        \ of the ropes that broke are now whipping toward you as you fall through\
        \ the air!\n\n\nThe ropes are moving too quickly to grab; you only have a\
        \ few seconds to choose how to arch your body to avoid being hit. Fortunately,\
        \ your simulation can be extended to support longer ropes.\n\n\nRather than\
        \ two knots, you now must simulate a rope consisting of \nten\n knots. One\
        \ knot is still the head of the rope and moves according to the series of\
        \ motions. Each knot further down the rope follows the knot in front of it\
        \ using the same rules as before.\n\n\nUsing the same series of motions as\
        \ the above example, but with the knots marked \nH\n, \n1\n, \n2\n, ..., \n\
        9\n, the motions now occur as follows:\n\n\n== Initial State ==\n\n......\n\
        ......\n......\n......\nH.....  (H covers 1, 2, 3, 4, 5, 6, 7, 8, 9, s)\n\n\
        == R 4 ==\n\n......\n......\n......\n......\n1H....  (1 covers 2, 3, 4, 5,\
        \ 6, 7, 8, 9, s)\n\n......\n......\n......\n......\n21H...  (2 covers 3, 4,\
        \ 5, 6, 7, 8, 9, s)\n\n......\n......\n......\n......\n321H..  (3 covers 4,\
        \ 5, 6, 7, 8, 9, s)\n\n......\n......\n......\n......\n4321H.  (4 covers 5,\
        \ 6, 7, 8, 9, s)\n\n== U 4 ==\n\n......\n......\n......\n....H.\n4321..  (4\
        \ covers 5, 6, 7, 8, 9, s)\n\n......\n......\n....H.\n.4321.\n5.....  (5 covers\
        \ 6, 7, 8, 9, s)\n\n......\n....H.\n....1.\n.432..\n5.....  (5 covers 6, 7,\
        \ 8, 9, s)\n\n....H.\n....1.\n..432.\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\
        \n== L 3 ==\n\n...H..\n....1.\n..432.\n.5....\n6.....  (6 covers 7, 8, 9,\
        \ s)\n\n..H1..\n...2..\n..43..\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\n\
        .H1...\n...2..\n..43..\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\n== D 1 ==\n\
        \n..1...\n.H.2..\n..43..\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\n== R 4\
        \ ==\n\n..1...\n..H2..\n..43..\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\n\
        ..1...\n...H..  (H covers 2)\n..43..\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\
        \n......\n...1H.  (1 covers 2)\n..43..\n.5....\n6.....  (6 covers 7, 8, 9,\
        \ s)\n\n......\n...21H\n..43..\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\n\
        == D 1 ==\n\n......\n...21.\n..43.H\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\
        \n== L 5 ==\n\n......\n...21.\n..43H.\n.5....\n6.....  (6 covers 7, 8, 9,\
        \ s)\n\n......\n...21.\n..4H..  (H covers 3)\n.5....\n6.....  (6 covers 7,\
        \ 8, 9, s)\n\n......\n...2..\n..H1..  (H covers 4; 1 covers 3)\n.5....\n6.....\
        \  (6 covers 7, 8, 9, s)\n\n......\n...2..\n.H13..  (1 covers 4)\n.5....\n\
        6.....  (6 covers 7, 8, 9, s)\n\n......\n......\nH123..  (2 covers 4)\n.5....\n\
        6.....  (6 covers 7, 8, 9, s)\n\n== R 2 ==\n\n......\n......\n.H23..  (H covers\
        \ 1; 2 covers 4)\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\n......\n......\n\
        .1H3..  (H covers 2, 4)\n.5....\n6.....  (6 covers 7, 8, 9, s)\n\n\n\nNow,\
        \ you need to keep track of the positions the new tail, \n9\n, visits. In\
        \ this example, the tail never moves, and so it only visits \n1\n position.\
        \ However, \nbe careful\n: more types of motion are possible than before,\
        \ so you might want to visually compare your simulated rope to the one above.\n\
        \n\nHere's a larger example:\n\n\nR 5\nU 8\nL 8\nD 3\nR 17\nD 10\nL 25\nU\
        \ 20\n\n\n\nThese motions occur as follows (individual steps are not shown):\n\
        \n\n== Initial State ==\n\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n...........H..............  (H covers 1, 2, 3,\
        \ 4, 5, 6, 7, 8, 9, s)\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        \n== R 5 ==\n\n..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ...........54321H.........  (5 covers 6, 7, 8, 9, s)\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n\n== U 8 ==\n\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n................H.........\n\
        ................1.........\n................2.........\n................3.........\n\
        ...............54.........\n..............6...........\n.............7............\n\
        ............8.............\n...........9..............  (9 covers s)\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n\n== L 8 ==\n\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n........H1234.............\n\
        ............5.............\n............6.............\n............7.............\n\
        ............8.............\n............9.............\n..........................\n\
        ..........................\n...........s..............\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n\n== D 3 ==\n\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        .........2345.............\n........1...6.............\n........H...7.............\n\
        ............8.............\n............9.............\n..........................\n\
        ..........................\n...........s..............\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n\n== R 17 ==\n\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n................987654321H\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n...........s..............\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n\n== D 10 ==\n\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n...........s.........98765\n.........................4\n\
        .........................3\n.........................2\n.........................1\n\
        .........................H\n\n== L 25 ==\n\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n...........s..............\n..........................\n\
        ..........................\n..........................\n..........................\n\
        H123456789................\n\n== U 20 ==\n\nH.........................\n1.........................\n\
        2.........................\n3.........................\n4.........................\n\
        5.........................\n6.........................\n7.........................\n\
        8.........................\n9.........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n...........s..............\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n\n\n\n\nNow, the tail (\n9\n) visits \n36\n positions\
        \ (including \ns\n) at least once:\n\n\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n..........................\n..........................\n\
        ..........................\n#.........................\n#.............###.........\n\
        #............#...#........\n.#..........#.....#.......\n..#..........#.....#......\n\
        ...#........#.......#.....\n....#......s.........#....\n.....#..............#.....\n\
        ......#............#......\n.......#..........#.......\n........#........#........\n\
        .........########.........\n\n\n\nSimulate your complete series of motions\
        \ on a larger rope with ten knots. \nHow many positions does the tail of the\
        \ rope visit at least once?"
    title: '--- Day 9: Rope Bridge ---'
  10:
    answers:
      part1:
        correct: '13820'
        wrong: []
      part2:
        correct: ZKGRKGRK
        wrong: []
    input: 'addx 1

      noop

      addx 2

      addx 5

      addx 3

      noop

      addx -1

      addx 5

      noop

      noop

      addx 5

      noop

      addx 3

      noop

      addx 6

      addx -4

      noop

      noop

      addx 5

      noop

      addx -32

      addx 35

      addx 5

      addx -31

      addx 7

      addx -13

      addx 2

      addx 2

      addx 5

      addx 6

      addx -5

      addx 2

      addx 5

      addx 2

      addx 2

      addx -17

      addx 18

      addx 5

      addx 2

      addx -30

      addx 31

      addx 2

      addx 2

      addx -32

      addx -1

      addx 10

      addx -8

      noop

      noop

      addx 6

      addx 16

      noop

      addx -11

      addx 3

      addx -2

      addx 3

      noop

      addx 6

      noop

      addx -2

      noop

      addx 7

      addx 3

      addx -2

      addx 4

      addx -20

      noop

      addx -14

      addx -2

      addx 6

      addx 2

      addx 3

      noop

      addx 2

      addx -1

      addx 4

      noop

      addx 5

      noop

      addx 2

      addx 3

      addx -2

      addx 3

      noop

      addx 4

      noop

      addx 5

      noop

      addx 2

      addx -24

      addx -15

      addx 17

      addx -10

      addx 2

      addx -5

      addx 6

      noop

      addx 3

      addx 2

      addx 2

      noop

      addx 3

      addx 2

      addx 5

      addx -2

      addx 3

      addx 2

      addx 2

      addx 5

      addx 2

      addx -18

      addx -19

      noop

      addx 1

      addx 2

      addx 5

      addx 3

      noop

      noop

      noop

      noop

      addx 2

      addx 5

      addx 2

      addx 3

      noop

      addx -8

      addx 11

      noop

      noop

      addx 2

      addx 5

      addx 2

      addx 3

      noop

      addx -34

      noop'
    parts:
      part1: "--- Day 10: Cathode-Ray Tube ---\nYou avoid the ropes, plunge into the\
        \ river, and swim to shore.\n\n\nThe Elves yell something about meeting back\
        \ up with them upriver, but the river is too loud to tell exactly what they're\
        \ saying. They finish crossing the bridge and disappear from view.\n\n\nSituations\
        \ like this must be why the Elves prioritized getting the communication system\
        \ on your handheld device working. You pull it out of your pack, but the amount\
        \ of water slowly draining from a big crack in its screen tells you it probably\
        \ won't be of much immediate use.\n\n\nUnless\n, that is, you can design a\
        \ replacement for the device's video system! It seems to be some kind of \n\
        cathode-ray tube\n screen and simple CPU that are both driven by a precise\
        \ \nclock circuit\n. The clock circuit ticks at a constant rate; each tick\
        \ is called a \ncycle\n.\n\n\nStart by figuring out the signal being sent\
        \ by the CPU. The CPU has a single register, \nX\n, which starts with the\
        \ value \n1\n. It supports only two instructions:\n\n\n\n\naddx V\n takes\
        \ \ntwo cycles\n to complete. \nAfter\n two cycles, the \nX\n register is\
        \ increased by the value \nV\n. (\nV\n can be negative.)\n\n\nnoop\n takes\
        \ \none cycle\n to complete. It has no other effect.\n\n\n\n\nThe CPU uses\
        \ these instructions in a program (your puzzle input) to, somehow, tell the\
        \ screen what to draw.\n\n\nConsider the following small program:\n\n\nnoop\n\
        addx 3\naddx -5\n\n\n\nExecution of this program proceeds as follows:\n\n\n\
        \n\nAt the start of the first cycle, the \nnoop\n instruction begins execution.\
        \ During the first cycle, \nX\n is \n1\n. After the first cycle, the \nnoop\n\
        \ instruction finishes execution, doing nothing.\n\n\nAt the start of the\
        \ second cycle, the \naddx 3\n instruction begins execution. During the second\
        \ cycle, \nX\n is still \n1\n.\n\n\nDuring the third cycle, \nX\n is still\
        \ \n1\n. After the third cycle, the \naddx 3\n instruction finishes execution,\
        \ setting \nX\n to \n4\n.\n\n\nAt the start of the fourth cycle, the \naddx\
        \ -5\n instruction begins execution. During the fourth cycle, \nX\n is still\
        \ \n4\n.\n\n\nDuring the fifth cycle, \nX\n is still \n4\n. After the fifth\
        \ cycle, the \naddx -5\n instruction finishes execution, setting \nX\n to\
        \ \n-1\n.\n\n\n\n\nMaybe you can learn something by looking at the value of\
        \ the \nX\n register throughout execution. For now, consider the \nsignal\
        \ strength\n (the cycle number multiplied by the value of the \nX\n register)\
        \ \nduring\n the 20th cycle and every 40 cycles after that (that is, during\
        \ the 20th, 60th, 100th, 140th, 180th, and 220th cycles).\n\n\nFor example,\
        \ consider this larger program:\n\n\naddx 15\naddx -11\naddx 6\naddx -3\n\
        addx 5\naddx -1\naddx -8\naddx 13\naddx 4\nnoop\naddx -1\naddx 5\naddx -1\n\
        addx 5\naddx -1\naddx 5\naddx -1\naddx 5\naddx -1\naddx -35\naddx 1\naddx\
        \ 24\naddx -19\naddx 1\naddx 16\naddx -11\nnoop\nnoop\naddx 21\naddx -15\n\
        noop\nnoop\naddx -3\naddx 9\naddx 1\naddx -3\naddx 8\naddx 1\naddx 5\nnoop\n\
        noop\nnoop\nnoop\nnoop\naddx -36\nnoop\naddx 1\naddx 7\nnoop\nnoop\nnoop\n\
        addx 2\naddx 6\nnoop\nnoop\nnoop\nnoop\nnoop\naddx 1\nnoop\nnoop\naddx 7\n\
        addx 1\nnoop\naddx -13\naddx 13\naddx 7\nnoop\naddx 1\naddx -33\nnoop\nnoop\n\
        noop\naddx 2\nnoop\nnoop\nnoop\naddx 8\nnoop\naddx -1\naddx 2\naddx 1\nnoop\n\
        addx 17\naddx -9\naddx 1\naddx 1\naddx -3\naddx 11\nnoop\nnoop\naddx 1\nnoop\n\
        addx 1\nnoop\nnoop\naddx -13\naddx -19\naddx 1\naddx 3\naddx 26\naddx -30\n\
        addx 12\naddx -1\naddx 3\naddx 1\nnoop\nnoop\nnoop\naddx -9\naddx 18\naddx\
        \ 1\naddx 2\nnoop\nnoop\naddx 9\nnoop\nnoop\nnoop\naddx -1\naddx 2\naddx -37\n\
        addx 1\naddx 3\nnoop\naddx 15\naddx -21\naddx 22\naddx -6\naddx 1\nnoop\n\
        addx 2\naddx 1\nnoop\naddx -10\nnoop\nnoop\naddx 20\naddx 1\naddx 2\naddx\
        \ 2\naddx -6\naddx -11\nnoop\nnoop\nnoop\n\n\n\nThe interesting signal strengths\
        \ can be determined as follows:\n\n\n\n\nDuring the 20th cycle, register \n\
        X\n has the value \n21\n, so the signal strength is 20 * 21 = \n420\n. (The\
        \ 20th cycle occurs in the middle of the second \naddx -1\n, so the value\
        \ of register \nX\n is the starting value, \n1\n, plus all of the other \n\
        addx\n values up to that point: 1 + 15 - 11 + 6 - 3 + 5 - 1 - 8 + 13 + 4 =\
        \ 21.)\n\n\nDuring the 60th cycle, register \nX\n has the value \n19\n, so\
        \ the signal strength is 60 * 19 = \n1140\n.\n\n\nDuring the 100th cycle,\
        \ register \nX\n has the value \n18\n, so the signal strength is 100 * 18\
        \ = \n1800\n.\n\n\nDuring the 140th cycle, register \nX\n has the value \n\
        21\n, so the signal strength is 140 * 21 = \n2940\n.\n\n\nDuring the 180th\
        \ cycle, register \nX\n has the value \n16\n, so the signal strength is 180\
        \ * 16 = \n2880\n.\n\n\nDuring the 220th cycle, register \nX\n has the value\
        \ \n18\n, so the signal strength is 220 * 18 = \n3960\n.\n\n\n\n\nThe sum\
        \ of these signal strengths is \n13140\n.\n\n\nFind the signal strength during\
        \ the 20th, 60th, 100th, 140th, 180th, and 220th cycles. \nWhat is the sum\
        \ of these six signal strengths?"
      part2: "--- Day 10: Cathode-Ray Tube ---\nYou avoid the ropes, plunge into the\
        \ river, and swim to shore.\n\n\nThe Elves yell something about meeting back\
        \ up with them upriver, but the river is too loud to tell exactly what they're\
        \ saying. They finish crossing the bridge and disappear from view.\n\n\nSituations\
        \ like this must be why the Elves prioritized getting the communication system\
        \ on your handheld device working. You pull it out of your pack, but the amount\
        \ of water slowly draining from a big crack in its screen tells you it probably\
        \ won't be of much immediate use.\n\n\nUnless\n, that is, you can design a\
        \ replacement for the device's video system! It seems to be some kind of \n\
        cathode-ray tube\n screen and simple CPU that are both driven by a precise\
        \ \nclock circuit\n. The clock circuit ticks at a constant rate; each tick\
        \ is called a \ncycle\n.\n\n\nStart by figuring out the signal being sent\
        \ by the CPU. The CPU has a single register, \nX\n, which starts with the\
        \ value \n1\n. It supports only two instructions:\n\n\n\n\naddx V\n takes\
        \ \ntwo cycles\n to complete. \nAfter\n two cycles, the \nX\n register is\
        \ increased by the value \nV\n. (\nV\n can be negative.)\n\n\nnoop\n takes\
        \ \none cycle\n to complete. It has no other effect.\n\n\n\n\nThe CPU uses\
        \ these instructions in a program (your puzzle input) to, somehow, tell the\
        \ screen what to draw.\n\n\nConsider the following small program:\n\n\nnoop\n\
        addx 3\naddx -5\n\n\n\nExecution of this program proceeds as follows:\n\n\n\
        \n\nAt the start of the first cycle, the \nnoop\n instruction begins execution.\
        \ During the first cycle, \nX\n is \n1\n. After the first cycle, the \nnoop\n\
        \ instruction finishes execution, doing nothing.\n\n\nAt the start of the\
        \ second cycle, the \naddx 3\n instruction begins execution. During the second\
        \ cycle, \nX\n is still \n1\n.\n\n\nDuring the third cycle, \nX\n is still\
        \ \n1\n. After the third cycle, the \naddx 3\n instruction finishes execution,\
        \ setting \nX\n to \n4\n.\n\n\nAt the start of the fourth cycle, the \naddx\
        \ -5\n instruction begins execution. During the fourth cycle, \nX\n is still\
        \ \n4\n.\n\n\nDuring the fifth cycle, \nX\n is still \n4\n. After the fifth\
        \ cycle, the \naddx -5\n instruction finishes execution, setting \nX\n to\
        \ \n-1\n.\n\n\n\n\nMaybe you can learn something by looking at the value of\
        \ the \nX\n register throughout execution. For now, consider the \nsignal\
        \ strength\n (the cycle number multiplied by the value of the \nX\n register)\
        \ \nduring\n the 20th cycle and every 40 cycles after that (that is, during\
        \ the 20th, 60th, 100th, 140th, 180th, and 220th cycles).\n\n\nFor example,\
        \ consider this larger program:\n\n\naddx 15\naddx -11\naddx 6\naddx -3\n\
        addx 5\naddx -1\naddx -8\naddx 13\naddx 4\nnoop\naddx -1\naddx 5\naddx -1\n\
        addx 5\naddx -1\naddx 5\naddx -1\naddx 5\naddx -1\naddx -35\naddx 1\naddx\
        \ 24\naddx -19\naddx 1\naddx 16\naddx -11\nnoop\nnoop\naddx 21\naddx -15\n\
        noop\nnoop\naddx -3\naddx 9\naddx 1\naddx -3\naddx 8\naddx 1\naddx 5\nnoop\n\
        noop\nnoop\nnoop\nnoop\naddx -36\nnoop\naddx 1\naddx 7\nnoop\nnoop\nnoop\n\
        addx 2\naddx 6\nnoop\nnoop\nnoop\nnoop\nnoop\naddx 1\nnoop\nnoop\naddx 7\n\
        addx 1\nnoop\naddx -13\naddx 13\naddx 7\nnoop\naddx 1\naddx -33\nnoop\nnoop\n\
        noop\naddx 2\nnoop\nnoop\nnoop\naddx 8\nnoop\naddx -1\naddx 2\naddx 1\nnoop\n\
        addx 17\naddx -9\naddx 1\naddx 1\naddx -3\naddx 11\nnoop\nnoop\naddx 1\nnoop\n\
        addx 1\nnoop\nnoop\naddx -13\naddx -19\naddx 1\naddx 3\naddx 26\naddx -30\n\
        addx 12\naddx -1\naddx 3\naddx 1\nnoop\nnoop\nnoop\naddx -9\naddx 18\naddx\
        \ 1\naddx 2\nnoop\nnoop\naddx 9\nnoop\nnoop\nnoop\naddx -1\naddx 2\naddx -37\n\
        addx 1\naddx 3\nnoop\naddx 15\naddx -21\naddx 22\naddx -6\naddx 1\nnoop\n\
        addx 2\naddx 1\nnoop\naddx -10\nnoop\nnoop\naddx 20\naddx 1\naddx 2\naddx\
        \ 2\naddx -6\naddx -11\nnoop\nnoop\nnoop\n\n\n\nThe interesting signal strengths\
        \ can be determined as follows:\n\n\n\n\nDuring the 20th cycle, register \n\
        X\n has the value \n21\n, so the signal strength is 20 * 21 = \n420\n. (The\
        \ 20th cycle occurs in the middle of the second \naddx -1\n, so the value\
        \ of register \nX\n is the starting value, \n1\n, plus all of the other \n\
        addx\n values up to that point: 1 + 15 - 11 + 6 - 3 + 5 - 1 - 8 + 13 + 4 =\
        \ 21.)\n\n\nDuring the 60th cycle, register \nX\n has the value \n19\n, so\
        \ the signal strength is 60 * 19 = \n1140\n.\n\n\nDuring the 100th cycle,\
        \ register \nX\n has the value \n18\n, so the signal strength is 100 * 18\
        \ = \n1800\n.\n\n\nDuring the 140th cycle, register \nX\n has the value \n\
        21\n, so the signal strength is 140 * 21 = \n2940\n.\n\n\nDuring the 180th\
        \ cycle, register \nX\n has the value \n16\n, so the signal strength is 180\
        \ * 16 = \n2880\n.\n\n\nDuring the 220th cycle, register \nX\n has the value\
        \ \n18\n, so the signal strength is 220 * 18 = \n3960\n.\n\n\n\n\nThe sum\
        \ of these signal strengths is \n13140\n.\n\n\nFind the signal strength during\
        \ the 20th, 60th, 100th, 140th, 180th, and 220th cycles. \nWhat is the sum\
        \ of these six signal strengths?\n\n--- Part Two ---\nIt seems like the \n\
        X\n register controls the horizontal position of a \nsprite\n. Specifically,\
        \ the sprite is 3 pixels wide, and the \nX\n register sets the horizontal\
        \ position of the \nmiddle\n of that sprite. (In this system, there is no\
        \ such thing as \"vertical position\": if the sprite's horizontal position\
        \ puts its pixels where the CRT is currently drawing, then those pixels will\
        \ be drawn.)\n\n\nYou count the pixels on the CRT: 40 wide and 6 high. This\
        \ CRT screen draws the top row of pixels left-to-right, then the row below\
        \ that, and so on. The left-most pixel in each row is in position \n0\n, and\
        \ the right-most pixel in each row is in position \n39\n.\n\n\nLike the CPU,\
        \ the CRT is tied closely to the clock circuit: the CRT draws \na single pixel\
        \ during each cycle\n. Representing each pixel of the screen as a \n#\n, here\
        \ are the cycles during which the first and last pixel in each row are drawn:\n\
        \n\nCycle   1 -> \n#\n######################################\n#\n <- Cycle\
        \  40\nCycle  41 -> \n#\n######################################\n#\n <- Cycle\
        \  80\nCycle  81 -> \n#\n######################################\n#\n <- Cycle\
        \ 120\nCycle 121 -> \n#\n######################################\n#\n <- Cycle\
        \ 160\nCycle 161 -> \n#\n######################################\n#\n <- Cycle\
        \ 200\nCycle 201 -> \n#\n######################################\n#\n <- Cycle\
        \ 240\n\n\n\nSo, by \ncarefully\n \ntiming\n the CPU instructions and the\
        \ CRT drawing operations, you should be able to determine whether the sprite\
        \ is visible the instant each pixel is drawn. If the sprite is positioned\
        \ such that one of its three pixels is the pixel currently being drawn, the\
        \ screen produces a \nlit\n pixel (\n#\n); otherwise, the screen leaves the\
        \ pixel \ndark\n (\n.\n).\n\nThe first few pixels from the larger example\
        \ above are drawn as follows:\n\n\nSprite position: ###.....................................\n\
        \nStart cycle   1: begin executing addx 15\nDuring cycle  1: CRT draws pixel\
        \ in position 0\nCurrent CRT row: #\n\nDuring cycle  2: CRT draws pixel in\
        \ position 1\nCurrent CRT row: ##\nEnd of cycle  2: finish executing addx\
        \ 15 (Register X is now 16)\nSprite position: ...............###......................\n\
        \nStart cycle   3: begin executing addx -11\nDuring cycle  3: CRT draws pixel\
        \ in position 2\nCurrent CRT row: ##.\n\nDuring cycle  4: CRT draws pixel\
        \ in position 3\nCurrent CRT row: ##..\nEnd of cycle  4: finish executing\
        \ addx -11 (Register X is now 5)\nSprite position: ....###.................................\n\
        \nStart cycle   5: begin executing addx 6\nDuring cycle  5: CRT draws pixel\
        \ in position 4\nCurrent CRT row: ##..#\n\nDuring cycle  6: CRT draws pixel\
        \ in position 5\nCurrent CRT row: ##..##\nEnd of cycle  6: finish executing\
        \ addx 6 (Register X is now 11)\nSprite position: ..........###...........................\n\
        \nStart cycle   7: begin executing addx -3\nDuring cycle  7: CRT draws pixel\
        \ in position 6\nCurrent CRT row: ##..##.\n\nDuring cycle  8: CRT draws pixel\
        \ in position 7\nCurrent CRT row: ##..##..\nEnd of cycle  8: finish executing\
        \ addx -3 (Register X is now 8)\nSprite position: .......###..............................\n\
        \nStart cycle   9: begin executing addx 5\nDuring cycle  9: CRT draws pixel\
        \ in position 8\nCurrent CRT row: ##..##..#\n\nDuring cycle 10: CRT draws\
        \ pixel in position 9\nCurrent CRT row: ##..##..##\nEnd of cycle 10: finish\
        \ executing addx 5 (Register X is now 13)\nSprite position: ............###.........................\n\
        \nStart cycle  11: begin executing addx -1\nDuring cycle 11: CRT draws pixel\
        \ in position 10\nCurrent CRT row: ##..##..##.\n\nDuring cycle 12: CRT draws\
        \ pixel in position 11\nCurrent CRT row: ##..##..##..\nEnd of cycle 12: finish\
        \ executing addx -1 (Register X is now 12)\nSprite position: ...........###..........................\n\
        \nStart cycle  13: begin executing addx -8\nDuring cycle 13: CRT draws pixel\
        \ in position 12\nCurrent CRT row: ##..##..##..#\n\nDuring cycle 14: CRT draws\
        \ pixel in position 13\nCurrent CRT row: ##..##..##..##\nEnd of cycle 14:\
        \ finish executing addx -8 (Register X is now 4)\nSprite position: ...###..................................\n\
        \nStart cycle  15: begin executing addx 13\nDuring cycle 15: CRT draws pixel\
        \ in position 14\nCurrent CRT row: ##..##..##..##.\n\nDuring cycle 16: CRT\
        \ draws pixel in position 15\nCurrent CRT row: ##..##..##..##..\nEnd of cycle\
        \ 16: finish executing addx 13 (Register X is now 17)\nSprite position: ................###.....................\n\
        \nStart cycle  17: begin executing addx 4\nDuring cycle 17: CRT draws pixel\
        \ in position 16\nCurrent CRT row: ##..##..##..##..#\n\nDuring cycle 18: CRT\
        \ draws pixel in position 17\nCurrent CRT row: ##..##..##..##..##\nEnd of\
        \ cycle 18: finish executing addx 4 (Register X is now 21)\nSprite position:\
        \ ....................###.................\n\nStart cycle  19: begin executing\
        \ noop\nDuring cycle 19: CRT draws pixel in position 18\nCurrent CRT row:\
        \ ##..##..##..##..##.\nEnd of cycle 19: finish executing noop\n\nStart cycle\
        \  20: begin executing addx -1\nDuring cycle 20: CRT draws pixel in position\
        \ 19\nCurrent CRT row: ##..##..##..##..##..\n\nDuring cycle 21: CRT draws\
        \ pixel in position 20\nCurrent CRT row: ##..##..##..##..##..#\nEnd of cycle\
        \ 21: finish executing addx -1 (Register X is now 20)\nSprite position: ...................###..................\n\
        \n\n\nAllowing the program to run to completion causes the CRT to produce\
        \ the following image:\n\n\n##..##..##..##..##..##..##..##..##..##..\n###...###...###...###...###...###...###.\n\
        ####....####....####....####....####....\n#####.....#####.....#####.....#####.....\n\
        ######......######......######......####\n#######.......#######.......#######.....\n\
        \n\n\nRender the image given by your program. \nWhat eight capital letters\
        \ appear on your CRT?"
    title: '--- Day 10: Cathode-Ray Tube ---'
  11:
    answers:
      part1:
        correct: '57348'
        wrong: []
      part2:
        correct: '14106266886'
        wrong: []
    input: "Monkey 0:\n  Starting items: 91, 58, 52, 69, 95, 54\n  Operation: new\
      \ = old * 13\n  Test: divisible by 7\n    If true: throw to monkey 1\n    If\
      \ false: throw to monkey 5\n\nMonkey 1:\n  Starting items: 80, 80, 97, 84\n\
      \  Operation: new = old * old\n  Test: divisible by 3\n    If true: throw to\
      \ monkey 3\n    If false: throw to monkey 5\n\nMonkey 2:\n  Starting items:\
      \ 86, 92, 71\n  Operation: new = old + 7\n  Test: divisible by 2\n    If true:\
      \ throw to monkey 0\n    If false: throw to monkey 4\n\nMonkey 3:\n  Starting\
      \ items: 96, 90, 99, 76, 79, 85, 98, 61\n  Operation: new = old + 4\n  Test:\
      \ divisible by 11\n    If true: throw to monkey 7\n    If false: throw to monkey\
      \ 6\n\nMonkey 4:\n  Starting items: 60, 83, 68, 64, 73\n  Operation: new = old\
      \ * 19\n  Test: divisible by 17\n    If true: throw to monkey 1\n    If false:\
      \ throw to monkey 0\n\nMonkey 5:\n  Starting items: 96, 52, 52, 94, 76, 51,\
      \ 57\n  Operation: new = old + 3\n  Test: divisible by 5\n    If true: throw\
      \ to monkey 7\n    If false: throw to monkey 3\n\nMonkey 6:\n  Starting items:\
      \ 75\n  Operation: new = old + 5\n  Test: divisible by 13\n    If true: throw\
      \ to monkey 4\n    If false: throw to monkey 2\n\nMonkey 7:\n  Starting items:\
      \ 83, 75\n  Operation: new = old + 1\n  Test: divisible by 19\n    If true:\
      \ throw to monkey 2\n    If false: throw to monkey 6"
    parts:
      part1: "--- Day 11: Monkey in the Middle ---\nAs you finally start making your\
        \ way upriver, you realize your pack is much lighter than you remember. Just\
        \ then, one of the items from your pack goes flying overhead. Monkeys are\
        \ playing \nKeep Away\n with your missing things!\n\n\nTo get your stuff back,\
        \ you need to be able to predict where the monkeys will throw your items.\
        \ After some careful observation, you realize the monkeys operate based on\
        \ \nhow worried you are about each item\n.\n\n\nYou take some notes (your\
        \ puzzle input) on the items each monkey currently has, how worried you are\
        \ about those items, and how the monkey makes decisions based on your worry\
        \ level. For example:\n\n\nMonkey 0:\n  Starting items: 79, 98\n  Operation:\
        \ new = old * 19\n  Test: divisible by 23\n    If true: throw to monkey 2\n\
        \    If false: throw to monkey 3\n\nMonkey 1:\n  Starting items: 54, 65, 75,\
        \ 74\n  Operation: new = old + 6\n  Test: divisible by 19\n    If true: throw\
        \ to monkey 2\n    If false: throw to monkey 0\n\nMonkey 2:\n  Starting items:\
        \ 79, 60, 97\n  Operation: new = old * old\n  Test: divisible by 13\n    If\
        \ true: throw to monkey 1\n    If false: throw to monkey 3\n\nMonkey 3:\n\
        \  Starting items: 74\n  Operation: new = old + 3\n  Test: divisible by 17\n\
        \    If true: throw to monkey 0\n    If false: throw to monkey 1\n\n\n\nEach\
        \ monkey has several attributes:\n\n\n\n\nStarting items\n lists your \nworry\
        \ level\n for each item the monkey is currently holding in the order they\
        \ will be inspected.\n\n\nOperation\n shows how your worry level changes as\
        \ that monkey inspects an item. (An operation like \nnew = old * 5\n means\
        \ that your worry level after the monkey inspected the item is five times\
        \ whatever your worry level was before inspection.)\n\n\nTest\n shows how\
        \ the monkey uses your worry level to decide where to throw an item next.\n\
        \  \n\n\nIf true\n shows what happens with an item if the \nTest\n was true.\n\
        \n\nIf false\n shows what happens with an item if the \nTest\n was false.\n\
        \n\n\n\n\n\n\n\nAfter each monkey inspects an item but before it tests your\
        \ worry level, your relief that the monkey's inspection didn't damage the\
        \ item causes your worry level to be \ndivided by three\n and rounded down\
        \ to the nearest integer.\n\n\nThe monkeys take turns inspecting and throwing\
        \ items. On a single monkey's \nturn\n, it inspects and throws all of the\
        \ items it is holding one at a time and in the order listed. Monkey \n0\n\
        \ goes first, then monkey \n1\n, and so on until each monkey has had one turn.\
        \ The process of each monkey taking a single turn is called a \nround\n.\n\
        \n\nWhen a monkey throws an item to another monkey, the item goes on the \n\
        end\n of the recipient monkey's list. A monkey that starts a round with no\
        \ items could end up inspecting and throwing many items by the time its turn\
        \ comes around. If a monkey is holding no items at the start of its turn,\
        \ its turn ends.\n\n\nIn the above example, the first round proceeds as follows:\n\
        \n\nMonkey 0:\n  Monkey inspects an item with a worry level of 79.\n    Worry\
        \ level is multiplied by 19 to 1501.\n    Monkey gets bored with item. Worry\
        \ level is divided by 3 to 500.\n    Current worry level is not divisible\
        \ by 23.\n    Item with worry level 500 is thrown to monkey 3.\n  Monkey inspects\
        \ an item with a worry level of 98.\n    Worry level is multiplied by 19 to\
        \ 1862.\n    Monkey gets bored with item. Worry level is divided by 3 to 620.\n\
        \    Current worry level is not divisible by 23.\n    Item with worry level\
        \ 620 is thrown to monkey 3.\nMonkey 1:\n  Monkey inspects an item with a\
        \ worry level of 54.\n    Worry level increases by 6 to 60.\n    Monkey gets\
        \ bored with item. Worry level is divided by 3 to 20.\n    Current worry level\
        \ is not divisible by 19.\n    Item with worry level 20 is thrown to monkey\
        \ 0.\n  Monkey inspects an item with a worry level of 65.\n    Worry level\
        \ increases by 6 to 71.\n    Monkey gets bored with item. Worry level is divided\
        \ by 3 to 23.\n    Current worry level is not divisible by 19.\n    Item with\
        \ worry level 23 is thrown to monkey 0.\n  Monkey inspects an item with a\
        \ worry level of 75.\n    Worry level increases by 6 to 81.\n    Monkey gets\
        \ bored with item. Worry level is divided by 3 to 27.\n    Current worry level\
        \ is not divisible by 19.\n    Item with worry level 27 is thrown to monkey\
        \ 0.\n  Monkey inspects an item with a worry level of 74.\n    Worry level\
        \ increases by 6 to 80.\n    Monkey gets bored with item. Worry level is divided\
        \ by 3 to 26.\n    Current worry level is not divisible by 19.\n    Item with\
        \ worry level 26 is thrown to monkey 0.\nMonkey 2:\n  Monkey inspects an item\
        \ with a worry level of 79.\n    Worry level is multiplied by itself to 6241.\n\
        \    Monkey gets bored with item. Worry level is divided by 3 to 2080.\n \
        \   Current worry level is divisible by 13.\n    Item with worry level 2080\
        \ is thrown to monkey 1.\n  Monkey inspects an item with a worry level of\
        \ 60.\n    Worry level is multiplied by itself to 3600.\n    Monkey gets bored\
        \ with item. Worry level is divided by 3 to 1200.\n    Current worry level\
        \ is not divisible by 13.\n    Item with worry level 1200 is thrown to monkey\
        \ 3.\n  Monkey inspects an item with a worry level of 97.\n    Worry level\
        \ is multiplied by itself to 9409.\n    Monkey gets bored with item. Worry\
        \ level is divided by 3 to 3136.\n    Current worry level is not divisible\
        \ by 13.\n    Item with worry level 3136 is thrown to monkey 3.\nMonkey 3:\n\
        \  Monkey inspects an item with a worry level of 74.\n    Worry level increases\
        \ by 3 to 77.\n    Monkey gets bored with item. Worry level is divided by\
        \ 3 to 25.\n    Current worry level is not divisible by 17.\n    Item with\
        \ worry level 25 is thrown to monkey 1.\n  Monkey inspects an item with a\
        \ worry level of 500.\n    Worry level increases by 3 to 503.\n    Monkey\
        \ gets bored with item. Worry level is divided by 3 to 167.\n    Current worry\
        \ level is not divisible by 17.\n    Item with worry level 167 is thrown to\
        \ monkey 1.\n  Monkey inspects an item with a worry level of 620.\n    Worry\
        \ level increases by 3 to 623.\n    Monkey gets bored with item. Worry level\
        \ is divided by 3 to 207.\n    Current worry level is not divisible by 17.\n\
        \    Item with worry level 207 is thrown to monkey 1.\n  Monkey inspects an\
        \ item with a worry level of 1200.\n    Worry level increases by 3 to 1203.\n\
        \    Monkey gets bored with item. Worry level is divided by 3 to 401.\n  \
        \  Current worry level is not divisible by 17.\n    Item with worry level\
        \ 401 is thrown to monkey 1.\n  Monkey inspects an item with a worry level\
        \ of 3136.\n    Worry level increases by 3 to 3139.\n    Monkey gets bored\
        \ with item. Worry level is divided by 3 to 1046.\n    Current worry level\
        \ is not divisible by 17.\n    Item with worry level 1046 is thrown to monkey\
        \ 1.\n\n\n\nAfter round 1, the monkeys are holding items with these worry\
        \ levels:\n\n\nMonkey 0: 20, 23, 27, 26\nMonkey 1: 2080, 25, 167, 207, 401,\
        \ 1046\nMonkey 2: \nMonkey 3: \n\n\n\nMonkeys 2 and 3 aren't holding any items\
        \ at the end of the round; they both inspected items during the round and\
        \ threw them all before the round ended.\n\n\nThis process continues for a\
        \ few more rounds:\n\n\nAfter round 2, the monkeys are holding items with\
        \ these worry levels:\nMonkey 0: 695, 10, 71, 135, 350\nMonkey 1: 43, 49,\
        \ 58, 55, 362\nMonkey 2: \nMonkey 3: \n\nAfter round 3, the monkeys are holding\
        \ items with these worry levels:\nMonkey 0: 16, 18, 21, 20, 122\nMonkey 1:\
        \ 1468, 22, 150, 286, 739\nMonkey 2: \nMonkey 3: \n\nAfter round 4, the monkeys\
        \ are holding items with these worry levels:\nMonkey 0: 491, 9, 52, 97, 248,\
        \ 34\nMonkey 1: 39, 45, 43, 258\nMonkey 2: \nMonkey 3: \n\nAfter round 5,\
        \ the monkeys are holding items with these worry levels:\nMonkey 0: 15, 17,\
        \ 16, 88, 1037\nMonkey 1: 20, 110, 205, 524, 72\nMonkey 2: \nMonkey 3: \n\n\
        After round 6, the monkeys are holding items with these worry levels:\nMonkey\
        \ 0: 8, 70, 176, 26, 34\nMonkey 1: 481, 32, 36, 186, 2190\nMonkey 2: \nMonkey\
        \ 3: \n\nAfter round 7, the monkeys are holding items with these worry levels:\n\
        Monkey 0: 162, 12, 14, 64, 732, 17\nMonkey 1: 148, 372, 55, 72\nMonkey 2:\
        \ \nMonkey 3: \n\nAfter round 8, the monkeys are holding items with these\
        \ worry levels:\nMonkey 0: 51, 126, 20, 26, 136\nMonkey 1: 343, 26, 30, 1546,\
        \ 36\nMonkey 2: \nMonkey 3: \n\nAfter round 9, the monkeys are holding items\
        \ with these worry levels:\nMonkey 0: 116, 10, 12, 517, 14\nMonkey 1: 108,\
        \ 267, 43, 55, 288\nMonkey 2: \nMonkey 3: \n\nAfter round 10, the monkeys\
        \ are holding items with these worry levels:\nMonkey 0: 91, 16, 20, 98\nMonkey\
        \ 1: 481, 245, 22, 26, 1092, 30\nMonkey 2: \nMonkey 3: \n\n...\n\nAfter round\
        \ 15, the monkeys are holding items with these worry levels:\nMonkey 0: 83,\
        \ 44, 8, 184, 9, 20, 26, 102\nMonkey 1: 110, 36\nMonkey 2: \nMonkey 3: \n\n\
        ...\n\nAfter round 20, the monkeys are holding items with these worry levels:\n\
        Monkey 0: 10, 12, 14, 26, 34\nMonkey 1: 245, 93, 53, 199, 115\nMonkey 2: \n\
        Monkey 3: \n\n\n\nChasing all of the monkeys at once is impossible; you're\
        \ going to have to focus on the \ntwo most active\n monkeys if you want any\
        \ hope of getting your stuff back. Count the \ntotal number of times each\
        \ monkey inspects items\n over 20 rounds:\n\n\nMonkey 0 inspected items 101\
        \ times.\n\nMonkey 1 inspected items 95 times.\nMonkey 2 inspected items 7\
        \ times.\n\nMonkey 3 inspected items 105 times.\n\n\n\n\nIn this example,\
        \ the two most active monkeys inspected items 101 and 105 times. The level\
        \ of \nmonkey business\n in this situation can be found by multiplying these\
        \ together: \n10605\n.\n\n\nFigure out which monkeys to chase by counting\
        \ how many items they inspect over 20 rounds. \nWhat is the level of monkey\
        \ business after 20 rounds of stuff-slinging simian shenanigans?"
      part2: "--- Day 11: Monkey in the Middle ---\nAs you finally start making your\
        \ way upriver, you realize your pack is much lighter than you remember. Just\
        \ then, one of the items from your pack goes flying overhead. Monkeys are\
        \ playing \nKeep Away\n with your missing things!\n\n\nTo get your stuff back,\
        \ you need to be able to predict where the monkeys will throw your items.\
        \ After some careful observation, you realize the monkeys operate based on\
        \ \nhow worried you are about each item\n.\n\n\nYou take some notes (your\
        \ puzzle input) on the items each monkey currently has, how worried you are\
        \ about those items, and how the monkey makes decisions based on your worry\
        \ level. For example:\n\n\nMonkey 0:\n  Starting items: 79, 98\n  Operation:\
        \ new = old * 19\n  Test: divisible by 23\n    If true: throw to monkey 2\n\
        \    If false: throw to monkey 3\n\nMonkey 1:\n  Starting items: 54, 65, 75,\
        \ 74\n  Operation: new = old + 6\n  Test: divisible by 19\n    If true: throw\
        \ to monkey 2\n    If false: throw to monkey 0\n\nMonkey 2:\n  Starting items:\
        \ 79, 60, 97\n  Operation: new = old * old\n  Test: divisible by 13\n    If\
        \ true: throw to monkey 1\n    If false: throw to monkey 3\n\nMonkey 3:\n\
        \  Starting items: 74\n  Operation: new = old + 3\n  Test: divisible by 17\n\
        \    If true: throw to monkey 0\n    If false: throw to monkey 1\n\n\n\nEach\
        \ monkey has several attributes:\n\n\n\n\nStarting items\n lists your \nworry\
        \ level\n for each item the monkey is currently holding in the order they\
        \ will be inspected.\n\n\nOperation\n shows how your worry level changes as\
        \ that monkey inspects an item. (An operation like \nnew = old * 5\n means\
        \ that your worry level after the monkey inspected the item is five times\
        \ whatever your worry level was before inspection.)\n\n\nTest\n shows how\
        \ the monkey uses your worry level to decide where to throw an item next.\n\
        \  \n\n\nIf true\n shows what happens with an item if the \nTest\n was true.\n\
        \n\nIf false\n shows what happens with an item if the \nTest\n was false.\n\
        \n\n\n\n\n\n\n\nAfter each monkey inspects an item but before it tests your\
        \ worry level, your relief that the monkey's inspection didn't damage the\
        \ item causes your worry level to be \ndivided by three\n and rounded down\
        \ to the nearest integer.\n\n\nThe monkeys take turns inspecting and throwing\
        \ items. On a single monkey's \nturn\n, it inspects and throws all of the\
        \ items it is holding one at a time and in the order listed. Monkey \n0\n\
        \ goes first, then monkey \n1\n, and so on until each monkey has had one turn.\
        \ The process of each monkey taking a single turn is called a \nround\n.\n\
        \n\nWhen a monkey throws an item to another monkey, the item goes on the \n\
        end\n of the recipient monkey's list. A monkey that starts a round with no\
        \ items could end up inspecting and throwing many items by the time its turn\
        \ comes around. If a monkey is holding no items at the start of its turn,\
        \ its turn ends.\n\n\nIn the above example, the first round proceeds as follows:\n\
        \n\nMonkey 0:\n  Monkey inspects an item with a worry level of 79.\n    Worry\
        \ level is multiplied by 19 to 1501.\n    Monkey gets bored with item. Worry\
        \ level is divided by 3 to 500.\n    Current worry level is not divisible\
        \ by 23.\n    Item with worry level 500 is thrown to monkey 3.\n  Monkey inspects\
        \ an item with a worry level of 98.\n    Worry level is multiplied by 19 to\
        \ 1862.\n    Monkey gets bored with item. Worry level is divided by 3 to 620.\n\
        \    Current worry level is not divisible by 23.\n    Item with worry level\
        \ 620 is thrown to monkey 3.\nMonkey 1:\n  Monkey inspects an item with a\
        \ worry level of 54.\n    Worry level increases by 6 to 60.\n    Monkey gets\
        \ bored with item. Worry level is divided by 3 to 20.\n    Current worry level\
        \ is not divisible by 19.\n    Item with worry level 20 is thrown to monkey\
        \ 0.\n  Monkey inspects an item with a worry level of 65.\n    Worry level\
        \ increases by 6 to 71.\n    Monkey gets bored with item. Worry level is divided\
        \ by 3 to 23.\n    Current worry level is not divisible by 19.\n    Item with\
        \ worry level 23 is thrown to monkey 0.\n  Monkey inspects an item with a\
        \ worry level of 75.\n    Worry level increases by 6 to 81.\n    Monkey gets\
        \ bored with item. Worry level is divided by 3 to 27.\n    Current worry level\
        \ is not divisible by 19.\n    Item with worry level 27 is thrown to monkey\
        \ 0.\n  Monkey inspects an item with a worry level of 74.\n    Worry level\
        \ increases by 6 to 80.\n    Monkey gets bored with item. Worry level is divided\
        \ by 3 to 26.\n    Current worry level is not divisible by 19.\n    Item with\
        \ worry level 26 is thrown to monkey 0.\nMonkey 2:\n  Monkey inspects an item\
        \ with a worry level of 79.\n    Worry level is multiplied by itself to 6241.\n\
        \    Monkey gets bored with item. Worry level is divided by 3 to 2080.\n \
        \   Current worry level is divisible by 13.\n    Item with worry level 2080\
        \ is thrown to monkey 1.\n  Monkey inspects an item with a worry level of\
        \ 60.\n    Worry level is multiplied by itself to 3600.\n    Monkey gets bored\
        \ with item. Worry level is divided by 3 to 1200.\n    Current worry level\
        \ is not divisible by 13.\n    Item with worry level 1200 is thrown to monkey\
        \ 3.\n  Monkey inspects an item with a worry level of 97.\n    Worry level\
        \ is multiplied by itself to 9409.\n    Monkey gets bored with item. Worry\
        \ level is divided by 3 to 3136.\n    Current worry level is not divisible\
        \ by 13.\n    Item with worry level 3136 is thrown to monkey 3.\nMonkey 3:\n\
        \  Monkey inspects an item with a worry level of 74.\n    Worry level increases\
        \ by 3 to 77.\n    Monkey gets bored with item. Worry level is divided by\
        \ 3 to 25.\n    Current worry level is not divisible by 17.\n    Item with\
        \ worry level 25 is thrown to monkey 1.\n  Monkey inspects an item with a\
        \ worry level of 500.\n    Worry level increases by 3 to 503.\n    Monkey\
        \ gets bored with item. Worry level is divided by 3 to 167.\n    Current worry\
        \ level is not divisible by 17.\n    Item with worry level 167 is thrown to\
        \ monkey 1.\n  Monkey inspects an item with a worry level of 620.\n    Worry\
        \ level increases by 3 to 623.\n    Monkey gets bored with item. Worry level\
        \ is divided by 3 to 207.\n    Current worry level is not divisible by 17.\n\
        \    Item with worry level 207 is thrown to monkey 1.\n  Monkey inspects an\
        \ item with a worry level of 1200.\n    Worry level increases by 3 to 1203.\n\
        \    Monkey gets bored with item. Worry level is divided by 3 to 401.\n  \
        \  Current worry level is not divisible by 17.\n    Item with worry level\
        \ 401 is thrown to monkey 1.\n  Monkey inspects an item with a worry level\
        \ of 3136.\n    Worry level increases by 3 to 3139.\n    Monkey gets bored\
        \ with item. Worry level is divided by 3 to 1046.\n    Current worry level\
        \ is not divisible by 17.\n    Item with worry level 1046 is thrown to monkey\
        \ 1.\n\n\n\nAfter round 1, the monkeys are holding items with these worry\
        \ levels:\n\n\nMonkey 0: 20, 23, 27, 26\nMonkey 1: 2080, 25, 167, 207, 401,\
        \ 1046\nMonkey 2: \nMonkey 3: \n\n\n\nMonkeys 2 and 3 aren't holding any items\
        \ at the end of the round; they both inspected items during the round and\
        \ threw them all before the round ended.\n\n\nThis process continues for a\
        \ few more rounds:\n\n\nAfter round 2, the monkeys are holding items with\
        \ these worry levels:\nMonkey 0: 695, 10, 71, 135, 350\nMonkey 1: 43, 49,\
        \ 58, 55, 362\nMonkey 2: \nMonkey 3: \n\nAfter round 3, the monkeys are holding\
        \ items with these worry levels:\nMonkey 0: 16, 18, 21, 20, 122\nMonkey 1:\
        \ 1468, 22, 150, 286, 739\nMonkey 2: \nMonkey 3: \n\nAfter round 4, the monkeys\
        \ are holding items with these worry levels:\nMonkey 0: 491, 9, 52, 97, 248,\
        \ 34\nMonkey 1: 39, 45, 43, 258\nMonkey 2: \nMonkey 3: \n\nAfter round 5,\
        \ the monkeys are holding items with these worry levels:\nMonkey 0: 15, 17,\
        \ 16, 88, 1037\nMonkey 1: 20, 110, 205, 524, 72\nMonkey 2: \nMonkey 3: \n\n\
        After round 6, the monkeys are holding items with these worry levels:\nMonkey\
        \ 0: 8, 70, 176, 26, 34\nMonkey 1: 481, 32, 36, 186, 2190\nMonkey 2: \nMonkey\
        \ 3: \n\nAfter round 7, the monkeys are holding items with these worry levels:\n\
        Monkey 0: 162, 12, 14, 64, 732, 17\nMonkey 1: 148, 372, 55, 72\nMonkey 2:\
        \ \nMonkey 3: \n\nAfter round 8, the monkeys are holding items with these\
        \ worry levels:\nMonkey 0: 51, 126, 20, 26, 136\nMonkey 1: 343, 26, 30, 1546,\
        \ 36\nMonkey 2: \nMonkey 3: \n\nAfter round 9, the monkeys are holding items\
        \ with these worry levels:\nMonkey 0: 116, 10, 12, 517, 14\nMonkey 1: 108,\
        \ 267, 43, 55, 288\nMonkey 2: \nMonkey 3: \n\nAfter round 10, the monkeys\
        \ are holding items with these worry levels:\nMonkey 0: 91, 16, 20, 98\nMonkey\
        \ 1: 481, 245, 22, 26, 1092, 30\nMonkey 2: \nMonkey 3: \n\n...\n\nAfter round\
        \ 15, the monkeys are holding items with these worry levels:\nMonkey 0: 83,\
        \ 44, 8, 184, 9, 20, 26, 102\nMonkey 1: 110, 36\nMonkey 2: \nMonkey 3: \n\n\
        ...\n\nAfter round 20, the monkeys are holding items with these worry levels:\n\
        Monkey 0: 10, 12, 14, 26, 34\nMonkey 1: 245, 93, 53, 199, 115\nMonkey 2: \n\
        Monkey 3: \n\n\n\nChasing all of the monkeys at once is impossible; you're\
        \ going to have to focus on the \ntwo most active\n monkeys if you want any\
        \ hope of getting your stuff back. Count the \ntotal number of times each\
        \ monkey inspects items\n over 20 rounds:\n\n\nMonkey 0 inspected items 101\
        \ times.\n\nMonkey 1 inspected items 95 times.\nMonkey 2 inspected items 7\
        \ times.\n\nMonkey 3 inspected items 105 times.\n\n\n\n\nIn this example,\
        \ the two most active monkeys inspected items 101 and 105 times. The level\
        \ of \nmonkey business\n in this situation can be found by multiplying these\
        \ together: \n10605\n.\n\n\nFigure out which monkeys to chase by counting\
        \ how many items they inspect over 20 rounds. \nWhat is the level of monkey\
        \ business after 20 rounds of stuff-slinging simian shenanigans?\n\n--- Part\
        \ Two ---\nYou're worried you might not ever get your items back. So worried,\
        \ in fact, that your relief that a monkey's inspection didn't damage an item\
        \ \nno longer causes your worry level to be divided by three\n.\n\n\nUnfortunately,\
        \ that relief was all that was keeping your worry levels from reaching \n\
        ridiculous levels\n. You'll need to \nfind another way to keep your worry\
        \ levels manageable\n.\n\n\nAt this rate, you might be putting up with these\
        \ monkeys for a \nvery long time\n - possibly \n10000\n rounds\n!\n\n\nWith\
        \ these new rules, you can still figure out the \nmonkey business\n after\
        \ 10000 rounds. Using the same example above:\n\n\n== After round 1 ==\nMonkey\
        \ 0 inspected items 2 times.\nMonkey 1 inspected items 4 times.\nMonkey 2\
        \ inspected items 3 times.\nMonkey 3 inspected items 6 times.\n\n== After\
        \ round 20 ==\nMonkey 0 inspected items 99 times.\nMonkey 1 inspected items\
        \ 97 times.\nMonkey 2 inspected items 8 times.\nMonkey 3 inspected items 103\
        \ times.\n\n== After round 1000 ==\nMonkey 0 inspected items 5204 times.\n\
        Monkey 1 inspected items 4792 times.\nMonkey 2 inspected items 199 times.\n\
        Monkey 3 inspected items 5192 times.\n\n== After round 2000 ==\nMonkey 0 inspected\
        \ items 10419 times.\nMonkey 1 inspected items 9577 times.\nMonkey 2 inspected\
        \ items 392 times.\nMonkey 3 inspected items 10391 times.\n\n== After round\
        \ 3000 ==\nMonkey 0 inspected items 15638 times.\nMonkey 1 inspected items\
        \ 14358 times.\nMonkey 2 inspected items 587 times.\nMonkey 3 inspected items\
        \ 15593 times.\n\n== After round 4000 ==\nMonkey 0 inspected items 20858 times.\n\
        Monkey 1 inspected items 19138 times.\nMonkey 2 inspected items 780 times.\n\
        Monkey 3 inspected items 20797 times.\n\n== After round 5000 ==\nMonkey 0\
        \ inspected items 26075 times.\nMonkey 1 inspected items 23921 times.\nMonkey\
        \ 2 inspected items 974 times.\nMonkey 3 inspected items 26000 times.\n\n\
        == After round 6000 ==\nMonkey 0 inspected items 31294 times.\nMonkey 1 inspected\
        \ items 28702 times.\nMonkey 2 inspected items 1165 times.\nMonkey 3 inspected\
        \ items 31204 times.\n\n== After round 7000 ==\nMonkey 0 inspected items 36508\
        \ times.\nMonkey 1 inspected items 33488 times.\nMonkey 2 inspected items\
        \ 1360 times.\nMonkey 3 inspected items 36400 times.\n\n== After round 8000\
        \ ==\nMonkey 0 inspected items 41728 times.\nMonkey 1 inspected items 38268\
        \ times.\nMonkey 2 inspected items 1553 times.\nMonkey 3 inspected items 41606\
        \ times.\n\n== After round 9000 ==\nMonkey 0 inspected items 46945 times.\n\
        Monkey 1 inspected items 43051 times.\nMonkey 2 inspected items 1746 times.\n\
        Monkey 3 inspected items 46807 times.\n\n== After round 10000 ==\n\nMonkey\
        \ 0 inspected items 52166 times.\n\nMonkey 1 inspected items 47830 times.\n\
        Monkey 2 inspected items 1938 times.\n\nMonkey 3 inspected items 52013 times.\n\
        \n\n\n\nAfter 10000 rounds, the two most active monkeys inspected items 52166\
        \ and 52013 times. Multiplying these together, the level of \nmonkey business\n\
        \ in this situation is now \n2713310158\n.\n\n\nWorry levels are no longer\
        \ divided by three after each item is inspected; you'll need to find another\
        \ way to keep your worry levels manageable. Starting again from the initial\
        \ state in your puzzle input, \nwhat is the level of monkey business after\
        \ 10000 rounds?"
    title: '--- Day 11: Monkey in the Middle ---'
  12:
    answers:
      part1:
        correct: '383'
        wrong: []
      part2:
        correct: '377'
        wrong: []
    input: 'abaaaaacaaaacccccccccaaaaaaccccccccccccccccccccccccccccccccccaaaaaa

      abaaaaacaaaaccccaaaaaaaaaacccccccccccccccccccccccccccccccccccaaaaaa

      abaaacccaaaaccccaaaaaaaaaaacccaacccccccccccaacccccccccccccccccaaaaa

      abaaaacccaacccccaaaaaaaaaaaaaaaaacccccccccccacccccccccccccccccccaaa

      abacaacccccccccccaaaaaaaaaaaaaaaaccccccccccaacccccccccccccccccccaaa

      abcccacccccccccccaaaaaaaccaaaaaaaccccccccccclllcccccacccccccccccaac

      abccccccccccccccccaaaaaccccccccccccccccccclllllllcccccccccccccccccc

      abaaacccccccccccccaaaaaccccccccccccccccaakklllllllcccccccccaacccccc

      abaaacccccccccccacccaaaccccccccccccccccakkklpppllllccddaaacaacccccc

      abaaacccaaacccccaacaaaccccccccccccccccckkkkpppppllllcddddaaaacccccc

      abaacccaaaacccccaaaaaccccccccccccccccckkkkpppppppllmmddddddaaaacccc

      abaaaccaaaaccccccaaaaaacaaacccccccccckkkkpppuuuppplmmmmdddddaaacccc

      abaaacccaaaccccaaaaaaaacaaaaccccccckkkkkoppuuuuuppqmmmmmmdddddacccc

      abcccccccccccccaaaaaaaacaaaacccccjkkkkkooppuuuuuuqqqmmmmmmmddddcccc

      abccccccccccccccccaaccccaaaccccjjjjkoooooouuuxuuuqqqqqqmmmmmddecccc

      abacaaccccccccccccaacccccccccccjjjjoooooouuuxxxuvvqqqqqqqmmmeeecccc

      abaaaacccccccacccaccccccccccccjjjjoootuuuuuuxxxyvvvvvqqqqmmmeeecccc

      abaaaaacccccaaacaaacccccccccccjjjoooottuuuuuxxyyvvvvvvvqqmnneeecccc

      abaaaaaccaaaaaaaaaaccccccccaccjjjooottttxxxxxxyyyyyyvvvqqnnneeecccc

      abaaaccccaaaaaaaaaacccccccaaccjjjoootttxxxxxxxyyyyyyvvqqqnnneeecccc

      SbcaaccccaaaaaaaaaaccccaaaaacajjjnnntttxxxxEzzzyyyyvvvrrqnnneeccccc

      abcccccccaaaaaaaaaaacccaaaaaaaajjjnnntttxxxxyyyyyvvvvrrrnnneeeccccc

      abcccccccaaaaaaaaaaacccccaaaaccjjjnnnnttttxxyyyyywvvrrrnnneeecccccc

      abcccccccccaaaaaaccaccccaaaaaccciiinnnnttxxyyyyyyywwrrnnnneeecccccc

      abccccccccccccaaacccccccaacaaaccciiinnnttxxyywwyyywwrrnnnffeccccccc

      abccccccccccccaaacccccccaccaaaccciiinnnttwwwwwwwwwwwrrrnnfffccccccc

      abccccccccccccccccccccccccccccccciiinnnttwwwwsswwwwwrrrnnfffccccccc

      abaaaccaaccccccccccccccccccccccccciinnnttswwwssswwwwrrroofffacccccc

      abaaccaaaaaacccccccccccccccccaaacciinnntssssssssssrrrrooofffacccccc

      abaccccaaaaacccccccaaacccccccaaaaciinnnssssssmmssssrrrooofffacccccc

      abaacaaaaaaacccccccaaaaccccccaaaaciiinmmmssmmmmmoosroooooffaaaacccc

      abaaaaaaaaaaaccccccaaaaccccccaaacciiimmmmmmmmmmmoooooooofffaaaacccc

      abcaaaaaaaaaaccccccaaaaccccccccccccihhmmmmmmmhggoooooooffffaaaccccc

      abcccccaaacaccccccccaaccccccccccccchhhhhhhhhhhggggggggggffaaacccccc

      abaccccaacccccccccccaaaccccccccccccchhhhhhhhhhgggggggggggcaaacccccc

      abaaaccccaccccccccccaaaacccaacccccccchhhhhhhaaaaaggggggcccccccccccc

      abaaaccccaaacaaaccccaaaacaaaacccccccccccccccaaaacccccccccccccccaaac

      abaacccccaaaaaaaccccaaaaaaaaacccccccccccccccaaacccccccccccccccccaaa

      abaaaccccaaaaaaccccaaaaaaaaccccccccccccccccccaacccccccccccccccccaaa

      abccccccaaaaaaaaaaaaaaaaaaacccccccccccccccccaaccccccccccccccccaaaaa

      abcccccaaaaaaaaaaaaaaaaaaaaacccccccccccccccccccccccccccccccccaaaaaa'
    parts:
      part1: "--- Day 12: Hill Climbing Algorithm ---\nYou try contacting the Elves\
        \ using your \nhandheld device\n, but the river you're following must be too\
        \ low to get a decent signal.\n\n\nYou ask the device for a heightmap of the\
        \ surrounding area (your puzzle input). The heightmap shows the local area\
        \ from above broken into a grid; the elevation of each square of the grid\
        \ is given by a single lowercase letter, where \na\n is the lowest elevation,\
        \ \nb\n is the next-lowest, and so on up to the highest elevation, \nz\n.\n\
        \n\nAlso included on the heightmap are marks for your current position (\n\
        S\n) and the location that should get the best signal (\nE\n). Your current\
        \ position (\nS\n) has elevation \na\n, and the location that should get the\
        \ best signal (\nE\n) has elevation \nz\n.\n\n\nYou'd like to reach \nE\n\
        , but to save energy, you should do it in \nas few steps as possible\n. During\
        \ each step, you can move exactly one square up, down, left, or right. To\
        \ avoid needing to get out your climbing gear, the elevation of the destination\
        \ square can be \nat most one higher\n than the elevation of your current\
        \ square; that is, if your current elevation is \nm\n, you could step to elevation\
        \ \nn\n, but not to elevation \no\n. (This also means that the elevation of\
        \ the destination square can be much lower than the elevation of your current\
        \ square.)\n\n\nFor example:\n\n\nS\nabqponm\nabcryxxl\naccsz\nE\nxk\nacctuvwj\n\
        abdefghi\n\n\n\nHere, you start in the top-left corner; your goal is near\
        \ the middle. You could start by moving down or right, but eventually you'll\
        \ need to head toward the \ne\n at the bottom. From there, you can spiral\
        \ around to the goal:\n\n\nv..v<<<<\n>v.vv<<^\n.>vv>E^^\n..v>>>^^\n..>>>>>^\n\
        \n\n\nIn the above diagram, the symbols indicate whether the path exits each\
        \ square moving up (\n^\n), down (\nv\n), left (\n<\n), or right (\n>\n).\
        \ The location that should get the best signal is still \nE\n, and \n.\n marks\
        \ unvisited squares.\n\n\nThis path reaches the goal in \n31\n steps, the\
        \ fewest possible.\n\n\nWhat is the fewest steps required to move from your\
        \ current position to the location that should get the best signal?"
      part2: "--- Day 12: Hill Climbing Algorithm ---\nYou try contacting the Elves\
        \ using your \nhandheld device\n, but the river you're following must be too\
        \ low to get a decent signal.\n\n\nYou ask the device for a heightmap of the\
        \ surrounding area (your puzzle input). The heightmap shows the local area\
        \ from above broken into a grid; the elevation of each square of the grid\
        \ is given by a single lowercase letter, where \na\n is the lowest elevation,\
        \ \nb\n is the next-lowest, and so on up to the highest elevation, \nz\n.\n\
        \n\nAlso included on the heightmap are marks for your current position (\n\
        S\n) and the location that should get the best signal (\nE\n). Your current\
        \ position (\nS\n) has elevation \na\n, and the location that should get the\
        \ best signal (\nE\n) has elevation \nz\n.\n\n\nYou'd like to reach \nE\n\
        , but to save energy, you should do it in \nas few steps as possible\n. During\
        \ each step, you can move exactly one square up, down, left, or right. To\
        \ avoid needing to get out your climbing gear, the elevation of the destination\
        \ square can be \nat most one higher\n than the elevation of your current\
        \ square; that is, if your current elevation is \nm\n, you could step to elevation\
        \ \nn\n, but not to elevation \no\n. (This also means that the elevation of\
        \ the destination square can be much lower than the elevation of your current\
        \ square.)\n\n\nFor example:\n\n\nS\nabqponm\nabcryxxl\naccsz\nE\nxk\nacctuvwj\n\
        abdefghi\n\n\n\nHere, you start in the top-left corner; your goal is near\
        \ the middle. You could start by moving down or right, but eventually you'll\
        \ need to head toward the \ne\n at the bottom. From there, you can spiral\
        \ around to the goal:\n\n\nv..v<<<<\n>v.vv<<^\n.>vv>E^^\n..v>>>^^\n..>>>>>^\n\
        \n\n\nIn the above diagram, the symbols indicate whether the path exits each\
        \ square moving up (\n^\n), down (\nv\n), left (\n<\n), or right (\n>\n).\
        \ The location that should get the best signal is still \nE\n, and \n.\n marks\
        \ unvisited squares.\n\n\nThis path reaches the goal in \n31\n steps, the\
        \ fewest possible.\n\n\nWhat is the fewest steps required to move from your\
        \ current position to the location that should get the best signal?\n\n---\
        \ Part Two ---\nAs you walk up the hill, you suspect that the Elves will want\
        \ to turn this into a hiking trail. The beginning isn't very scenic, though;\
        \ perhaps you can find a better starting point.\n\n\nTo maximize exercise\
        \ while hiking, the trail should start as low as possible: elevation \na\n\
        . The goal is still the square marked \nE\n. However, the trail should still\
        \ be direct, taking the fewest steps to reach its goal. So, you'll need to\
        \ find the shortest path from \nany square at elevation \na\n to the square\
        \ marked \nE\n.\n\n\nAgain consider the example from above:\n\n\nS\nabqponm\n\
        abcryxxl\naccsz\nE\nxk\nacctuvwj\nabdefghi\n\n\n\nNow, there are six choices\
        \ for starting position (five marked \na\n, plus the square marked \nS\n that\
        \ counts as being at elevation \na\n). If you start at the bottom-left square,\
        \ you can reach the goal most quickly:\n\n\n...v<<<<\n...vv<<^\n...v>E^^\n\
        .>v>>>^^\n>^>>>>>^\n\n\n\nThis path reaches the goal in only \n29\n steps,\
        \ the fewest possible.\n\n\nWhat is the fewest steps required to move starting\
        \ from any square with elevation \na\n to the location that should get the\
        \ best signal?"
    title: '--- Day 12: Hill Climbing Algorithm ---'
  13:
    answers:
      part1:
        correct: '5580'
        wrong: []
      part2:
        correct: '26200'
        wrong: []
    input: '[[9,1],[[[8],2,5],10,5],[[],[[0,10,2,10,2],[6]],5],[[10,[]],[],[[5,1,3,10],5],[[],[],[10,0]]],[[4,3],[[],[],[2,8,0,6]],4,[[8,1,7,1],1,[2,9,0],4,4]]]

      [[5],[10,[[4,9,6,5,0],1,5,[],[]],[9],7,[]],[0,[[4,3,7,8],[0,1,2,5]]],[[[],[8,7,8,4,1],4,9,1],[[0,8,1],6,[0,7,1,1]],6,7,9]]


      [[1,[[],3,[2,7,7,5]],[10,[7,7,7,1]],[[9],4,4,7],[[7],1]],[],[5,10,7],[[0,[],[]]],[]]

      [[2,2],[[0,[9,5,0,6],10,[],[8,1,6,6,0]],0,[[],[],[7,3,1,8,1]],10,1]]


      [[[2,7,7,[9,0,0]]],[[[1,6,0,1]],[[9,0,3,9,9],10],1,10,9],[[[3],2,[0,3,4],[],[7,4]],10,[8],9,6],[[5,2,6,4,[10,8]],[[0,5,9,10],[9,5],[10,3,4,0],0]],[]]

      [[[],10,3,1,[[]]],[9,10],[],[[],3,10,5],[[[],4,3,0],[[],8,9,5,3],[],6]]


      [[[8,[],8,3,8],7,[]],[8,0],[7,3]]

      [[],[[0,10],[[5],[10,2,2]]],[[6,[6,5,0,7],[],[]],10,5],[[1,[10,4,4]],5,7,5,7]]


      [9,9,7,10]

      [9,9,7,10,0]


      [[0,[3,0]],[0,7,4,10]]

      [[[[],[],3,[2]]],[]]


      [[],[10,1,[7,8,[10,7,0,8]],[],[0,[1,5,7,6],8,[5]]],[10]]

      [[],[],[[[],9,[],9,[2]],[[10,8,1,6],[7,8],[8,2,5,6,9],[]],[],[9,6,2],[[0,4,7],[],3,8,[10,1,0,6,4]]]]


      [[6,1],[[],[3,[8,7,5,4,1]],[[9,10,6],[2,1],[4,10,5]],[[2],[8,1,4],3]],[5],[1,[1,7]]]

      [[2],[[4],5,9,10],[3,7,9],[]]


      [[2,8,[4,[10],3],[],[2]],[0,[[3,0],[5,10,10]],[[10,1],[10,6,5,9,3]]],[],[],[[]]]

      [[[10],[[],6,1,7]],[],[[[7],[3,10,8,7]]]]


      [[[1,[],[0]],0,[[6,1,10],[4,4,6],3,[0,5,2],5],6]]

      [[],[],[[[],4,[],0,[8,7]],7,5],[[8,[],1,1]],[3,7,[],[[6,2,0],9,[0,3],10,4]]]


      [[[[9,5,5,1,2],1],9],[[[],3,4],[6,8,[4,3,3,10],[]],4],[[],1],[4]]

      [[[[8,10,9,1,9],[],8],[[4,9,10],3],4],[0,9,6,[[9]]],[[[],[3],[],4],9]]


      [[7,[[9,8,7,6,10]]],[[[7],[4,9,6,1],[7,2,1],3],8],[[9,[4,4,10,3,1]],[6,0,8,2]],[[[9,7,7,9,6],10,[1,4,0,4,9],[7,3,4],[9,9,8,3]]],[10,[[2],[4,2],[3],6,3]]]

      [[[[0,6,6,9],[1],[8,3,5,3,7],[1,4,2,0]],[],[[10],[1],[7,5,5,10],[5,2,8],[0]],[6],[1,5,[],[5,2,7,6]]],[[[4,7,9,9,3],[7,4,5]],3,5],[[9,4,1,[5,1]]],[[4]],[10,[]]]


      [[],[[5,[4,7,9,5]],[6,4]]]

      [[[[7,1,7,3,2]],2,0,[[6,10]],[3]],[[],[8,[],[3]],[6,[],0,8,[10,5]]],[],[6,9,[[8,3,2,1],6]],[[3],[5,[]],[[0,4,7,0],0],[[1,2,7],[0,3],[10,6,0,5,5],[],4]]]


      [[[],[0,[10,1,0]],[0,[5,5,3,5,4],8,[],[2,9,10,0]],[3,4,3],[[10,3],[7,6,5,3],[2]]],[10]]

      [[4,[0,6,1,[],[7,8,7,5]],[9]]]


      [[3,8,10,7],[[6,7],[[2,7,9,4,9]],0,[],4],[[],[[2],0,4]]]

      [[0,[[5,6,9,8],2],2,10,[2]]]


      [[3,9,[[],[3]],[[]],5],[],[[[3,5,1]],9,3]]

      [[6,1,[]],[[9,9],8,6,[6]],[[],3,4,[2]],[],[3,[],[3,[5,9,8,5,9],5,[]]]]


      [[3,[10,[8,3],8,2],[10],[5,4,[5,2,0,6,5],[],[8,10]]],[5,6,6,[]],[]]

      [[],[],[[10,1,7,6,3],[[7,1,10,10],7,5,[]],[[],10,[5,2,7],6,[0,0,1]],4,9],[[[6,10,8,4],8,[3,0,5],10,3]],[]]


      [[0,[],9,[3]]]

      [[],[1,[],3],[[8,5],[1,[5,2,4],[4,9,4]],7,[9,[10,7,6,4,6],6,[9,2,1,3],3],5],[[8,[1,7]],6,8,[[4,3],8]]]


      [[],[7],[6,10,[]],[],[[[1,4,7,2],6]]]

      [[[],4],[[6,[4,5,4,5,8]],[[3,4],9,7],6,6],[7]]


      [[[]],[[5,[]],2,[8,6],[3,[3,0,1,9,5]],[[9,9]]],[[8,[]],[5],[1],[[],[0,1,1],9,[8,2,7,6]]],[[[],9],[4,[7,5],[7,5]]]]

      [[[[8,7,4,0],5,[]],[10,10],5,9]]


      [[[[10,1,5,7,10],10,[],[1,7]],8,10],[[10,[9,6,10,9]],8,4,[[2,1,0],0],[6,7,8,[6,8],10]],[[],[[],[1,2,1],8],7,[[3,0,2,7,9],9],[5]],[5,[1,1,[]]]]

      [[[[8],0,8,[]]],[[7],[[6],6,[9,0,6],[1,2,1,0],2]],[[],2,5,4,[1,[3,8],[5],7]],[[[0,1]],[5,[9,9,7,2,8],4],9],[0,3]]


      [[[[0,9],8,[]],2],[],[[[1,2,5,1,4]]],[[[1,7,5,2],4]],[[],9,3]]

      [[[],8,[]],[9,8],[3,6,[]],[10,0,4,5]]


      [[],[9],[4],[[1,7,2]]]

      [[2,1],[[]]]


      [[],[],[[8,5,[1,7,2,5],[1,5,9,2],[2,6]],0,[],9,0],[5,[],[9,[0,2,6,0],[8,3,9,0],[2,4,7],[7,2,10]],6],[3,[[7,1,0,5,0],9,[9],[0,10,8]],[]]]

      [[[0],[[4,9,5,2],[10,8],8],10,[[3,1],3,[8,10,3,2]],[4]],[]]


      [[[[],4,10,5]],[],[[[5,10],6],3,10],[7,0,8,9,[[2,9,6],9]],[10,7,[2,6,10,3]]]

      [[[3,3,[2,7,0,10],[9,10,2,7,10],[5,2,7,7,0]],1,5,[[0,5,3,2,7],5,[3,3],[2],10]],[10,[[9,3,0],[1,9,7,4,3],[8,4],[]],8],[[7,8,8,[],2],10,[[0,9],9,5,[7,7,5,4]],1,6]]


      [[10,[4]]]

      [[1,10],[[[5,5],[],2],2,[],1]]


      [[],[[]],[],[5],[0,[],[6,[9,10,2,8,7],[4,7,1]],7]]

      [[8],[6,[[4],[7,0],0,10],5],[[[4,10,9],9]],[10,3,[[6,1,5,8,2]]],[[10,2,0],[[5,2,10,6],[],[8,9,6,6],[],[9]]]]


      [[9],[[10,[8,4,4,8,10],5],[6],[[5],8,6],4,[[0,6,4]]],[10,2,0],[[[2,5],[1,9,1,1,7],0,[3,4,0,7,7]],5,[],[],0]]

      [[[[],[3,8,7,8]],10,9,3],[[],0,[[7,10,10],1,[0,2],2,[1,7,0]],[[2,0,7,4,8],10,[9,4,2,0],[]],8],[[7,[2,2,8]],[[10,4,7,3]],[[8],3,[3]]],[],[[10,[9,6],6,[8,0,10,5]],[[9,10],10]]]


      [[[[2]],6,[[2,4],[]],4],[[1,10],[[1,1,7,8],4,[1,4,4],[7,6,8,6],[9,10,7,2]],[2,6,[0,9,2]],[]],[[[1,9,9,3,5]],[],[[2,4],3],[[0,10],8,[9,6],[0,3,4]]],[[[8],[9,1,5,9],3,1,7],[2,[2,0,8],[3,4,9,5,5],[],7]]]

      [[[0,[0],3,[8,8,7]],2,9,8,5],[],[[5,4],[3,[4,4,6,4,2],1],0],[[10,5,[2,9]],2]]


      [[5,1,5,8],[[5,9,4,0]]]

      [[9,8,[5,2,6,[2,4,8,10,1]],10],[6],[[[7,8,2,2,9],9,7],[10,0,0,[],6],[[],3,8,[],[8]],[[3,6],4,3,[]]],[8,10,8,7],[[5],9]]


      []

      [[9,5],[5,5,[[3,7,1,6,10]]],[[2,9,[],10]],[3,[4,[3],[0,8]],2],[[1,[7,6,5]],10,[1,[8,0,2,6,7],[4,3],[9,7,10,3],7]]]


      [[[[4]]],[9,7],[]]

      [[4,1,3,8,[5,[2,5,9,7,9]]],[[1,[0,7,4],[],[6,3,8,1,3]],[8,[8,3,5],9,[7,0,6,10]],7,[[8],10,[5,4,10]]]]


      [[[1,[]],9,8,0],[1,[[5,9,10]]],[[[4,6,2,2],[],2],10,4,[6,[],10]]]

      [[[5,[9,4,3,0,3]],6],[[3,10,10,[0,5,6,6,9],7],[4,[],10,[1,9,6,7],[9,6,4,2,0]],[3],10,9],[[],[2,[6,7,8,5]]]]


      [[[],[[7,4,2],[10],[2,10,6],5],9],[],[[[1,10,2,9]],[],8,[[6,0,8],[10,0,2,9],0,9]],[[6,0,1,[0],8],[1,[10,3],[2,3,5,10],[5,4,4,6,8],[]],[[9,1,10,10],10,[8,3,9],2,5]],[]]

      [[8,9,7,[[10,3,2],[8,0,7],9,3],5]]


      [[],[],[1,9,0,9,8]]

      [[10]]


      [[[7,[9,9],8,10],[[],[9,9,7,8]]],[[4,[5,10,4,7]]],[]]

      [[],[[3,4,[3,7,5],2,[0,8,5,8]],[6,[6,6]],[3,2,[],[1,7]]]]


      [[5,2],[2],[[[7,8],[],[3,5,8],[10]],5],[8,[9,9,3],7,3,[4]],[[],[5,[9],[5,10,10,4],[4,6,3],8],[[9,9,10,3],4,10,[0]]]]

      [[0,3,5,[[7,5,3,6,10],3,2]],[],[[10,[5,8,4],8,8,1],[9,5],2,[],[[8,9,0,7],[3,6]]],[3,2,4],[4,5,[[4,0,2],[1],[3],[6,0]]]]


      [[6,9,0,3],[],[],[4,[[0,3,8,6,9]]],[2,7,[],[[4,6,9,4],[4,10,8,7,0],[3,5],[6,10,5]],[3,1,[]]]]

      [[],[],[[[7,6,8],[6,8,1],[9],[3],8]]]


      [[8,[1,4,[5,1,4,8],3,6],[10,[8,2,5,1],10],[0,6,[9,10,6,3,4],[8,6]],7],[1],[]]

      [[6,6],[0],[],[1,3,[[7,9],1,6],10,[[8,3,5],[10,7,5,8,10],[10],10,[]]],[5,[[]],6,0]]


      [[[10,8],[[2,9,4]]],[[4,2,[7,4,6,7,7],[0,6,7,7],10]],[[2,[7,9],[2,2,0]]]]

      [[1]]


      [[[7,2],8,[[2],4,5,[0],8]],[]]

      [[3,6],[[[2],[6,10,1,5,3],[3,3],9],1,9,0,5],[[8,[4,8,6,9],[9,7],[7,8],[3,7]],10,6],[],[[[5,0],[7,1],[5,4]],5,6,6,[5,3,[2],[10,8,5]]]]


      [[[[8,2,4,4]],[],[[8,10,9,3],6,8,[3,9,4,5]],[[],8],[7,[]]],[9,8]]

      [[[],[[9,0]],6],[9,[[0,5],8,[6,7,3,6]],[],[[9,4,5,8,10],10,4,[10],5],8]]


      [[],[[[],4,[3,9,8],[4,10,7,1]],[],7,3,[2,[8,3],8,7,[6,4,0,6,2]]],[[9,[0,10,0,5,0]],[],[2]]]

      [[10,[10,10,0,[0,8,7]],5,5,[[7,4,1,5],[4,2,8,1]]]]


      [[],[[[2,2,5],9,1],[2,[4,4],[],5],5,10,[]],[0],[[6,[5],[3],3]],[7,5,5,3]]

      [[[9,[0,9,3],[7,1,9,8],7],[6,0,[1]],10],[3,1],[],[[],[],[],3,[[6,6,9,3,7],[6,4]]]]


      [[[[6,2],10,8]],[[[0,7,8,4],[],7,4],0,3,3,[2,1]],[[6,[5,2],[8,1,7,3]],2,[[9,4,8],[7,0],[],10],8]]

      [[],[1,[],[[4,8],1,7,[0,1,3,4,8],4]]]


      [[[[5,7,9],0,[9,7,5]],6,7,[4,9],5],[[0,[7,7,4,0,0],1,5,9]]]

      [[4,[7,[10,6],7,10,[]]],[],[[[8],7,[0],7],9,[[1,1,4],[2,10,7]]],[[[9,10,7,2],1,4,6,9],[8]]]


      [[3,5]]

      [[],[[7],4,9],[[7,[2,10,9],6,8],3,9,[]]]


      [[[8,5],[[3,7,7,0],10]],[[],[[],[2,9,0,4]],[[8,3,10,7,1],[]],3]]

      [[],[10,6,0,[],6],[[],[5,6,[1,2]],[9],10,[[9,7,6,4],6,6]],[]]


      [[10,[9,10,[],[3,5,4,9,5]],7,9,[4,[0,10]]],[[0,[6,2,4,4,2],9,[7,9,4]],[10,[],[8],8]]]

      [[4,0,6,6],[1,6,[[2,5,7]],[]],[]]


      [[[[0,5,0,9,4]],6,[0],5,4],[[10,[3,10,4,8]],[0,7,1,10,[3,10,8,5]],7,10,4]]

      [[9,[9],4,[5]],[],[9,[0],9,[[1,3,0,7,10],[3,0,6,2]]]]


      [[[2,[7,6,7,6,0]],[1,[7,2,1,4,9],[7,2],3,[5,6,2]]]]

      [[],[[6,[0,8,1,6,0],[4]],0,2,[[0,1],10,[1],2]]]


      [[[[2,5,4]],[],4,0],[6,[9,[8,4,9,3],9,4,[2]],[4,[10]],[[5,2,2,1],9,7],[5,[8],[10,8,6,2]]],[8,4,[],[10,0,2],0],[10,5]]

      [[],[3],[],[8,4,[[1,10],2,2,[7,4,9]],7]]


      [[[],10,10,5,[[7],6]],[[3,[4,6,9,3,2],[10]]],[9,7,[5,10,[2,3,7,3,0],[]],9,[2,2,[6,9,7,0]]],[[0],5,3,[[8,3,10,1]],[[9],[8,10,8,1,6],[9,5,1,10,2]]]]

      [[9,[],9]]


      [[3],[[[0]]],[],[]]

      [[],[],[3,[]],[[2],[8,[6,5],10],[[0,5,4],1],5]]


      [[[5,1,8],1,0],[[]],[[8,[2,5,9,3,5],[8,9,5,9,9]],8,[[4,6,5,9]],0]]

      [[8,[5,6]],[5,10,1,[10,3,8,10,[0,2]],[1,0]]]


      [[[3,1,7,[3,2,2,9,1],4],0,3,[[],[],10,[],9]],[[[6,5,3,6,8],1],[[]],3],[6,4],[[9,7,[6,3],6],9],[[[4,2,2],8,[8,1,7],[6,6]],[10],[[4,10,9,10,1],0,[],[9]],4]]

      [[4,7,6],[[[9,9,5],[2,4],10,2],[6,[0,9,0]],8,4,2]]


      [[[7],[[9,5],0,1],7],[[3,3,4,[],[3,2,10]]],[],[4,6,4,[],[[4,6,1],[4,7],[0,9,10,10],8,0]],[[],3,1,3,[6,[3],0,[5,1,5,3,0],5]]]

      [[1,[[],[9,4,6,1]],[[],[10]]],[8,[1],[[7],6,[9,10,6,0,5],[1]],3]]


      [[0,[],10,[],[]],[[[4,4,1,8]],7,8],[5]]

      [[1,[]]]


      [[[[10,8,8],9,8],[0,6],9,[[4,6,1,7],[4,3],[10],4],3]]

      [[[2,[10,7,10,10,8]],5,3],[9,4],[[[2,1],2],[3,0,[7],0,[5]]]]


      [[[],[6,[]],[[4,2],[0,4]],5],[]]

      [[[7,[0,2,0],6,5,[]],[[10],0,[5,4]],[9,5,[9,2,4],3]]]


      [[[8],7,4,2],[],[10],[4,[[6,7,4],2,3,[6,1,0]],4,[1]]]

      [[[[7,4,5,5,1],[9,1],[0]],[6,[8,2,3,0]],[2]],[7,[5],[8],[]],[9,[6,[8,4,2,2],1],4],[8,[[],[0]]],[[],3,8,9]]


      [[8,0,[[0,7,9]],0,[7]]]

      [[[[]],[]]]


      [[4]]

      [[6,[1,0,10],1,[[10,3,1,2],[4,6,5,7],5],[1,1,[3,1,8],6]],[2,1],[5,10,[1,[3,0,8],6]],[[0,9,[9]],4,[[]],7,[1,[7,4]]],[]]


      [[[[8,6],[6,2],[8],1]],[10,10,[[2,5],6,[4],[1,7,2,9],10],1,7],[],[[[10,7,5],5],[2,8,9],[[1,4,9]]],[[[9,10,6,2,4],1,8,[9,7,2,0],[]],10,5,5]]

      [[]]


      [[1,[[1],[],[8]],[[6,1,6,7,5],1,4],10],[[7],[],3,[10,7],0]]

      [[[]],[[[9]],[0],10,6],[[7]]]


      [[1,[[1,6,10,1,4],3,2,[8,7,9],[6,5,0,4]],[[],2,[10,1]],[[],[9,2,7],[],0,5]],[[6,[9],[],6,[9,10,2]]],[4,3,[[2,1,3,7],4,3,[3],4],9,[3,9,[2,8],1]]]

      [[0,[[6,2]],[2,2],[[]]],[],[],[[[3,4],5,7,10]],[5,3]]


      [[[[8,2,0,1],[10],6],2,7,10],[[[]],10,1],[8,7,1,0],[[[2,9,2,8],[3,3,0,6],[2,0,2],[],0],1,[9,[4],5,[1,6,1]]],[[7],[[8],[7,4],[2],4],3,[[10,6,5,3],9]]]

      [[9,8,[[],[9,0]],1],[9,8,8,10,7],[10,[8,0,[10,6,3],[6,3,0,4,8]],10,0]]


      [[[],1,[],[[9,9],0,[0,2]],4],[5,0],[4,[],7,7,0],[],[[4]]]

      [[[[]],4,8,6,8],[9,[[10]],[[2,8,6],[9,0,2,8,4]],10,[1,[3,10,8]]],[[[]]]]


      [[5,6,5,4,6]]

      [[[9,8,5,3,7],2,[[0,4],[10,2,5,10,1]],0],[[]],[6,[7,[1,5,10],[3],[6,1],[3,10]]]]


      [[[[3,3]],[],[6,5,[0]],[[8,7,9],[2],[1,5,2,5],[6,7,4,4],9],[9,[5,7,4,7,1],7,[10],4]]]

      [[[7,[5]],6,[[7,9]]],[[[8,2],[1,7,4,2],[8,8,8],[1,9,3,5,8]],7,3,9,[2,2,6]]]


      [[],[[],2,[[1],[3,9,0],2,8],[[8,9],[1,2,3,1],[]]],[[9,[],[],[9],[5,1,3,6]],3,[1,[],[],[4,7,9,10],[10,5,5,8]],[0,[]]],[[0,5,4,7,[10,4,10,6,4]],[[4,8],0,7,10]]]

      [[[[],7,[],8],2,7],[10,2,[[10,8,0,7,3],8],0],[8,8],[8]]


      [[5,10]]

      [[10,[[9,1,1],0],[[3,1],1],[2,4,[4,0]],4],[9,[[0],4,3],10],[[[6,3,7],4,[],9]],[6,[[]],[]]]


      [[[[10,9,7,10,4],6,0],5,[[5,3,5,1,9],0,[3,7,10,7,5]]],[],[],[1,10],[]]

      [[[[7,8],5,[8]],[[0,0],[9,7,6,6],[6,9],2],0],[7,[4,9,[0,2,2],[10]],[],9,10],[[],[[]],[2,8,6,8,1],[4,9,[0],10,7],[4]]]


      [[[[]],[[0,0,2,5]],[],5],[],[10]]

      [[[[7,7,6,6,3],3,4,6,[3,8,10]],4,[[9,1,9,4],9,[2,6,4,1,0],9,1]]]


      [[[],[8,6,8]],[9,[9,[4,8,3,4,7],9,10,10],[[3,10,5],[10,1]],[]],[],[[1,[1,3,0,6,10],[2,0,10,4,3]]]]

      [[10,[3],10,[[2,3,6,7,6],2,4],5],[6,[]]]


      [[[]]]

      [[9],[1,[[6,9,7,6,5],[6],[2,3,3,3],10]]]


      [[[2,2],2],[4],[9,1,4,[[3,9],10],0]]

      [[],[[4]],[[5,[7,3,2],0,[5,5,1,8,1]],3],[4,[3,[6,3],[],[9,0],[0,4,2,10,6]]],[[9,0,[3,3,9,6]],[[2,3,3,1],[10],5,4],[2,[],1,5,3]]]


      [[[[7,1,3],[0],3,[5,6,6,8],6],4,2,7,[[],[3,3,4],[9,2],[7]]],[],[7,9,[9,[6,8,7]],[[7,2],[1],8,6,[7,9]]],[],[[1],7,4]]

      [[],[[9,3,8],4,0,10],[[[3,3,5],[5,3,3,6],[5,3,7]],9,8,[9,4,[],2,[0,3,8,0]],[[6,9],[1,8],4,[2,3,9,2]]],[],[[10,[7,6,6,1],[],6],[1],[10,[4,8,3,1,2]],[[7,9],8],0]]


      [[9,[[2,10]],[[4,8],[],4,8,[0]]],[],[[[1,3,9],[7],[9,4,9]],7,5,8],[[[1,2,3],7],5]]

      [[1],[[],[[8,8]]],[2,3,10,[[1,3,5,8],[0,5,5,7],4],4],[2,5,6]]


      [[3,0],[10,8,[10],[[4,7,3,2],[2]],7],[[[8],3],3],[2,[7,[10],6],[],8,[2]],[[8,8,6,9,[8,2]],3,[[6,2,7,4,1],[1,7],[4,0,1],[5,4]],6]]

      [[5,3],[[],2,[2,[5,9],[3,4,5,0,10],[0,2,6,0,5],[5,1,5]],5]]


      [[3,1,[7,8,[7,3],6],[],[[10,0,6],3,[6,0,8,4,5]]],[],[[[],6,[6,5,4,8,2],[]],[],[6,[3],9,2]],[0,10,7,[[],5,[10,2,0,7,2],[]]],[4,[1,8,[2],[1]],8,1]]

      [[],[[],[[3,7]],6,[[9,10]]],[[6,[0,2,9],8,[7,7,2,4],[]],10,6,0,[1,[],3,6,[6,1,2]]],[[[],[10,8,6,2,6]],[4,[],[5,5,5,9],7]]]


      [[[],6],[[[3,4,5,8],[9,3,3],8,[],[8,5,10,0]]],[[4,9,[7,2,0]],[1,[9]],[]]]

      [[7,[[3,0,0,1],8,9,7,[3,9,8,5,1]]],[[[4],4,4,7,7],0]]


      [[8,[]],[4,[[1,5,6,10,10]]]]

      [[2,4,[[],9],[[9],8,[9]],[6,[6,2,9,10,6],4,3]]]


      [[9,0,8],[[5,9],6,[[2,2,4,4],1,[0,3,1,10,5],[4,8,7,0,6],5],[],9],[5,[10],0,4],[[],1,8,9,[[],[0,8,2],[0,10,7],0,[4,3]]]]

      [[8,[3,1],[],[[2],[10],8,8,[8,3,1,8,5]],[10,[3,3,6]]],[],[[8,[6],[3,3],4],9],[4,2,8,4],[[5,[9,4],[6,7,6,7,4]],0,[0,[],[9],10,[5,4,10,9]],[[],9,5]]]


      [[[[4,8],10,[8],[2,1]],[[8,3,0,6],[5,6,6,0],6,[1,1,2,6],[0]],10,8,6],[5,[7,[],[4,1]],4,[4]],[9,[3,[5,4,1],[0,1,9,10]],2,[[2,0,2],[]]]]

      [[],[10,[10,[10,7,8,2,1],7,[9,6],6],8],[[6,0,1],[8,[0,4,0],[],[2],[9,9]]],[],[3]]


      [[],[[[]],8,7,[[10,3,2],2]],[1,[0,6,[1,4,1,4]],5,[6,[8,0],[4,4,2,5,5]],1],[2,[[8,7],3],0,3,[6,[],[]]],[6,[3,2,0,10,[7,1,8,3,10]],[],9,[4,9,[5,3],5]]]

      [[2,5,9],[],[]]


      [[],[6]]

      [[],[[4,8]],[1,6],[10,1,[[3,10,0]]],[]]


      [[5,3,[5],[9,[8,7,2]],[[10],[9,3,0,4,6]]],[[],9,9,9],[[[],8,1],7,[[],[1,7,1,3],10,8,[9,5,9,5,0]],3,4],[2],[[[6,4,10],4,7],4,9,[[3,9,1,1],[],[8,3,9],[3,9,1,10],[8,0,6,4]]]]

      [[[[7,7,9,6],2,4]],[[[4,10,2,8],10,9,3],0],[1,[],3]]


      [[],[],[],[[[5,5],[],[]],[[9,6,10,4],7]]]

      [[0,4,8,7,[5,[4,3,7],[7,1,9,5],10]],[],[[9]],[[1,[7],[10,1],[2,10,5,3],[6,6,7,8,3]],[7],[8,0,8,3],6],[2,[[7,6,4,10,2],[2],5],[9,[1,2,3,5],4,[]]]]


      [[],[[3],[6,6,[6,2,3,5],4],[6,0],1]]

      [[[1],0],[],[[],[10,0],5],[2,3],[[6],4]]


      [[6,2,[9,4,1,[0,4,2]]],[8],[[6]],[6,[[2,3,7,0],[10],[]],[2,7],1,8]]

      [[],[6,[[5,8,4,0,3],1,[9,1,4,3],0,[3,5,9,8]],[[],5,[10,0,4,7],[3,10,2,6],[7,4]],9,[]],[[[1]],10,[[4],[5,2,3,5]],[10,9]]]


      [[9,6,[]],[5,[[5,4],[10,2,2,6,10]],[10,[7,10,8,2],[2,6,0,2],7,[9,1,7]],[[5,9],7,[0,4,2,2],0]],[[0,[10,5,4,5,6],[6],[9]],[[5,1,8,8],[9,2,5,4,0],[]]],[[],[[8,8,8,9],7,[3,6,8,3,1],[8],7]]]

      [[[[3,7],[9],7],6],[[6,[6],[9,1,0,3],[8,5,3,6],4],[8,0,7,2]],[[4,[]],7],[],[9,6]]


      [[[[7],[],4,[1,0,3,9]],[[1,9,3,8,5],[1,4,6],0]],[[],0],[[6,[10,1,4,10],3,0,0],10]]

      [[1,3,9,[10,[10,10,1,3,7]],6],[[[7,4],8,8]],[[8,[10],[7,0,0,9],[0,3],3],[0,5,[2],1],[[3,8,1],10]],[[[3,1,2],6,5,[0,9,7,1,7],10],[[6,6,8,2,2],[10]],[],9,3]]


      [[4,4]]

      [[9,[0,8]],[[0,[],0],[0,7],10],[]]


      [[2,[3,[9,8,10,7,3],6,[],[4,0,5]],0,5,9],[],[0,2],[[[10,5,7,7,10]],3],[4]]

      [[5,4,9,1],[[[8,0,2,8,0],10,4,8,[3,6]],[],[[4,0,6]]],[1,[0,[6],[5,2,2,2,8],4,2]],[[6,[2,8,10,0],7,9,10],[[5,0],[]]]]


      [[],[],[6,4,[[6],7,[6],[9,1]],[[3,6,7,1],4,[],[8],8]],[[[5,8,6,7,9],10,[7,10,10]],3]]

      [[],[10,3,[2,[8,0,7],3,[6,3,2,6,7],9]],[1,[[1,10],[],[],6]],[],[[8,[6],9,[]],[[3,10,4,2,4],3,[4,4,4,10,10],4,[]],[4,4,[0,10,6,3],1],9,[6]]]


      [[[],8],[[5,10,[10,1,9],9]]]

      [[9,[[0,8,2]],[9,9,2,[],[8,3,5,9]]]]


      [[[1,[8]]]]

      [[],[4]]


      [[8,5,6,[3],3],[8,0,[]],[[[2,9,4,3]],[[10,2,3,9,0],[3,2,1],4],10],[[10,[5,5,1],[3],0],0,[3,8]],[[3,6]]]

      [[2,[[6,3,7,10,7],[4]],[[6,0],[5],3],8],[6,7,[[4,0,7],5,[10,2,8,8],[10,6,9,8]],[3,[5,7,9,1]],6],[3,[[4,6,10],1,[]],[10,[3,10,6,9,6]],[8,10,9],[4,[5,10,9]]],[[7]]]


      [3,2,1,2,7]

      [3,2,1,2]


      [[[3,[],[],3],5,1,6]]

      [[[0,4,0,[7,8,0],10],[[2],8],[[9],2,1]],[[[],[1,3,5,10],5,[6]],[1],[9,10],[[4,3,8],[0,4,5,8],[4],7],4],[7,[[5,2],[1,4,8]],5,[2]],[[[10,7,8],[],[]],0,4,[2,[1,5,10],9,[4,1],7]]]


      [[[10,[],9],[[]],[0,7,5,0,[]],3,1]]

      [[[[9,7,3,7,8]],6,3,[]],[[[],6,[8,9,6,0,7],[],[2,4]],2,[5,3,[2],[8,9,8],5],4],[],[]]


      [[5,[]],[[[9]],5,4],[8,6,[5,[0],6,7]],[[[8,3,5],[3],9],0,[4,[3,7]],9],[[7,0],[[9,7,8],[2,8,6],2,[],[9,3,1]]]]

      [[1,3,[3,4,[1,7,3,6],5],[8]],[[9,0],[]],[4,4,[3,[2,2,5],[5]],[10],[[3]]],[],[[[],[5],2,6,7],[[2,2],[8,4]],8,8]]


      [[],[2],[[[0,6,4,1],0],7],[5,[[2,8]]]]

      [[5,3,[]],[6,9,[5],1,0],[0,0],[2],[9,0,[],0,3]]


      [[],[],[[[4,4,2,3,1],[7,1],[5,2,2,4,0]],5,[3],10],[[10,[9,6,5,2,7],10,[],[1,8,1]],8],[[[9,2,10],[4,5,7,8,10],[5,9,4,4],[3,2,8,4,7]],1,6,9,[[0,4,9,10],[9,3,3,8,10],10,[],5]]]

      [[[[7],[6],4,5],[4],[[9,1,2],5,10,[9,9]],[1,9]]]


      [[[2,[],[],[9,3]],[3,3,0,0],[[2,10,2,4,1],[9,4,2,7,9]]],[[[7],10],[9,5],6,5],[[4],4],[],[4]]

      [[9,[9],4,9,[2]],[[[3,5,8,5],[],[6,3,1,9]]],[[],7,[],7]]


      [[[7],7],[],[4,[[],5,4,3,9],6,[[5,0,8],1],[3,[4,6,0,1,10],7]],[]]

      [[[7]]]


      [[[],7,[[8,9],5,[6,1,7,7,4],0,2]],[[3,8],[[5,9,2,0],[6,0,8,8,4],9],10,6,[[5,10]]]]

      [[[],[],2,5,[]],[0,[[8]],[4,3,10,[6,0]],[],10],[[1,1,9,3,[7,6,4,2,8]]],[10,[[8,2]],[],3,[9,[]]]]


      [[],[],[[[10,7],6,[5,3,6,5]],4,[6,9,10],5]]

      [[[[9,4,7],2,7,3]],[[[4,6,10,6,5]],0],[5],[6,[],0,1],[4]]


      [[9,6],[[[9,6,6,2],6],5,4,7],[2,[],[]],[[],7,7,[[3],[0,3,8]],0],[[[0,0,9],5],[6,[2,1],[],7,9],[[6,4,4,4],5,9],0]]

      [[[10],5,7,1],[7],[7,7,9,4]]


      [[7,1,[8,2,[4],[]]],[[[10,3,8,4,2],0,[6,10,0,3],[9,8],[4,4,6,3]],[[],5,3,2]],[[[5,5]],2],[]]

      [[[[8,2,1,6,5],7,6,0,2],[7],[[3,3,6,3,3],[7,10,5],5,[3,0,2,8],2],[[],1,9,[7,3],[2,1]]],[],[[5],[10,5,0,[]],[5,[6],[],1]],[]]


      [[[[4,1,1]],[0,1,4],5,[[3,1,10],[7,4,8,8],[]]],[],[]]

      [[[[6,4,1,5,1],[2],3,7],5],[[6,3,2],[]]]


      [[7,2],[],[9,[[0,0],2,7],[3]],[3,[[8],9,4],[10,[],[9,3,8]],[]],[[]]]

      [[[]],[0],[]]


      [[[]],[3],[],[[[7,5,3,0],[7,1,8],0,[3]],[10,[6,7],[5,9,8,1,1],6],[2,0,[10,7,10]]]]

      [[10,8,[4,[3,1,9,9],1,[1]]]]


      [[[[]],7,3,[]]]

      [[5,[6,1,0,0],[[1,4]],3,[[5],0]],[1],[[[7,10,1,10,1],1,10],4,3,5],[[[1],8,[5,1,9,0,4]],[[],[9],[0,1,2],[8,5,8,0,1]]]]


      [[[[5],[],[0,3,8,10]],[3],[],[[8,3,1],7,0],[]],[[3,2,6],[],8,[[3,4,4,5],[],[7],[],8]],[[1,5,[1]],7]]

      [[1,[[0,7,4,7,5]],[],2,4],[[9,0,[0,9,6,6,10],[0,7,7]],5]]


      [[[7,10,1,2],[3,[5,1,8,10],[0],0]],[5,[0,6],[[2,5,5,1,1],[5,1,5,5,2],8],[4,[]],[[4,4,8,6,6],[8,9,0],[2]]],[3,[9,[10],[4,2],[10,1,2,6]]],[[7,[5,3],[10],2],[[5,9,10],[8,2],0,[7]],5,6,2]]

      [[7,[7,2,1,[6,5],[10,0,3]],[[3,10,0,3]],0,[9]],[[]],[],[2,[[3,5,6,0]],0,3,[9,[9,0,5,1],[1,3,5,5],6,[5,9,1,6,1]]],[8,[[2,2],[2,4,8,0],[2],3],[7,2,2],[2,1,10,[3,0,9,8,3],2]]]


      [[3,1],[5,7,[4,[],8,9]]]

      [[[[],4,5,3,[5,5,0,7,4]],[[5],1,[],1]],[2,2]]


      [[10,[[4,2,7,9],1,[0,4,9,7]],3,[[8,5]],2]]

      [[1,0]]


      [[[[7]],7,6,6,9]]

      [[[1,0,[8,5,6],9],4,10,8,[4,9]],[9,[[7,1,6,1,6],9,[9,2],[],10]],[[[9],0],7,4,[[4,1,3],[8],2,[6,0,5,8,0],[2,4]],[2,3,[]]]]


      [[[[3],[10,10,9,6,2]]],[[5,[5,4,8,8],[8,9],[4,3,6]],[],4,9,[[],[7,10],[6,9,1,4,9],[],[5,2,2]]],[5,[],[2,9,3,[9],10],7,[5,[2,2,1,8]]],[7,9,2],[[3,8,[],[9,0,1,7],7],[7],[],5]]

      [[[],[],0,[[],3,[],4],[8,[6,10,7],1,5]],[[[8],10],5,[10]],[]]


      [[1,7,[4,[6,3,0,3],[3],[]]],[[[8,7,6,7,0],[2],0,[7,7,6,3,0]]],[10],[4,7,[10,[6,9]],2,3]]

      [[[8,4,[0,4,1,9],7,8]],[],[[]]]


      [[[[9,8,3,0],4,9],1,[5,6],2],[8,[5]],[[[8,8,4,10],[0,8,3,4,5],[10],7,2],1],[9,[3,[2,8]],[[],[1,8,6,6,0],10,[8,10,3],8],1]]

      [[[]],[[[6,1,0],9,[3]],0,0],[9,3,1,[2],[1,[0,3]]],[1,[[3,2,5,2]],5,[[],10,[6,6,7],0,[]]]]


      [[1,10,4],[5,4,8],[[[5,7,1,2,4],4,[8,4,10,2,10],[0,7,4,9,6]],[[3,5,4,0],[2,5],10,[4,8,9,9,1]],[2,[3]]]]

      [[1,[[3,1,3],6,[2,8,10,8,2]],[6,[1,5,2,1,3],[],[0,4],4],[[0,7,4],[2,1,5,5,4]]]]


      [[[3,4],3,0,1],[2,[[4,1,5],2,[1,2,4],5,9],9,5,[[],3,[3,9,10],[],[5]]],[[8,[1,4,1,10,10],4,[1,9,1]],7,9],[8,1,8,[4,6],[[6,10,7,1,5],[8,9,4,5],[],[]]],[8,10,1]]

      [[8,6,[2,[10,2,7,1,0]],[6,[7]],9]]


      [[3,[[8,7,2,5,6],1,7,4,[0,4,10]],[8],[[2,7,5,5,1],[6],0,8,8]],[[[],[1,0,3,10],7,[0,2,8,8,0],4],[1],5,[[7],[3,6,5]]]]

      [[[6,[10,9,3,4],[6,10],9]],[[[6,6,2,2,3],7,4,7,[]],7,3],[[6],0],[[6,0],[[10,1,0],5,7,[5,8,2,1],4],[],[7]]]


      [[],[[10,10,6,6,10]],[9,[[5,2,9,2],2,8,[]],1,[10,0,10,4],[[3],2,4]],[[1,[3,10,8,4,7],[1,7,2,2,4],[2,4,6,5,5]],1,[[2,8,1,8,4]],[2,[10,3,7],[0,1,0],[6,10,2,10],0],[[],[4,10,0,10],2]],[]]

      [[[[1,0],10,[],[1,2,10],[8,2,4,1]],8,2,[5,3,[10,0],[9,7,7,10],[]]],[0,10],[[6,9],[[5,8],0,[5,3,8],0],1]]


      [[9,[4,8,4,7],8,9,7],[[],1,9],[2,9],[],[[9]]]

      [[[[10,7,5,0,2],8,[8,2],10],10,[6,0,[],8]],[]]


      [[[],0,3,8,[0,[7,2,6,7,8],2]],[2,2,5,[7,5],[]]]

      [[[0,3]],[7],[4],[6,1,[9,[8,5,7,1]]],[[],[[1,8,3,0],[10,10,5,3],3,[3,7],[10,4,3]],8,[6]]]


      [[[3,5,[0,2],10],1,[[],6,[0,7],8],[10]],[[7,8,[6,6,6]],[0,[8,1],[],9],4],[[[7,9]],1,6,3],[[8,5,[10]],0,[[0],7,[6]],7]]

      [[1,[[9,3,3]]]]


      [[],[],[[[7]],8,1,4],[[[6,0],4],1,2,[6],[[9,4,6,10,10],8,6,[6,4,4,3],4]]]

      [[],[],[[[],[10,1,7],8,[]],4],[8,[[0,6],[]],1,[[0,10]]],[4,3,[],6]]


      [[[[5,0,7,8],[8,5,7],[1],5,[1,6,9,0,2]],10,3,1],[[],[5],5,5],[[],5,[[],3,[10,9],4],[[10]],[]]]

      [[[[2,2,0,10,10],2,5,10,0],[],[[4,5,1,10],1,8,7,[1,6,10,8]]]]


      [[[7,[6,0,6],2],4,[[1,10,3],[3,5],[2,8,5,4,3],5,3],[],0],[2,3,6,4],[4,8,9,[0,8,[0,9,0,1]],[7]],[7,6,[8,[],3],[[5,6,0,6],[],[6,10,2,1]]],[8,5,10,7,8]]

      [[2,[[9],[3],[10,5],8],9,3,[9,[7,6,7],[0,10,7]]],[[[3,0,9,0],[0,8],9,10],4,[[],8,[5,9,1,10,3],9,[8,5]]]]


      [[0],[[]],[[7,2,6],[[],[0,7,8,2,1]],[9,9],[[6,1,4,8],10,6],10],[8,2,[],4],[]]

      [[[[1,10,10,8],[9,1],[]],[2,[7,10,2],[0,8,9,8,6],[],3],[[]]],[[],[1,0,[],[2,7,7,6,8]],[[0,0,4],[0,2],4]],[[[4],[1,9,6,9,3],1],[[5],2,5],1],[6],[[[],0],10,7]]


      [[[],[4,[],1],9,8],[[[10,3]]],[0],[7,[5,[4,10,1,5],4,[0]]]]

      [[9,[],8,[]],[8,[],[4,2,[6],[],1],[6,[5,10]],0],[8,10,[[4,2],[10,7,9,3],6,[10,7,3,10,3]],[6,7,[6,3,2,6],[4,3,8,0,7],7]],[[],0,[7,[4,8,1,6],10,4],2,[10]]]


      [[],[[[0,2,6,5,9],4,[6,2]],[5,5,[4,6]],9],[3],[10,[[],[10,7,7,10],[5,0],4,[3,3,2]],0,9]]

      [[[6,[],10,[4,4,1]],0,7,[4,[6,2,4],[8,8]],1],[[5,[],1],[[1,6,5],[7,5,6,2,3],5],7]]


      [[[9,[8,1,8,7,9]],9,3]]

      [[],[[4,[9,10,2]],[4],10]]


      [[[],10,[]],[6,9],[7,2]]

      [[],[[[5,5,1],7,10,8,2]],[],[1,[7,1,10,2,7],[[8,3,2,6,2],5],[[]],[5,0,7]],[[],[7,1,4,7],3,9]]


      [[[],0,7,[9,5,[9,9,5,10],5,4]],[[],[[9,4,3,2],8,6,[8],0]],[9]]

      [[1,10,[],6,5],[8,2,0,3],[],[4,[2,6,[],[0,5]],[0],9]]


      [[],[[[5],[],[6,1],[4],[8,7]],[[6,2,7,1,8]]],[10,[0,[7,5,3,4],[],5,[6,3]]],[]]

      [[1,4,[[6,4,0,1,9]],[1,[],6,[2,5,6,10],[0]]],[[],3,[],[],[[8,10,5],10]],[[1]]]


      [[6,[4,6],8,[9],[2,8,2,[5,6,10,8]]],[2,6,5,[8,10]],[]]

      [[],[1,[],2,0],[7,9,[[0],[10,9],[3],0],4,[[3,7,2,8],[],[6,5,10],[2,3,4,4],7]],[4,2,[[2,6,10,7],8,6,9,3],1]]


      [[[7],9,[[2,1,9,10],4]],[],[[]],[[10,[2,2,8,5],0],[[4,10,2,10,7],0,[0,0,7],[3,3],[9,1]]],[1,[4,[8,4],[]]]]

      [[1,[],10,2,0]]


      [[[4,10,[8,1],10],[[],[10,8],[6,7,2],6,3],3,[[],7,5]],[[[5,6],0,6,9,5],[[9,6,9],4,[8,2],0,7]]]

      [[],[6,7],[8,[10,[0,6,4,0,9],[],[]],6,[[2,1,2,6],[10,10,7,3,4],6,[],[8]]]]


      [[[[5,3,7,3],7,[3],4,[5]],10,9,[1,2,6]],[9],[[2,10,[9,2],[10,1,7]],[9,0,[4,3,6,0,4],2,[4,4,9]]]]

      [[[[],[3,4]],[]]]


      [[[[6,1,9],6,3],0,10,9,5],[]]

      [[[[0,7,6,5],8,[],[2,6,6,1,10],[10,9]],5,5,4],[4,[[8],[7]],8,10],[]]


      [[1,3,2],[]]

      [[[[10,3],9,[10,1]],[4,4,[0,1,6,1,4]]]]


      [[[],[3],[[7],5,7],[[4,2],6,[]]],[[[1,3,3,6],[1]]],[1,0,6,[[10,5,0,7]]],[]]

      [[8,0],[3,3,[[9,10,6],[0,2,8],5],[4,9,[],1],[10,[8],8]],[4,5]]


      [[3,[[9,5,7,7],1,10,5],[[8,10,2,5,5],5,[2,7,6],[8,2,3,10]],[[],[10],2]],[8,1]]

      [[[[9,5,8],[7]]],[7,[10,6,[1,9,3]],[[0,8,7,1],7,[0,6,8,1,8]],4],[[2,7],[[8,7,10]]]]


      [[[],[],[[4]],[[9,9,0,8]],4],[[[8,0,10,10,9],2,5],[[8,3,4,1,3],[9,7],2,3],[[7,4,1],[7,5,9]]],[],[10,6],[]]

      [[2],[[8],[]],[]]


      [[2,[2,4]],[]]

      [[[8,[1,0]],2,7],[3,[7,[6,8,10,8],3,[3,7,6,4],[5,4,6]],[5]],[1,[]],[],[[0,[1,3,6,8,8]],2,[[5,2,2,0],[9,5],0],[],[4]]]'
    parts:
      part1: "--- Day 13: Distress Signal ---\nYou climb the hill and again try contacting\
        \ the Elves. However, you instead receive a signal you weren't expecting:\
        \ a \ndistress signal\n.\n\n\nYour handheld device must still not be working\
        \ properly; the packets from the distress signal got decoded \nout of order\n\
        . You'll need to re-order the list of received packets (your puzzle input)\
        \ to decode the message.\n\n\nYour list consists of pairs of packets; pairs\
        \ are separated by a blank line. You need to identify \nhow many pairs of\
        \ packets are in the right order\n.\n\n\nFor example:\n\n\n[1,1,3,1,1]\n[1,1,5,1,1]\n\
        \n[[1],[2,3,4]]\n[[1],4]\n\n[9]\n[[8,7,6]]\n\n[[4,4],4,4]\n[[4,4],4,4,4]\n\
        \n[7,7,7,7]\n[7,7,7]\n\n[]\n[3]\n\n[[[]]]\n[[]]\n\n[1,[2,[3,[4,[5,6,7]]]],8,9]\n\
        [1,[2,[3,[4,[5,6,0]]]],8,9]\n\n\n\nPacket data consists of lists and integers.\n\
        \ Each list starts with \n[\n, ends with \n]\n, and contains zero or more\
        \ comma-separated values (either integers or other lists). Each packet is\
        \ always a list and appears on its own line.\n\n\nWhen comparing two values,\
        \ the first value is called \nleft\n and the second value is called \nright\n\
        . Then:\n\n\n\n\nIf \nboth values are integers\n, the \nlower integer\n should\
        \ come first. If the left integer is lower than the right integer, the inputs\
        \ are in the right order. If the left integer is higher than the right integer,\
        \ the inputs are not in the right order. Otherwise, the inputs are the same\
        \ integer; continue checking the next part of the input.\n\n\nIf \nboth values\
        \ are lists\n, compare the first value of each list, then the second value,\
        \ and so on. If the left list runs out of items first, the inputs are in the\
        \ right order. If the right list runs out of items first, the inputs are not\
        \ in the right order. If the lists are the same length and no comparison makes\
        \ a decision about the order, continue checking the next part of the input.\n\
        \n\nIf \nexactly one value is an integer\n, convert the integer to a list\
        \ which contains that integer as its only value, then retry the comparison.\
        \ For example, if comparing \n[0,0,0]\n and \n2\n, convert the right value\
        \ to \n[2]\n (a list containing \n2\n); the result is then found by instead\
        \ comparing \n[0,0,0]\n and \n[2]\n.\n\n\n\n\nUsing these rules, you can determine\
        \ which of the pairs in the example are in the right order:\n\n\n== Pair 1\
        \ ==\n- Compare [1,1,3,1,1] vs [1,1,5,1,1]\n  - Compare 1 vs 1\n  - Compare\
        \ 1 vs 1\n  - Compare 3 vs 5\n    - Left side is smaller, so inputs are \n\
        in the right order\n\n\n== Pair 2 ==\n- Compare [[1],[2,3,4]] vs [[1],4]\n\
        \  - Compare [1] vs [1]\n    - Compare 1 vs 1\n  - Compare [2,3,4] vs 4\n\
        \    - Mixed types; convert right to [4] and retry comparison\n    - Compare\
        \ [2,3,4] vs [4]\n      - Compare 2 vs 4\n        - Left side is smaller,\
        \ so inputs are \nin the right order\n\n\n== Pair 3 ==\n- Compare [9] vs [[8,7,6]]\n\
        \  - Compare 9 vs [8,7,6]\n    - Mixed types; convert left to [9] and retry\
        \ comparison\n    - Compare [9] vs [8,7,6]\n      - Compare 9 vs 8\n     \
        \   - Right side is smaller, so inputs are \nnot\n in the right order\n\n\
        == Pair 4 ==\n- Compare [[4,4],4,4] vs [[4,4],4,4,4]\n  - Compare [4,4] vs\
        \ [4,4]\n    - Compare 4 vs 4\n    - Compare 4 vs 4\n  - Compare 4 vs 4\n\
        \  - Compare 4 vs 4\n  - Left side ran out of items, so inputs are \nin the\
        \ right order\n\n\n== Pair 5 ==\n- Compare [7,7,7,7] vs [7,7,7]\n  - Compare\
        \ 7 vs 7\n  - Compare 7 vs 7\n  - Compare 7 vs 7\n  - Right side ran out of\
        \ items, so inputs are \nnot\n in the right order\n\n== Pair 6 ==\n- Compare\
        \ [] vs [3]\n  - Left side ran out of items, so inputs are \nin the right\
        \ order\n\n\n== Pair 7 ==\n- Compare [[[]]] vs [[]]\n  - Compare [[]] vs []\n\
        \    - Right side ran out of items, so inputs are \nnot\n in the right order\n\
        \n== Pair 8 ==\n- Compare [1,[2,[3,[4,[5,6,7]]]],8,9] vs [1,[2,[3,[4,[5,6,0]]]],8,9]\n\
        \  - Compare 1 vs 1\n  - Compare [2,[3,[4,[5,6,7]]]] vs [2,[3,[4,[5,6,0]]]]\n\
        \    - Compare 2 vs 2\n    - Compare [3,[4,[5,6,7]]] vs [3,[4,[5,6,0]]]\n\
        \      - Compare 3 vs 3\n      - Compare [4,[5,6,7]] vs [4,[5,6,0]]\n    \
        \    - Compare 4 vs 4\n        - Compare [5,6,7] vs [5,6,0]\n          - Compare\
        \ 5 vs 5\n          - Compare 6 vs 6\n          - Compare 7 vs 0\n       \
        \     - Right side is smaller, so inputs are \nnot\n in the right order\n\n\
        \n\nWhat are the indices of the pairs that are already \nin the right order\n\
        ? (The first pair has index 1, the second pair has index 2, and so on.) In\
        \ the above example, the pairs in the right order are 1, 2, 4, and 6; the\
        \ sum of these indices is \n13\n.\n\n\nDetermine which pairs of packets are\
        \ already in the right order. \nWhat is the sum of the indices of those pairs?"
      part2: "--- Day 13: Distress Signal ---\nYou climb the hill and again try contacting\
        \ the Elves. However, you instead receive a signal you weren't expecting:\
        \ a \ndistress signal\n.\n\n\nYour handheld device must still not be working\
        \ properly; the packets from the distress signal got decoded \nout of order\n\
        . You'll need to re-order the list of received packets (your puzzle input)\
        \ to decode the message.\n\n\nYour list consists of pairs of packets; pairs\
        \ are separated by a blank line. You need to identify \nhow many pairs of\
        \ packets are in the right order\n.\n\n\nFor example:\n\n\n[1,1,3,1,1]\n[1,1,5,1,1]\n\
        \n[[1],[2,3,4]]\n[[1],4]\n\n[9]\n[[8,7,6]]\n\n[[4,4],4,4]\n[[4,4],4,4,4]\n\
        \n[7,7,7,7]\n[7,7,7]\n\n[]\n[3]\n\n[[[]]]\n[[]]\n\n[1,[2,[3,[4,[5,6,7]]]],8,9]\n\
        [1,[2,[3,[4,[5,6,0]]]],8,9]\n\n\n\nPacket data consists of lists and integers.\n\
        \ Each list starts with \n[\n, ends with \n]\n, and contains zero or more\
        \ comma-separated values (either integers or other lists). Each packet is\
        \ always a list and appears on its own line.\n\n\nWhen comparing two values,\
        \ the first value is called \nleft\n and the second value is called \nright\n\
        . Then:\n\n\n\n\nIf \nboth values are integers\n, the \nlower integer\n should\
        \ come first. If the left integer is lower than the right integer, the inputs\
        \ are in the right order. If the left integer is higher than the right integer,\
        \ the inputs are not in the right order. Otherwise, the inputs are the same\
        \ integer; continue checking the next part of the input.\n\n\nIf \nboth values\
        \ are lists\n, compare the first value of each list, then the second value,\
        \ and so on. If the left list runs out of items first, the inputs are in the\
        \ right order. If the right list runs out of items first, the inputs are not\
        \ in the right order. If the lists are the same length and no comparison makes\
        \ a decision about the order, continue checking the next part of the input.\n\
        \n\nIf \nexactly one value is an integer\n, convert the integer to a list\
        \ which contains that integer as its only value, then retry the comparison.\
        \ For example, if comparing \n[0,0,0]\n and \n2\n, convert the right value\
        \ to \n[2]\n (a list containing \n2\n); the result is then found by instead\
        \ comparing \n[0,0,0]\n and \n[2]\n.\n\n\n\n\nUsing these rules, you can determine\
        \ which of the pairs in the example are in the right order:\n\n\n== Pair 1\
        \ ==\n- Compare [1,1,3,1,1] vs [1,1,5,1,1]\n  - Compare 1 vs 1\n  - Compare\
        \ 1 vs 1\n  - Compare 3 vs 5\n    - Left side is smaller, so inputs are \n\
        in the right order\n\n\n== Pair 2 ==\n- Compare [[1],[2,3,4]] vs [[1],4]\n\
        \  - Compare [1] vs [1]\n    - Compare 1 vs 1\n  - Compare [2,3,4] vs 4\n\
        \    - Mixed types; convert right to [4] and retry comparison\n    - Compare\
        \ [2,3,4] vs [4]\n      - Compare 2 vs 4\n        - Left side is smaller,\
        \ so inputs are \nin the right order\n\n\n== Pair 3 ==\n- Compare [9] vs [[8,7,6]]\n\
        \  - Compare 9 vs [8,7,6]\n    - Mixed types; convert left to [9] and retry\
        \ comparison\n    - Compare [9] vs [8,7,6]\n      - Compare 9 vs 8\n     \
        \   - Right side is smaller, so inputs are \nnot\n in the right order\n\n\
        == Pair 4 ==\n- Compare [[4,4],4,4] vs [[4,4],4,4,4]\n  - Compare [4,4] vs\
        \ [4,4]\n    - Compare 4 vs 4\n    - Compare 4 vs 4\n  - Compare 4 vs 4\n\
        \  - Compare 4 vs 4\n  - Left side ran out of items, so inputs are \nin the\
        \ right order\n\n\n== Pair 5 ==\n- Compare [7,7,7,7] vs [7,7,7]\n  - Compare\
        \ 7 vs 7\n  - Compare 7 vs 7\n  - Compare 7 vs 7\n  - Right side ran out of\
        \ items, so inputs are \nnot\n in the right order\n\n== Pair 6 ==\n- Compare\
        \ [] vs [3]\n  - Left side ran out of items, so inputs are \nin the right\
        \ order\n\n\n== Pair 7 ==\n- Compare [[[]]] vs [[]]\n  - Compare [[]] vs []\n\
        \    - Right side ran out of items, so inputs are \nnot\n in the right order\n\
        \n== Pair 8 ==\n- Compare [1,[2,[3,[4,[5,6,7]]]],8,9] vs [1,[2,[3,[4,[5,6,0]]]],8,9]\n\
        \  - Compare 1 vs 1\n  - Compare [2,[3,[4,[5,6,7]]]] vs [2,[3,[4,[5,6,0]]]]\n\
        \    - Compare 2 vs 2\n    - Compare [3,[4,[5,6,7]]] vs [3,[4,[5,6,0]]]\n\
        \      - Compare 3 vs 3\n      - Compare [4,[5,6,7]] vs [4,[5,6,0]]\n    \
        \    - Compare 4 vs 4\n        - Compare [5,6,7] vs [5,6,0]\n          - Compare\
        \ 5 vs 5\n          - Compare 6 vs 6\n          - Compare 7 vs 0\n       \
        \     - Right side is smaller, so inputs are \nnot\n in the right order\n\n\
        \n\nWhat are the indices of the pairs that are already \nin the right order\n\
        ? (The first pair has index 1, the second pair has index 2, and so on.) In\
        \ the above example, the pairs in the right order are 1, 2, 4, and 6; the\
        \ sum of these indices is \n13\n.\n\n\nDetermine which pairs of packets are\
        \ already in the right order. \nWhat is the sum of the indices of those pairs?\n\
        \n--- Part Two ---\nNow, you just need to put \nall\n of the packets in the\
        \ right order. Disregard the blank lines in your list of received packets.\n\
        \n\nThe distress signal protocol also requires that you include two additional\
        \ \ndivider packets\n:\n\n\n[[2]]\n[[6]]\n\n\n\nUsing the same rules as before,\
        \ organize all packets - the ones in your list of received packets as well\
        \ as the two divider packets - into the correct order.\n\n\nFor the example\
        \ above, the result of putting the packets in the correct order is:\n\n\n\
        []\n[[]]\n[[[]]]\n[1,1,3,1,1]\n[1,1,5,1,1]\n[[1],[2,3,4]]\n[1,[2,[3,[4,[5,6,0]]]],8,9]\n\
        [1,[2,[3,[4,[5,6,7]]]],8,9]\n[[1],4]\n\n[[2]]\n\n[3]\n[[4,4],4,4]\n[[4,4],4,4,4]\n\
        \n[[6]]\n\n[7,7,7]\n[7,7,7,7]\n[[8,7,6]]\n[9]\n\n\n\nAfterward, locate the\
        \ divider packets. To find the \ndecoder key\n for this distress signal, you\
        \ need to determine the indices of the two divider packets and multiply them\
        \ together. (The first packet is at index 1, the second packet is at index\
        \ 2, and so on.) In this example, the divider packets are \n10th\n and \n\
        14th\n, and so the decoder key is \n140\n.\n\n\nOrganize all of the packets\
        \ into the correct order. \nWhat is the decoder key for the distress signal?"
    title: '--- Day 13: Distress Signal ---'
  14:
    answers:
      part1:
        correct: '715'
        wrong: []
      part2:
        correct: '25248'
        wrong: []
    input: '487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 ->
      491,27 -> 491,28 -> 493,28 -> 493,24 -> 493,28

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      468,147 -> 472,147

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      474,143 -> 478,143

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      495,48 -> 500,48

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      465,133 -> 465,135 -> 460,135 -> 460,138 -> 472,138 -> 472,135 -> 471,135 ->
      471,133

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      467,48 -> 472,48

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      465,51 -> 465,53 -> 459,53 -> 459,60 -> 468,60 -> 468,53 -> 467,53 -> 467,51

      476,91 -> 476,94 -> 473,94 -> 473,98 -> 487,98 -> 487,94 -> 481,94 -> 481,91

      485,113 -> 490,113

      465,133 -> 465,135 -> 460,135 -> 460,138 -> 472,138 -> 472,135 -> 471,135 ->
      471,133

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      468,143 -> 472,143

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      476,91 -> 476,94 -> 473,94 -> 473,98 -> 487,98 -> 487,94 -> 481,94 -> 481,91

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      484,31 -> 484,33 -> 483,33 -> 483,37 -> 496,37 -> 496,33 -> 488,33 -> 488,31

      477,107 -> 482,107

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      479,88 -> 484,88

      465,133 -> 465,135 -> 460,135 -> 460,138 -> 472,138 -> 472,135 -> 471,135 ->
      471,133

      476,42 -> 481,42

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      476,149 -> 476,150 -> 492,150

      484,31 -> 484,33 -> 483,33 -> 483,37 -> 496,37 -> 496,33 -> 488,33 -> 488,31

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      457,113 -> 462,113

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      480,147 -> 484,147

      463,107 -> 468,107

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      465,133 -> 465,135 -> 460,135 -> 460,138 -> 472,138 -> 472,135 -> 471,135 ->
      471,133

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      470,46 -> 475,46

      484,31 -> 484,33 -> 483,33 -> 483,37 -> 496,37 -> 496,33 -> 488,33 -> 488,31

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      465,51 -> 465,53 -> 459,53 -> 459,60 -> 468,60 -> 468,53 -> 467,53 -> 467,51

      476,91 -> 476,94 -> 473,94 -> 473,98 -> 487,98 -> 487,94 -> 481,94 -> 481,91

      465,51 -> 465,53 -> 459,53 -> 459,60 -> 468,60 -> 468,53 -> 467,53 -> 467,51

      472,88 -> 477,88

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      483,42 -> 488,42

      470,107 -> 475,107

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      474,147 -> 478,147

      465,51 -> 465,53 -> 459,53 -> 459,60 -> 468,60 -> 468,53 -> 467,53 -> 467,51

      479,40 -> 484,40

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      482,85 -> 487,85

      476,91 -> 476,94 -> 473,94 -> 473,98 -> 487,98 -> 487,94 -> 481,94 -> 481,91

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      491,46 -> 496,46

      476,91 -> 476,94 -> 473,94 -> 473,98 -> 487,98 -> 487,94 -> 481,94 -> 481,91

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      484,31 -> 484,33 -> 483,33 -> 483,37 -> 496,37 -> 496,33 -> 488,33 -> 488,31

      484,31 -> 484,33 -> 483,33 -> 483,37 -> 496,37 -> 496,33 -> 488,33 -> 488,31

      488,48 -> 493,48

      492,14 -> 492,15 -> 509,15 -> 509,14

      461,116 -> 461,117 -> 468,117 -> 468,116

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      461,116 -> 461,117 -> 468,117 -> 468,116

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      465,133 -> 465,135 -> 460,135 -> 460,138 -> 472,138 -> 472,135 -> 471,135 ->
      471,133

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      486,88 -> 491,88

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      476,91 -> 476,94 -> 473,94 -> 473,98 -> 487,98 -> 487,94 -> 481,94 -> 481,91

      487,44 -> 492,44

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      481,110 -> 486,110

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      478,82 -> 483,82

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      473,104 -> 478,104

      465,133 -> 465,135 -> 460,135 -> 460,138 -> 472,138 -> 472,135 -> 471,135 ->
      471,133

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      467,110 -> 472,110

      475,85 -> 480,85

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      465,51 -> 465,53 -> 459,53 -> 459,60 -> 468,60 -> 468,53 -> 467,53 -> 467,51

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      460,110 -> 465,110

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      492,14 -> 492,15 -> 509,15 -> 509,14

      473,44 -> 478,44

      484,31 -> 484,33 -> 483,33 -> 483,37 -> 496,37 -> 496,33 -> 488,33 -> 488,31

      462,147 -> 466,147

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      477,145 -> 481,145

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      471,113 -> 476,113

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      464,113 -> 469,113

      465,51 -> 465,53 -> 459,53 -> 459,60 -> 468,60 -> 468,53 -> 467,53 -> 467,51

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      461,116 -> 461,117 -> 468,117 -> 468,116

      477,46 -> 482,46

      484,46 -> 489,46

      484,31 -> 484,33 -> 483,33 -> 483,37 -> 496,37 -> 496,33 -> 488,33 -> 488,31

      471,141 -> 475,141

      487,28 -> 487,26 -> 487,28 -> 489,28 -> 489,26 -> 489,28 -> 491,28 -> 491,27
      -> 491,28 -> 493,28 -> 493,24 -> 493,28

      474,48 -> 479,48

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      465,51 -> 465,53 -> 459,53 -> 459,60 -> 468,60 -> 468,53 -> 467,53 -> 467,51

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      492,14 -> 492,15 -> 509,15 -> 509,14

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      476,149 -> 476,150 -> 492,150

      464,66 -> 472,66

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      474,110 -> 479,110

      478,113 -> 483,113

      465,133 -> 465,135 -> 460,135 -> 460,138 -> 472,138 -> 472,135 -> 471,135 ->
      471,133

      465,145 -> 469,145

      451,130 -> 451,122 -> 451,130 -> 453,130 -> 453,120 -> 453,130 -> 455,130 ->
      455,125 -> 455,130 -> 457,130 -> 457,125 -> 457,130 -> 459,130 -> 459,122 ->
      459,130 -> 461,130 -> 461,126 -> 461,130 -> 463,130 -> 463,124 -> 463,130 ->
      465,130 -> 465,129 -> 465,130 -> 467,130 -> 467,127 -> 467,130

      471,145 -> 475,145

      480,44 -> 485,44

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      469,101 -> 474,101

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      464,79 -> 464,72 -> 464,79 -> 466,79 -> 466,69 -> 466,79 -> 468,79 -> 468,72
      -> 468,79 -> 470,79 -> 470,69 -> 470,79 -> 472,79 -> 472,70 -> 472,79 -> 474,79
      -> 474,72 -> 474,79 -> 476,79 -> 476,72 -> 476,79 -> 478,79 -> 478,75 -> 478,79
      -> 480,79 -> 480,75 -> 480,79

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      476,91 -> 476,94 -> 473,94 -> 473,98 -> 487,98 -> 487,94 -> 481,94 -> 481,91

      484,163 -> 484,162 -> 484,163 -> 486,163 -> 486,154 -> 486,163 -> 488,163 ->
      488,162 -> 488,163 -> 490,163 -> 490,159 -> 490,163 -> 492,163 -> 492,153 ->
      492,163 -> 494,163 -> 494,162 -> 494,163 -> 496,163 -> 496,159 -> 496,163 ->
      498,163 -> 498,161 -> 498,163 -> 500,163 -> 500,160 -> 500,163

      481,48 -> 486,48

      466,104 -> 471,104'
    parts:
      part1: "--- Day 14: Regolith Reservoir ---\nThe distress signal leads you to\
        \ a giant waterfall! Actually, hang on - the signal seems like it's coming\
        \ from the waterfall itself, and that doesn't make any sense. However, you\
        \ do notice a little path that leads \nbehind\n the waterfall.\n\n\nCorrection:\
        \ the distress signal leads you behind a giant waterfall! There seems to be\
        \ a large cave system here, and the signal definitely leads further inside.\n\
        \n\nAs you begin to make your way deeper underground, you feel the ground\
        \ rumble for a moment. Sand begins pouring into the cave! If you don't quickly\
        \ figure out where the sand is going, you could quickly become trapped!\n\n\
        \nFortunately, your \nfamiliarity\n with analyzing the path of falling material\
        \ will come in handy here. You scan a two-dimensional vertical slice of the\
        \ cave above you (your puzzle input) and discover that it is mostly \nair\n\
        \ with structures made of \nrock\n.\n\n\nYour scan traces the path of each\
        \ solid rock structure and reports the \nx,y\n coordinates that form the shape\
        \ of the path, where \nx\n represents distance to the right and \ny\n represents\
        \ distance down. Each path appears as a single line of text in your scan.\
        \ After the first point of each path, each point indicates the end of a straight\
        \ horizontal or vertical line to be drawn from the previous point. For example:\n\
        \n\n498,4 -> 498,6 -> 496,6\n503,4 -> 502,4 -> 502,9 -> 494,9\n\n\n\nThis\
        \ scan means that there are two paths of rock; the first path consists of\
        \ two straight lines, and the second path consists of three straight lines.\
        \ (Specifically, the first path consists of a line of rock from \n498,4\n\
        \ through \n498,6\n and another line of rock from \n498,6\n through \n496,6\n\
        .)\n\n\nThe sand is pouring into the cave from point \n500,0\n.\n\n\nDrawing\
        \ rock as \n#\n, air as \n.\n, and the source of the sand as \n+\n, this becomes:\n\
        \n\n\n  4     5  5\n  9     0  0\n  4     0  3\n0 ......+...\n1 ..........\n\
        2 ..........\n3 ..........\n4 ....#...##\n5 ....#...#.\n6 ..###...#.\n7 ........#.\n\
        8 ........#.\n9 #########.\n\n\n\nSand is produced \none unit at a time\n\
        , and the next unit of sand is not produced until the previous unit of sand\
        \ \ncomes to rest\n. A unit of sand is large enough to fill one tile of air\
        \ in your scan.\n\n\nA unit of sand always falls \ndown one step\n if possible.\
        \ If the tile immediately below is blocked (by rock or sand), the unit of\
        \ sand attempts to instead move diagonally \none step down and to the left\n\
        . If that tile is blocked, the unit of sand attempts to instead move diagonally\
        \ \none step down and to the right\n. Sand keeps moving as long as it is able\
        \ to do so, at each step trying to move down, then down-left, then down-right.\
        \ If all three possible destinations are blocked, the unit of sand \ncomes\
        \ to rest\n and no longer moves, at which point the next unit of sand is created\
        \ back at the source.\n\n\nSo, drawing sand that has come to rest as \no\n\
        , the first unit of sand simply falls straight down and then stops:\n\n\n\
        ......+...\n..........\n..........\n..........\n....#...##\n....#...#.\n..###...#.\n\
        ........#.\n......\no\n.#.\n#########.\n\n\n\nThe second unit of sand then\
        \ falls straight down, lands on the first one, and then comes to rest to its\
        \ left:\n\n\n......+...\n..........\n..........\n..........\n....#...##\n\
        ....#...#.\n..###...#.\n........#.\n.....oo.#.\n#########.\n\n\n\nAfter a\
        \ total of five units of sand have come to rest, they form this pattern:\n\
        \n\n......+...\n..........\n..........\n..........\n....#...##\n....#...#.\n\
        ..###...#.\n......o.#.\n....oooo#.\n#########.\n\n\n\nAfter a total of 22\
        \ units of sand:\n\n\n......+...\n..........\n......o...\n.....ooo..\n....#ooo##\n\
        ....#ooo#.\n..###ooo#.\n....oooo#.\n...ooooo#.\n#########.\n\n\n\nFinally,\
        \ only two more units of sand can possibly come to rest:\n\n\n......+...\n\
        ..........\n......o...\n.....ooo..\n....#ooo##\n...\no\n#ooo#.\n..###ooo#.\n\
        ....oooo#.\n.\no\n.ooooo#.\n#########.\n\n\n\nOnce all \n24\n units of sand\
        \ shown above have come to rest, all further sand flows out the bottom, falling\
        \ into the endless void. Just for fun, the path any new sand takes before\
        \ falling forever is shown here with \n~\n:\n\n\n.......+...\n.......~...\n\
        ......~o...\n.....~ooo..\n....~#ooo##\n...~o#ooo#.\n..~###ooo#.\n..~..oooo#.\n\
        .~o.ooooo#.\n~#########.\n~..........\n~..........\n~..........\n\n\n\nUsing\
        \ your scan, simulate the falling sand. \nHow many units of sand come to rest\
        \ before sand starts flowing into the abyss below?"
      part2: "--- Day 14: Regolith Reservoir ---\nThe distress signal leads you to\
        \ a giant waterfall! Actually, hang on - the signal seems like it's coming\
        \ from the waterfall itself, and that doesn't make any sense. However, you\
        \ do notice a little path that leads \nbehind\n the waterfall.\n\n\nCorrection:\
        \ the distress signal leads you behind a giant waterfall! There seems to be\
        \ a large cave system here, and the signal definitely leads further inside.\n\
        \n\nAs you begin to make your way deeper underground, you feel the ground\
        \ rumble for a moment. Sand begins pouring into the cave! If you don't quickly\
        \ figure out where the sand is going, you could quickly become trapped!\n\n\
        \nFortunately, your \nfamiliarity\n with analyzing the path of falling material\
        \ will come in handy here. You scan a two-dimensional vertical slice of the\
        \ cave above you (your puzzle input) and discover that it is mostly \nair\n\
        \ with structures made of \nrock\n.\n\n\nYour scan traces the path of each\
        \ solid rock structure and reports the \nx,y\n coordinates that form the shape\
        \ of the path, where \nx\n represents distance to the right and \ny\n represents\
        \ distance down. Each path appears as a single line of text in your scan.\
        \ After the first point of each path, each point indicates the end of a straight\
        \ horizontal or vertical line to be drawn from the previous point. For example:\n\
        \n\n498,4 -> 498,6 -> 496,6\n503,4 -> 502,4 -> 502,9 -> 494,9\n\n\n\nThis\
        \ scan means that there are two paths of rock; the first path consists of\
        \ two straight lines, and the second path consists of three straight lines.\
        \ (Specifically, the first path consists of a line of rock from \n498,4\n\
        \ through \n498,6\n and another line of rock from \n498,6\n through \n496,6\n\
        .)\n\n\nThe sand is pouring into the cave from point \n500,0\n.\n\n\nDrawing\
        \ rock as \n#\n, air as \n.\n, and the source of the sand as \n+\n, this becomes:\n\
        \n\n\n  4     5  5\n  9     0  0\n  4     0  3\n0 ......+...\n1 ..........\n\
        2 ..........\n3 ..........\n4 ....#...##\n5 ....#...#.\n6 ..###...#.\n7 ........#.\n\
        8 ........#.\n9 #########.\n\n\n\nSand is produced \none unit at a time\n\
        , and the next unit of sand is not produced until the previous unit of sand\
        \ \ncomes to rest\n. A unit of sand is large enough to fill one tile of air\
        \ in your scan.\n\n\nA unit of sand always falls \ndown one step\n if possible.\
        \ If the tile immediately below is blocked (by rock or sand), the unit of\
        \ sand attempts to instead move diagonally \none step down and to the left\n\
        . If that tile is blocked, the unit of sand attempts to instead move diagonally\
        \ \none step down and to the right\n. Sand keeps moving as long as it is able\
        \ to do so, at each step trying to move down, then down-left, then down-right.\
        \ If all three possible destinations are blocked, the unit of sand \ncomes\
        \ to rest\n and no longer moves, at which point the next unit of sand is created\
        \ back at the source.\n\n\nSo, drawing sand that has come to rest as \no\n\
        , the first unit of sand simply falls straight down and then stops:\n\n\n\
        ......+...\n..........\n..........\n..........\n....#...##\n....#...#.\n..###...#.\n\
        ........#.\n......\no\n.#.\n#########.\n\n\n\nThe second unit of sand then\
        \ falls straight down, lands on the first one, and then comes to rest to its\
        \ left:\n\n\n......+...\n..........\n..........\n..........\n....#...##\n\
        ....#...#.\n..###...#.\n........#.\n.....oo.#.\n#########.\n\n\n\nAfter a\
        \ total of five units of sand have come to rest, they form this pattern:\n\
        \n\n......+...\n..........\n..........\n..........\n....#...##\n....#...#.\n\
        ..###...#.\n......o.#.\n....oooo#.\n#########.\n\n\n\nAfter a total of 22\
        \ units of sand:\n\n\n......+...\n..........\n......o...\n.....ooo..\n....#ooo##\n\
        ....#ooo#.\n..###ooo#.\n....oooo#.\n...ooooo#.\n#########.\n\n\n\nFinally,\
        \ only two more units of sand can possibly come to rest:\n\n\n......+...\n\
        ..........\n......o...\n.....ooo..\n....#ooo##\n...\no\n#ooo#.\n..###ooo#.\n\
        ....oooo#.\n.\no\n.ooooo#.\n#########.\n\n\n\nOnce all \n24\n units of sand\
        \ shown above have come to rest, all further sand flows out the bottom, falling\
        \ into the endless void. Just for fun, the path any new sand takes before\
        \ falling forever is shown here with \n~\n:\n\n\n.......+...\n.......~...\n\
        ......~o...\n.....~ooo..\n....~#ooo##\n...~o#ooo#.\n..~###ooo#.\n..~..oooo#.\n\
        .~o.ooooo#.\n~#########.\n~..........\n~..........\n~..........\n\n\n\nUsing\
        \ your scan, simulate the falling sand. \nHow many units of sand come to rest\
        \ before sand starts flowing into the abyss below?\n\n--- Part Two ---\nYou\
        \ realize you misread the scan. There isn't an \nendless void\n at the bottom\
        \ of the scan - there's floor, and you're standing on it!\n\n\nYou don't have\
        \ time to scan the floor, so assume the floor is an infinite horizontal line\
        \ with a \ny\n coordinate equal to \ntwo plus the highest \ny\n coordinate\n\
        \ of any point in your scan.\n\n\nIn the example above, the highest \ny\n\
        \ coordinate of any point is \n9\n, and so the floor is at \ny=11\n. (This\
        \ is as if your scan contained one extra rock path like \n-infinity,11 ->\
        \ infinity,11\n.) With the added floor, the example above now looks like this:\n\
        \n\n        ...........+........\n        ....................\n        ....................\n\
        \        ....................\n        .........#...##.....\n        .........#...#......\n\
        \        .......###...#......\n        .............#......\n        .............#......\n\
        \        .....#########......\n        ....................\n<-- etc ####################\
        \ etc -->\n\n\n\nTo find somewhere safe to stand, you'll need to simulate\
        \ falling sand until a unit of sand comes to rest at \n500,0\n, blocking the\
        \ source entirely and stopping the flow of sand into the cave. In the example\
        \ above, the situation finally looks like this after \n93\n units of sand\
        \ come to rest:\n\n\n............o............\n...........ooo...........\n\
        ..........ooooo..........\n.........ooooooo.........\n........oo#ooo##o........\n\
        .......ooo#ooo#ooo.......\n......oo###ooo#oooo......\n.....oooo.oooo#ooooo.....\n\
        ....oooooooooo#oooooo....\n...ooo#########ooooooo...\n..ooooo.......ooooooooo..\n\
        #########################\n\n\n\nUsing your scan, simulate the falling sand\
        \ until the source of the sand becomes blocked. \nHow many units of sand come\
        \ to rest?"
    title: '--- Day 14: Regolith Reservoir ---'
  15:
    answers:
      part1:
        correct: '4985193'
        wrong: []
      part2:
        correct: null
        wrong: []
    input: 'Sensor at x=3523437, y=2746095: closest beacon is at x=3546605, y=2721324

      Sensor at x=282831, y=991087: closest beacon is at x=743030, y=-87472

      Sensor at x=1473740, y=3283213: closest beacon is at x=1846785, y=3045894

      Sensor at x=1290563, y=46916: closest beacon is at x=743030, y=-87472

      Sensor at x=3999451, y=15688: closest beacon is at x=3283637, y=-753607

      Sensor at x=1139483, y=2716286: closest beacon is at x=1846785, y=3045894

      Sensor at x=3137614, y=2929987: closest beacon is at x=3392051, y=3245262

      Sensor at x=2667083, y=2286333: closest beacon is at x=2126582, y=2282363

      Sensor at x=3699264, y=2920959: closest beacon is at x=3546605, y=2721324

      Sensor at x=3280991, y=2338486: closest beacon is at x=3546605, y=2721324

      Sensor at x=833202, y=92320: closest beacon is at x=743030, y=-87472

      Sensor at x=3961416, y=2485266: closest beacon is at x=3546605, y=2721324

      Sensor at x=3002132, y=3500345: closest beacon is at x=3392051, y=3245262

      Sensor at x=2482128, y=2934657: closest beacon is at x=1846785, y=3045894

      Sensor at x=111006, y=2376713: closest beacon is at x=354526, y=3163958

      Sensor at x=424237, y=2718408: closest beacon is at x=354526, y=3163958

      Sensor at x=3954504, y=3606495: closest beacon is at x=3392051, y=3245262

      Sensor at x=2275050, y=2067292: closest beacon is at x=2333853, y=2000000

      Sensor at x=1944813, y=2557878: closest beacon is at x=2126582, y=2282363

      Sensor at x=2227536, y=2152792: closest beacon is at x=2126582, y=2282363

      Sensor at x=3633714, y=1229193: closest beacon is at x=3546605, y=2721324

      Sensor at x=1446898, y=1674290: closest beacon is at x=2333853, y=2000000

      Sensor at x=3713985, y=2744503: closest beacon is at x=3546605, y=2721324

      Sensor at x=2281504, y=3945638: closest beacon is at x=1846785, y=3045894

      Sensor at x=822012, y=3898848: closest beacon is at x=354526, y=3163958

      Sensor at x=89817, y=3512049: closest beacon is at x=354526, y=3163958

      Sensor at x=2594265, y=638715: closest beacon is at x=2333853, y=2000000'
    parts:
      part1: "--- Day 15: Beacon Exclusion Zone ---\nYou feel the ground rumble again\
        \ as the distress signal leads you to a large network of subterranean tunnels.\
        \ You don't have time to search them all, but you don't need to: your pack\
        \ contains a set of deployable \nsensors\n that you imagine were originally\
        \ built to locate lost Elves.\n\n\nThe sensors aren't very powerful, but that's\
        \ okay; your handheld device indicates that you're close enough to the source\
        \ of the distress signal to use them. You pull the emergency sensor system\
        \ out of your pack, hit the big button on top, and the sensors zoom off down\
        \ the tunnels.\n\n\nOnce a sensor finds a spot it thinks will give it a good\
        \ reading, it attaches itself to a hard surface and begins monitoring for\
        \ the nearest signal source \nbeacon\n. Sensors and beacons always exist at\
        \ integer coordinates. Each sensor knows its own position and can \ndetermine\
        \ the position of a beacon precisely\n; however, sensors can only lock on\
        \ to the one beacon \nclosest to the sensor\n as measured by the \nManhattan\
        \ distance\n. (There is never a tie where two beacons are the same distance\
        \ to a sensor.)\n\n\nIt doesn't take long for the sensors to report back their\
        \ positions and closest beacons (your puzzle input). For example:\n\n\nSensor\
        \ at x=2, y=18: closest beacon is at x=-2, y=15\nSensor at x=9, y=16: closest\
        \ beacon is at x=10, y=16\nSensor at x=13, y=2: closest beacon is at x=15,\
        \ y=3\nSensor at x=12, y=14: closest beacon is at x=10, y=16\nSensor at x=10,\
        \ y=20: closest beacon is at x=10, y=16\nSensor at x=14, y=17: closest beacon\
        \ is at x=10, y=16\nSensor at x=8, y=7: closest beacon is at x=2, y=10\nSensor\
        \ at x=2, y=0: closest beacon is at x=2, y=10\nSensor at x=0, y=11: closest\
        \ beacon is at x=2, y=10\nSensor at x=20, y=14: closest beacon is at x=25,\
        \ y=17\nSensor at x=17, y=20: closest beacon is at x=21, y=22\nSensor at x=16,\
        \ y=7: closest beacon is at x=15, y=3\nSensor at x=14, y=3: closest beacon\
        \ is at x=15, y=3\nSensor at x=20, y=1: closest beacon is at x=15, y=3\n\n\
        \n\nSo, consider the sensor at \n2,18\n; the closest beacon to it is at \n\
        -2,15\n. For the sensor at \n9,16\n, the closest beacon to it is at \n10,16\n\
        .\n\n\nDrawing sensors as \nS\n and beacons as \nB\n, the above arrangement\
        \ of sensors and beacons looks like this:\n\n\n               1    1    2\
        \    2\n     0    5    0    5    0    5\n 0 ....S.......................\n\
        \ 1 ......................S.....\n 2 ...............S............\n 3 ................SB..........\n\
        \ 4 ............................\n 5 ............................\n 6 ............................\n\
        \ 7 ..........S.......S.........\n 8 ............................\n 9 ............................\n\
        10 ....B.......................\n11 ..S.........................\n12 ............................\n\
        13 ............................\n14 ..............S.......S.....\n15 B...........................\n\
        16 ...........SB...............\n17 ................S..........B\n18 ....S.......................\n\
        19 ............................\n20 ............S......S........\n21 ............................\n\
        22 .......................B....\n\n\n\nThis isn't necessarily a comprehensive\
        \ map of all beacons in the area, though. Because each sensor only identifies\
        \ its closest beacon, if a sensor detects a beacon, you know there are no\
        \ other beacons that close or closer to that sensor. There could still be\
        \ beacons that just happen to not be the closest beacon to any sensor. Consider\
        \ the sensor at \n8,7\n:\n\n\n               1    1    2    2\n     0    5\
        \    0    5    0    5\n-2 ..........#.................\n-1 .........###................\n\
        \ 0 ....S...#####...............\n 1 .......#######........S.....\n 2 ......#########S............\n\
        \ 3 .....###########SB..........\n 4 ....#############...........\n 5 ...###############..........\n\
        \ 6 ..#################.........\n 7 .#########\nS\n#######S#........\n 8\
        \ ..#################.........\n 9 ...###############..........\n10 ....\n\
        B\n############...........\n11 ..S..###########............\n12 ......#########.............\n\
        13 .......#######..............\n14 ........#####.S.......S.....\n15 B........###................\n\
        16 ..........#SB...............\n17 ................S..........B\n18 ....S.......................\n\
        19 ............................\n20 ............S......S........\n21 ............................\n\
        22 .......................B....\n\n\n\nThis sensor's closest beacon is at\
        \ \n2,10\n, and so you know there are no beacons that close or closer (in\
        \ any positions marked \n#\n).\n\n\nNone of the detected beacons seem to be\
        \ producing the distress signal, so you'll need to \nwork out\n where the\
        \ distress beacon is by working out where it \nisn't\n. For now, keep things\
        \ simple by counting the positions where a beacon cannot possibly be along\
        \ just a single row.\n\n\nSo, suppose you have an arrangement of beacons and\
        \ sensors like in the example above and, just in the row where \ny=10\n, you'd\
        \ like to count the number of positions a beacon cannot possibly exist. The\
        \ coverage from all sensors near that row looks like this:\n\n\n         \
        \        1    1    2    2\n       0    5    0    5    0    5\n 9 ...#########################...\n\
        \n10 ..####B######################..\n\n11 .###S#############.###########.\n\
        \n\n\nIn this example, in the row where \ny=10\n, there are \n26\n positions\
        \ where a beacon cannot be present.\n\n\nConsult the report from the sensors\
        \ you just deployed. \nIn the row where \ny=2000000\n, how many positions\
        \ cannot contain a beacon?"
      part2: "--- Day 15: Beacon Exclusion Zone ---\nYou feel the ground rumble again\
        \ as the distress signal leads you to a large network of subterranean tunnels.\
        \ You don't have time to search them all, but you don't need to: your pack\
        \ contains a set of deployable \nsensors\n that you imagine were originally\
        \ built to locate lost Elves.\n\n\nThe sensors aren't very powerful, but that's\
        \ okay; your handheld device indicates that you're close enough to the source\
        \ of the distress signal to use them. You pull the emergency sensor system\
        \ out of your pack, hit the big button on top, and the sensors zoom off down\
        \ the tunnels.\n\n\nOnce a sensor finds a spot it thinks will give it a good\
        \ reading, it attaches itself to a hard surface and begins monitoring for\
        \ the nearest signal source \nbeacon\n. Sensors and beacons always exist at\
        \ integer coordinates. Each sensor knows its own position and can \ndetermine\
        \ the position of a beacon precisely\n; however, sensors can only lock on\
        \ to the one beacon \nclosest to the sensor\n as measured by the \nManhattan\
        \ distance\n. (There is never a tie where two beacons are the same distance\
        \ to a sensor.)\n\n\nIt doesn't take long for the sensors to report back their\
        \ positions and closest beacons (your puzzle input). For example:\n\n\nSensor\
        \ at x=2, y=18: closest beacon is at x=-2, y=15\nSensor at x=9, y=16: closest\
        \ beacon is at x=10, y=16\nSensor at x=13, y=2: closest beacon is at x=15,\
        \ y=3\nSensor at x=12, y=14: closest beacon is at x=10, y=16\nSensor at x=10,\
        \ y=20: closest beacon is at x=10, y=16\nSensor at x=14, y=17: closest beacon\
        \ is at x=10, y=16\nSensor at x=8, y=7: closest beacon is at x=2, y=10\nSensor\
        \ at x=2, y=0: closest beacon is at x=2, y=10\nSensor at x=0, y=11: closest\
        \ beacon is at x=2, y=10\nSensor at x=20, y=14: closest beacon is at x=25,\
        \ y=17\nSensor at x=17, y=20: closest beacon is at x=21, y=22\nSensor at x=16,\
        \ y=7: closest beacon is at x=15, y=3\nSensor at x=14, y=3: closest beacon\
        \ is at x=15, y=3\nSensor at x=20, y=1: closest beacon is at x=15, y=3\n\n\
        \n\nSo, consider the sensor at \n2,18\n; the closest beacon to it is at \n\
        -2,15\n. For the sensor at \n9,16\n, the closest beacon to it is at \n10,16\n\
        .\n\n\nDrawing sensors as \nS\n and beacons as \nB\n, the above arrangement\
        \ of sensors and beacons looks like this:\n\n\n               1    1    2\
        \    2\n     0    5    0    5    0    5\n 0 ....S.......................\n\
        \ 1 ......................S.....\n 2 ...............S............\n 3 ................SB..........\n\
        \ 4 ............................\n 5 ............................\n 6 ............................\n\
        \ 7 ..........S.......S.........\n 8 ............................\n 9 ............................\n\
        10 ....B.......................\n11 ..S.........................\n12 ............................\n\
        13 ............................\n14 ..............S.......S.....\n15 B...........................\n\
        16 ...........SB...............\n17 ................S..........B\n18 ....S.......................\n\
        19 ............................\n20 ............S......S........\n21 ............................\n\
        22 .......................B....\n\n\n\nThis isn't necessarily a comprehensive\
        \ map of all beacons in the area, though. Because each sensor only identifies\
        \ its closest beacon, if a sensor detects a beacon, you know there are no\
        \ other beacons that close or closer to that sensor. There could still be\
        \ beacons that just happen to not be the closest beacon to any sensor. Consider\
        \ the sensor at \n8,7\n:\n\n\n               1    1    2    2\n     0    5\
        \    0    5    0    5\n-2 ..........#.................\n-1 .........###................\n\
        \ 0 ....S...#####...............\n 1 .......#######........S.....\n 2 ......#########S............\n\
        \ 3 .....###########SB..........\n 4 ....#############...........\n 5 ...###############..........\n\
        \ 6 ..#################.........\n 7 .#########\nS\n#######S#........\n 8\
        \ ..#################.........\n 9 ...###############..........\n10 ....\n\
        B\n############...........\n11 ..S..###########............\n12 ......#########.............\n\
        13 .......#######..............\n14 ........#####.S.......S.....\n15 B........###................\n\
        16 ..........#SB...............\n17 ................S..........B\n18 ....S.......................\n\
        19 ............................\n20 ............S......S........\n21 ............................\n\
        22 .......................B....\n\n\n\nThis sensor's closest beacon is at\
        \ \n2,10\n, and so you know there are no beacons that close or closer (in\
        \ any positions marked \n#\n).\n\n\nNone of the detected beacons seem to be\
        \ producing the distress signal, so you'll need to \nwork out\n where the\
        \ distress beacon is by working out where it \nisn't\n. For now, keep things\
        \ simple by counting the positions where a beacon cannot possibly be along\
        \ just a single row.\n\n\nSo, suppose you have an arrangement of beacons and\
        \ sensors like in the example above and, just in the row where \ny=10\n, you'd\
        \ like to count the number of positions a beacon cannot possibly exist. The\
        \ coverage from all sensors near that row looks like this:\n\n\n         \
        \        1    1    2    2\n       0    5    0    5    0    5\n 9 ...#########################...\n\
        \n10 ..####B######################..\n\n11 .###S#############.###########.\n\
        \n\n\nIn this example, in the row where \ny=10\n, there are \n26\n positions\
        \ where a beacon cannot be present.\n\n\nConsult the report from the sensors\
        \ you just deployed. \nIn the row where \ny=2000000\n, how many positions\
        \ cannot contain a beacon?\n\n--- Part Two ---\nYour handheld device indicates\
        \ that the distress signal is coming from a beacon nearby. The distress beacon\
        \ is not detected by any sensor, but the distress beacon must have \nx\n and\
        \ \ny\n coordinates each no lower than \n0\n and no larger than \n4000000\n\
        .\n\n\nTo isolate the distress beacon's signal, you need to determine its\
        \ \ntuning frequency\n, which can be found by multiplying its \nx\n coordinate\
        \ by \n4000000\n and then adding its \ny\n coordinate.\n\n\nIn the example\
        \ above, the search space is smaller: instead, the \nx\n and \ny\n coordinates\
        \ can each be at most \n20\n. With this reduced search area, there is only\
        \ a single position that could have a beacon: \nx=14, y=11\n. The tuning frequency\
        \ for this distress beacon is \n56000011\n.\n\n\nFind the only possible position\
        \ for the distress beacon. \nWhat is its tuning frequency?"
    title: '--- Day 15: Beacon Exclusion Zone ---'
  16:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: 'Valve RT has flow rate=0; tunnels lead to valves EN, LZ

      Valve VB has flow rate=0; tunnels lead to valves SZ, BF

      Valve AD has flow rate=0; tunnels lead to valves EB, JF

      Valve RE has flow rate=4; tunnels lead to valves QB, IF, XT, WF, KW

      Valve RL has flow rate=0; tunnels lead to valves DQ, LZ

      Valve OK has flow rate=0; tunnels lead to valves QH, BF

      Valve RV has flow rate=0; tunnels lead to valves IU, JF

      Valve TE has flow rate=0; tunnels lead to valves HE, XF

      Valve WW has flow rate=0; tunnels lead to valves QH, YZ

      Valve HB has flow rate=15; tunnel leads to valve OM

      Valve IY has flow rate=14; tunnels lead to valves UH, KW, BN, LW, UY

      Valve QF has flow rate=0; tunnels lead to valves JF, PL

      Valve YZ has flow rate=0; tunnels lead to valves JG, WW

      Valve QB has flow rate=0; tunnels lead to valves SP, RE

      Valve SO has flow rate=0; tunnels lead to valves QH, SZ

      Valve EB has flow rate=7; tunnels lead to valves IF, NH, AD, VI, DQ

      Valve VL has flow rate=0; tunnels lead to valves JF, YV

      Valve BF has flow rate=18; tunnels lead to valves OK, VB, OH, SX

      Valve UC has flow rate=0; tunnels lead to valves SC, YV

      Valve OQ has flow rate=0; tunnels lead to valves XT, AA

      Valve YV has flow rate=6; tunnels lead to valves YX, TT, VL, UC, NH

      Valve KJ has flow rate=0; tunnels lead to valves OH, JG

      Valve QH has flow rate=20; tunnels lead to valves SO, OK, WW

      Valve KW has flow rate=0; tunnels lead to valves RE, IY

      Valve PL has flow rate=0; tunnels lead to valves JG, QF

      Valve DQ has flow rate=0; tunnels lead to valves EB, RL

      Valve AA has flow rate=0; tunnels lead to valves YI, EN, UK, OQ, VI

      Valve XT has flow rate=0; tunnels lead to valves OQ, RE

      Valve SZ has flow rate=24; tunnels lead to valves VB, SO

      Valve IU has flow rate=25; tunnels lead to valves RV, HE, HQ

      Valve OM has flow rate=0; tunnels lead to valves NY, HB

      Valve YX has flow rate=0; tunnels lead to valves YV, SI

      Valve SX has flow rate=0; tunnels lead to valves ZB, BF

      Valve KD has flow rate=0; tunnels lead to valves XF, LW

      Valve SP has flow rate=0; tunnels lead to valves XF, QB

      Valve UY has flow rate=0; tunnels lead to valves UK, IY

      Valve XF has flow rate=22; tunnels lead to valves SP, TE, KD, NY

      Valve SC has flow rate=0; tunnels lead to valves LZ, UC

      Valve UK has flow rate=0; tunnels lead to valves UY, AA

      Valve LW has flow rate=0; tunnels lead to valves KD, IY

      Valve FL has flow rate=0; tunnels lead to valves BN, LZ

      Valve VI has flow rate=0; tunnels lead to valves AA, EB

      Valve HW has flow rate=0; tunnels lead to valves JF, CY

      Valve YI has flow rate=0; tunnels lead to valves AA, TT

      Valve HE has flow rate=0; tunnels lead to valves IU, TE

      Valve JG has flow rate=10; tunnels lead to valves PL, YZ, SI, KJ

      Valve BN has flow rate=0; tunnels lead to valves IY, FL

      Valve IF has flow rate=0; tunnels lead to valves EB, RE

      Valve JF has flow rate=19; tunnels lead to valves HW, QF, VL, RV, AD

      Valve SI has flow rate=0; tunnels lead to valves JG, YX

      Valve WF has flow rate=0; tunnels lead to valves LZ, RE

      Valve HQ has flow rate=0; tunnels lead to valves IU, UH

      Valve LZ has flow rate=5; tunnels lead to valves SC, FL, WF, RL, RT

      Valve UH has flow rate=0; tunnels lead to valves IY, HQ

      Valve CY has flow rate=21; tunnel leads to valve HW

      Valve NH has flow rate=0; tunnels lead to valves EB, YV

      Valve TT has flow rate=0; tunnels lead to valves YV, YI

      Valve OH has flow rate=0; tunnels lead to valves KJ, BF

      Valve EN has flow rate=0; tunnels lead to valves RT, AA

      Valve NY has flow rate=0; tunnels lead to valves OM, XF

      Valve ZB has flow rate=8; tunnel leads to valve SX'
    parts:
      part1: "--- Day 16: Proboscidea Volcanium ---\nThe sensors have led you to the\
        \ origin of the distress signal: yet another handheld device, just like the\
        \ one the Elves gave you. However, you don't see any Elves around; instead,\
        \ the device is surrounded by elephants! They must have gotten lost in these\
        \ tunnels, and one of the elephants apparently figured out how to turn on\
        \ the distress signal.\n\n\nThe ground rumbles again, much stronger this time.\
        \ What kind of cave is this, exactly? You scan the cave with your handheld\
        \ device; it reports mostly igneous rock, some ash, pockets of pressurized\
        \ gas, magma... this isn't just a cave, it's a volcano!\n\n\nYou need to get\
        \ the elephants out of here, quickly. Your device estimates that you have\
        \ \n30 minutes\n before the volcano erupts, so you don't have time to go back\
        \ out the way you came in.\n\n\nYou scan the cave for other options and discover\
        \ a network of pipes and pressure-release \nvalves\n. You aren't sure how\
        \ such a system got into a volcano, but you don't have time to complain; your\
        \ device produces a report (your puzzle input) of each valve's \nflow rate\n\
        \ if it were opened (in pressure per minute) and the tunnels you could use\
        \ to move between the valves.\n\n\nThere's even a valve in the room you and\
        \ the elephants are currently standing in labeled \nAA\n. You estimate it\
        \ will take you one minute to open a single valve and one minute to follow\
        \ any tunnel from one valve to another. What is the most pressure you could\
        \ release?\n\n\nFor example, suppose you had the following scan output:\n\n\
        \nValve AA has flow rate=0; tunnels lead to valves DD, II, BB\nValve BB has\
        \ flow rate=13; tunnels lead to valves CC, AA\nValve CC has flow rate=2; tunnels\
        \ lead to valves DD, BB\nValve DD has flow rate=20; tunnels lead to valves\
        \ CC, AA, EE\nValve EE has flow rate=3; tunnels lead to valves FF, DD\nValve\
        \ FF has flow rate=0; tunnels lead to valves EE, GG\nValve GG has flow rate=0;\
        \ tunnels lead to valves FF, HH\nValve HH has flow rate=22; tunnel leads to\
        \ valve GG\nValve II has flow rate=0; tunnels lead to valves AA, JJ\nValve\
        \ JJ has flow rate=21; tunnel leads to valve II\n\n\n\nAll of the valves begin\
        \ \nclosed\n. You start at valve \nAA\n, but it must be damaged or \njammed\n\
        \ or something: its flow rate is \n0\n, so there's no point in opening it.\
        \ However, you could spend one minute moving to valve \nBB\n and another minute\
        \ opening it; doing so would release pressure during the remaining \n28 minutes\n\
        \ at a flow rate of \n13\n, a total eventual pressure release of \n28 * 13\
        \ = \n364\n. Then, you could spend your third minute moving to valve \nCC\n\
        \ and your fourth minute opening it, providing an additional \n26 minutes\n\
        \ of eventual pressure release at a flow rate of \n2\n, or \n52\n total pressure\
        \ released by valve \nCC\n.\n\n\nMaking your way through the tunnels like\
        \ this, you could probably open many or all of the valves by the time 30 minutes\
        \ have elapsed. However, you need to release as much pressure as possible,\
        \ so you'll need to be methodical. Instead, consider this approach:\n\n\n\
        == Minute 1 ==\nNo valves are open.\nYou move to valve DD.\n\n== Minute 2\
        \ ==\nNo valves are open.\nYou open valve DD.\n\n== Minute 3 ==\nValve DD\
        \ is open, releasing \n20\n pressure.\nYou move to valve CC.\n\n== Minute\
        \ 4 ==\nValve DD is open, releasing \n20\n pressure.\nYou move to valve BB.\n\
        \n== Minute 5 ==\nValve DD is open, releasing \n20\n pressure.\nYou open valve\
        \ BB.\n\n== Minute 6 ==\nValves BB and DD are open, releasing \n33\n pressure.\n\
        You move to valve AA.\n\n== Minute 7 ==\nValves BB and DD are open, releasing\
        \ \n33\n pressure.\nYou move to valve II.\n\n== Minute 8 ==\nValves BB and\
        \ DD are open, releasing \n33\n pressure.\nYou move to valve JJ.\n\n== Minute\
        \ 9 ==\nValves BB and DD are open, releasing \n33\n pressure.\nYou open valve\
        \ JJ.\n\n== Minute 10 ==\nValves BB, DD, and JJ are open, releasing \n54\n\
        \ pressure.\nYou move to valve II.\n\n== Minute 11 ==\nValves BB, DD, and\
        \ JJ are open, releasing \n54\n pressure.\nYou move to valve AA.\n\n== Minute\
        \ 12 ==\nValves BB, DD, and JJ are open, releasing \n54\n pressure.\nYou move\
        \ to valve DD.\n\n== Minute 13 ==\nValves BB, DD, and JJ are open, releasing\
        \ \n54\n pressure.\nYou move to valve EE.\n\n== Minute 14 ==\nValves BB, DD,\
        \ and JJ are open, releasing \n54\n pressure.\nYou move to valve FF.\n\n==\
        \ Minute 15 ==\nValves BB, DD, and JJ are open, releasing \n54\n pressure.\n\
        You move to valve GG.\n\n== Minute 16 ==\nValves BB, DD, and JJ are open,\
        \ releasing \n54\n pressure.\nYou move to valve HH.\n\n== Minute 17 ==\nValves\
        \ BB, DD, and JJ are open, releasing \n54\n pressure.\nYou open valve HH.\n\
        \n== Minute 18 ==\nValves BB, DD, HH, and JJ are open, releasing \n76\n pressure.\n\
        You move to valve GG.\n\n== Minute 19 ==\nValves BB, DD, HH, and JJ are open,\
        \ releasing \n76\n pressure.\nYou move to valve FF.\n\n== Minute 20 ==\nValves\
        \ BB, DD, HH, and JJ are open, releasing \n76\n pressure.\nYou move to valve\
        \ EE.\n\n== Minute 21 ==\nValves BB, DD, HH, and JJ are open, releasing \n\
        76\n pressure.\nYou open valve EE.\n\n== Minute 22 ==\nValves BB, DD, EE,\
        \ HH, and JJ are open, releasing \n79\n pressure.\nYou move to valve DD.\n\
        \n== Minute 23 ==\nValves BB, DD, EE, HH, and JJ are open, releasing \n79\n\
        \ pressure.\nYou move to valve CC.\n\n== Minute 24 ==\nValves BB, DD, EE,\
        \ HH, and JJ are open, releasing \n79\n pressure.\nYou open valve CC.\n\n\
        == Minute 25 ==\nValves BB, CC, DD, EE, HH, and JJ are open, releasing \n\
        81\n pressure.\n\n== Minute 26 ==\nValves BB, CC, DD, EE, HH, and JJ are open,\
        \ releasing \n81\n pressure.\n\n== Minute 27 ==\nValves BB, CC, DD, EE, HH,\
        \ and JJ are open, releasing \n81\n pressure.\n\n== Minute 28 ==\nValves BB,\
        \ CC, DD, EE, HH, and JJ are open, releasing \n81\n pressure.\n\n== Minute\
        \ 29 ==\nValves BB, CC, DD, EE, HH, and JJ are open, releasing \n81\n pressure.\n\
        \n== Minute 30 ==\nValves BB, CC, DD, EE, HH, and JJ are open, releasing \n\
        81\n pressure.\n\n\n\nThis approach lets you release the most pressure possible\
        \ in 30 minutes with this valve layout, \n1651\n.\n\n\nWork out the steps\
        \ to release the most pressure in 30 minutes. \nWhat is the most pressure\
        \ you can release?"
      part2: ''
    title: '--- Day 16: Proboscidea Volcanium ---'
  17:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: '>>><>>>><<<>>>><<>><>>><<<<>>>><<<<>>><<<>><>>>><>>><><<<><<<>>><>>><<<><<<>>><<>>>><<<><<<<><<<<>>><>>><<<>>>><>><<<>>><<<<>><>>>><<<><<>><><<<><<>>><<<>><<>>><>>>><<<>>>><<<>><<<<>>><>>><<<<>><<<><<<<>>><>>><>>>><<<<><<<<>>><<>><<<<>>>><><<>><<<<>>>><<<<>>><<>>><>><>><>><<<<>>>><<>><<<>>>><>>><<>>><<><<<>><<<<>>><<<<>>>><<<<>>>><<<<>>><<>><<<<>><<<><>><><<>>>><>>>><>><<<<>>>><<<>>><>><<>><<<<>><<<<>>><<<<>><<<<>>><<<>><<><<<<><<>><>>><<<<><>>><<><<>><<>>>><<<<>>>><>>><<<<>>>><<<>><>>>><<<<><>>><<<><<<<>>><>>>><<>>><<>><<<<>><<<>>>><<<<>>><>>><<<<>>><<>><<<<>>><<<>><<>>><<<<><<<>><<>><>>>><<>>><><>>><>>>><<>><<>><<><><<<<>>>><<>><<<><<<>>>><<<>>><<<>>><>><<<<><<>><<<<>><><<>><>><>><<<>><><<>><<<<>>><>><<<>>>><><>>>><<<<>>><<<><<<>>>><<<>>><<<<>><<<>>>><<<>>><>>>><><<<>>><<>><><<<<>>>><<><<>>>><><>><<>>><<>>><<<>><<<>>><<<>>>><<<<>><<<>>><<<<>>><<<<>>><<<<>>><<<<>>><<<>><<>>><>>>><<<>>><<<<><<<<>>>><<<<><<<>>><<><<>>>><>>>><<<<>><><<<>><<<><<<<>><<<>>>><<>>>><<>>>><>>><<>><<<>><<>>><<<><<<<>><<>>>><<>>>><<>>>><<<<>>>><<>>>><<<><<>><<>><<>>><<<>>>><>>>><<<>>>><<<<>>><>>><<<>>>><<<<><>><>>><<>>>><<<<>><<<<>><<<<>>><<<<>>><><<>><<>>>><>>>><<>><<<>>>><<<><>><<<<>>><<<<>>><>>>><<<<>>><>><<><<>>>><<><<><>>><<<<>><>>>><<<<>><<>>><<>>><<>>>><>>><<><><>>>><>>><<<<>><<<<>>><>><<<<>>><>>><>><<<<>>>><<><<<>>>><<<<>>>><<>><<>>><<<<>>><<>>><<<>><<><<<<>><<<>>>><<<<>>><<<>><<<>>>><<<>>><<<<><<<>><>>>><<<><<<<>>><<<<><<<<>><>>>><<<>>><<<>>>><<<<>>>><<<<>>><<<>><<>><<<><<<<><<>>>><<<<>>>><>><>><<<>>><>><<><<<<>><<<>>><>>><<><<<<>>>><>><<<<><<<<><<<<>>><<><<>>>><>><<<><<>>>><>><<<<>>><<<<>>>><<>>><<<<>><<<<>>>><<<<>>>><<<<>><>><>><<<<>>>><<<>>><<>>><><<>>><<<>>>><<<>>>><<>>><<<<>>><<<><<<<>>>><<>>><<<<>><<<>>>><<<>>><<>>><<<<><>><<<>><><<>>>><<>><<><>><><>>>><>>><<<<>><<<<>><><<<<>>>><><<<<>>><<<<>>>><<<<>>><<<>><<>>><<<<>><<<<>><<>>>><<>>>><<<>><<<>>><<<<>><<>>>><<<<><<<<>>>><>>><<<<>>>><<<><<><>><<>>><<<<><>>>><>>>><<<>><<<<>><<>><<<<>>><<>>><>><<<>>><<<>><>>>><<>>><<<>>><<>>>><<>>>><><<<>>><<<<><>>>><<><<<<>>>><<<>><<>><<<<>>>><>>><<<>><<<>>><>>><<>>>><<<><<>>><<<>>>><>>><<<<>><<<<><<<>>>><<>>><<<<>><>>>><>><<<<>><<<>>><>><<>>>><<<><<<><<<<>>>><<>><><<<<>>>><<>>>><<<<>>><><<<<>>>><<>><>><<>>>><<>>>><<<>>>><<<<><<<>>>><>>><<<><<<<><<<<><>>><<<>><<<>><<>>><<<<><<<>>>><>><<><<>><<>>>><<<>>><<<<>><>>><<<><<<<>>>><<>><<><>>>><<<<>>><>><<>>>><<<>>>><<<<>>><<<>>>><<<>><<<<>><<<<>><<<><<<>>>><<<><<>>>><<<<><<<>>><><<<>><<><<<<><<<><<>><<<><><<><<<<>><<>><<>>><<<<><<<>>>><<<>>>><<<<>>><<>>>><<<<><<<<><<<<>>>><<>>>><<<><<<>>>><<><<>>>><<<<>>><><<>>>><<>><>>>><<<<><>>><<<>>>><<<>><>><>><<<<>>><<<>>><><>><>>><>>>><>>><>>><>>>><>>><<>>><<<<>>>><<<><<<<>><<<<>><<<>>><<<<>>><<>>><<<>>>><<<>><<<><<<<>><<<<>>>><<><>>><<<<><>>>><>><<>><<>>><<><<<<>><<><<<<>>>><<>>><<<>>><>>>><<<>>>><>>><<<>>><<<<>>><<<<>><<<>>>><<<<>><<<>><<<<>>><>>>><<>>><<<<>>><<<><>>>><><>><<><>>>><<<>><<>><<<>><<<>>>><<<>>><<<>><<<<>><>>><<<<>>>><<>>>><>>>><>><<<>>><<<<>>><<<>>><<<>>><<<<><>>>><<<>>><<>>>><><<<>>>><<<<>><<<<><<<>>>><<>>><>>>><<<<>>>><<<>>>><<>><>>>><<>>>><<<<>>>><<><<<<><<<<><<<>>>><>>>><<>><<><<>><>><<>>><<<<>><><<<>>>><>><<<<><>><<>>><>><<<>>><<>>>><><><<>><><>><<<>>><<>><<<<>><>>>><<>>><<<>>><<>>><<<<>>><<<><<<>>>><<<><>><<>><<<<>><<>>>><<<<>><<<<>>>><<<<>><>>>><<<>>>><<<<>>>><>>>><>>><<<<>>><><>>><<<>><>>>><<>><<>><<<><<<<>><<>>><><<>><<>><<<>><<<>>>><<<<>>>><<<<>>>><<>>><>>>><<>><><<<<>><<><>>><<<<>>><>>>><><<<>>><<>><<<<>>>><>>><>>>><<<<>><><<<<>>>><<<><><<<<><<<<>>>><<<<>><>>><<<>><<<>>>><<>>><<<><<<>><<<>>><<<><>><>>>><>>>><<<<>>>><><<<>>>><<<<><<<<>>><>>><>><<<>>>><<<>>>><><<<<><<<>>>><<<>><>>><<<<>>>><<>><<>>>><>>>><>>><>><<<>>><<<>>>><>><>>>><>><<<><<>>><<>>>><>><><>>>><<<<>><<<>><<<>><<><<<>>><<<>>>><<<<>><<<>>><>><<<><<<><<>>>><<><<<<>>><<<<>>>><<><><<>><<>>><>>>><><<<<>>><<><>>>><<>><<<>>><<<>>><<<<>><<>>><>><<<><<<>>>><<<<>>><><><><>>>><<<<><<<>>>><<>>>><<<>><<<<>>><>><<<<>><<<<><<<>><<><<<<>><>><>><<<><<><<<<>>><<<>><<<<>>>><<<<>><<<<>><<<<>>>><<<><<<<>>><<<><<<<>><<<<>><<<>>>><<>>><<<<><<>><<<>>>><<>>><<<<>>>><<<<><<<<>><<>>><>>>><>><<<<>>><<><<<<><<<>>>><<<<><<<<>><<<<><<>><>><<>>>><<><<<<>><><<<><>>><<<>>><<><><<<>>>><>><>>><<>>>><<<>>><<<<>>><>>><<<<>>><<<>>>><<<>>><>>>><>><><<<<>><<<<><>>>><<><>>><<>><<<<>><<<<>><<<<>><<<>><>>>><<<<>><<><>>><<>>>><<>>><<<>>>><<<<><<<<>>>><><<<<>>>><<><<<<>>>><<<<><<>><>>><<>>>><<<><<<<>>>><<<>>><<>>><<<<>>>><<<>><><<<<>>>><<>><<<<><<<>><<>><>>><<<>>><<<<>>>><><<<>>>><<<>><<><<<>><<><>>>><<>><>><>>>><<>><<<>>>><<<<>>><>>>><<<>><<<><<>><>>>><<>>>><<<><>>><<<>>>><><<<<>><<<<>><<>><<<>>><<<>>>><<<<>>>><<>>>><>><>>>><<<<>>><<>><<<<>>>><<<<>><<>>>><>>><><>>>><<>><<<<>>><>>><>><><><<<>><<<>>>><<<<><<<>><>><<<<>>><<<>>><<<<><><<>>><<<<>>><<<>>>><<><<>>><><<<<>><><<<<>>><<<>>><>><<<<>><<<<>>>><<<<>>><<>>>><<<<>>><<<>><<<<>>>><<<<>><<<>><<<<>>><<<<>>><<<>>><<<<>>>><<<>>>><<<>><>>>><<><>>>><<>>>><<<<>>><<><<<<>>>><<<<>><<<>><>>><<<<>>><>>>><<<><>>><<<><<<>>>><>>>><<<<>>>><<<<><<<>><>><<><<>>><<>><<>>><<<>>>><<<<>>><<>><<<>>><<>>><<><<<<>>>><<<>>><<>>><<<<>><>>><<>>><<><<>>><<>>><<>>><<<<><<<>>>><<>><<<<>>><<>>>><<<>>><<<<><<<<><<>><<<><<<<>>>><<<>>><<>><<><<<>>><<<>><<<>>>><<<<>>><<>>><<<><>><<<><<>><<<><<<<>><<<<>>>><<<<>><<<<>>>><<><>>><<<>>>><<<<><><><<<><<<<><<<>>><<<>>><<<<>>><<<>>>><<<>><<<>>><<<<>><<<><<<<>>><<>><><>><<<>><<><><<<<>>><<>>>><<>><<>>><<><<>>>><<<<><<>><<>>><<>><<<>>><<<<>>><<>>>><>><<<><<<>><<<<>>>><<<>>><<<<>>><<><<<<><<><>>><<<>><<<<><<<<><><<>><>>><>>>><<<<><<<>><<<><>><<>>>><<>>><<<<><<>>><>>>><<<<>>><>>><<>>><<<>>>><<<>>><<>>><<<<>>>><>><<<<>><<>>><<>>><<<<>>><>><<<<>>>><<<>>>><>>>><<>><<<>>><>><<<<>>><<<>>>><<<<>>>><<<>>><>>><<<<>>><>>><<>><<<<>><<>><<<>><<>><>><<<<>>>><<<><<><<<<>><<>><><>>><>><>>><>>><<<>>>><<>><<<><<>>>><<>>>><>><>>>><><<><<><>>><<<<>><><<<>>><<<<>>><>>><<>><<<>>><<<<>>><<<>><<><<>><><<<<><<<<>><<>>>><<>><<>>>><<<<>>><<<>>>><<><<>>>><<<>><<>>><<>>><<<<>>>><<<>>><><<>><<>><<<<>><<<<>><<>>>><<<>><<<>><<<>><<<<>>><<>>><<<>>>><>><<><><>><><<<>><>>>><>><>><<>>>><<<>>>><>>><<<>><>>>><<><><<><<<><<>>>><>>><<<<>>><<><>>><<<<><>>>><<>><<<><<<>><<>><<<>>>><><<>>><<<>>>><<<<>>><<<>>><<<<>>>><<>>><>>><<<<>>><<><<<>><<<<>>><><<>>>><<>><<>>>><<<<>>>><>>>><<<<>><<<<>>><<>><<<>><<<<><<<>><<><<<<><><<<<><<<><<>>><<<>>><<<<>>><>>>><>>>><<<<>>>><>>>><<<>>>><<<<>>>><<<<>><<<>><><<<<>>>><<<>>><>>><<<>>>><<>>><<<>>><>>>><<<>>><>>>><><<>>>><<<>><<<<>>>><<<<>><>>><<>><<><<><<>><<<>><<>>><<>>>><<<>>>><<<>>><>><<<<>>><<<><<>>>><<>><>>><<>>><<<><<<<><<<><<<<><<<<>>>><<>><<<<>><<<>>><<<>>>><>>>><<<><<<>><<<<>>><<>><<<<>>><<<>>>><<><><<>>>><>><>><<<>>>><>>><<<<><<>>><<>>>><<<>>><><>><<>><<<>>>><<<<>><<<<>>>><<><<<><<<<>><>>>><<<<>><<>>><>>><<<>><<>><<<<>>>><><<>><<<>>>><<>><<<<><>>>><<>>><<><<<>><<>>>><<>>>><>><<<>>><<>><>>>><<<<>><<<><<>>><<<<><<<<>>>><<><>><<<>>><<<>>><<>>>><<<><<<><<<<>>>><<><<<>>>><>><<<>>>><>>><<<<>><<><>><<<><<>><<>><<<><>>>><<<<>>><>>><<<>>><<><<>>>><<>><<<<>>><<<<>><<<><<<<>>>><<<><<<><<<>>><>>><<<<>>>><<<<>>>><<<<><>>>><<<<>><<>><<<<>>><>><<<>>><<><<>>><>><<<>>><<<<>><>>>><<><<<>>><<<>>><<>>>><<><<<<>>>><>>>><>><<<<>><<<><<><<>>>><<<><<<<><<>>><<<<>>>><>>>><<<>>><<<>>><>>>><<<<>>><<<<><<<>>><<<>><>>><>>><>>>><>><<>><<<>>><<<<><<<<>>>><<<<><<<>>>><<<>><<<><<<>>>><<<>><<>><<<<>><<<>>>><>>>><<>>>><<<>>><><<<>>><<<>><<<>>><<>><<<<>>><>>><<>>>><>>>><>>><><<<<>>><<<><<<<>>>><>>>><<<<><<<>>><<<>>>><<<<>>>><<<<>>><<>>><<>>>><<>>>><<<<><<<<>><<<<><<>>><>>><<>>>><>>>><<<<>>><<<<>>>><<<><<<>>><<<>><<<<>>><><<<<>>><>><<>>>><<<>><<>>>><<<<>><<><<<>><<<<><<<<><<<<>><>>><<<><<<><<>>><<<<>><<>>><>>>><<<<>>><<<<>>>><<<>>>><<<>>>><<>><<>>><<<>>><<<>>><<>>>><<<<><<<>>>><<<><<<<>>><<<>><<>>>><<>><<<>>>><<<<><<<>>><<>><<<<>><<<<>><<>>>><>>><<><<>>><<><<<>><><>>>><>><>><<>>>><>>>><<<<><<><<<<>>>><<><<<>>><><<<>>><>>><<<<>><<<<>><<<<><<>>>><<<<>><<<>>><>><<>><<<>><<>>><<<<><<<>>><<>>>><<>>><<<<>>>><<><<<<>><<<>><<<>><<><>>><<>><<<>>>><<>>>><<>><<<>><<<<>>>><<>><<<<>>><<<>>>><<<<><<<><<<>>><<<><<<<>>>><<<<><<<<>>><<><<<><<>>><<>><<<<>>><<<>>><>><<<<><<>>><>>>><<<<>>>><<>>><><<<<>>>><<<>>>><<<>><<<>>><<<<>><>><<><<<<>><<<>>><<<<>><>>><<<<>>>><<<<>>><>>>><<<<>><<><><<<><<>>>><<>>><<<><><<>>><<<<>>><<>><<<><>>>><<<<>>><<><><<<<><<>>><<>>>><<<<>>><<><>>>><><>>>><<>><<<<><<>>><<><<<<><><<>>><<<<>><<<>><><<<><<<<><<<<><<><>>>><<>><<><<>>>><>>><<<><>><>>>><<><<<<>>><<<<><><><><<<<>>><<<><<<<>>><<<<><<<<><<<<>><<<<><<<<><<<<>>>><<>>>><><<>>>><>>>><<>><<<>>>><><<>>><<<<><>>>><<>>>><<<>>>><<<>><<<<>><<<>><><><<>>>><<>><<><><<><<>><<<<><><<><>>><<<>>><<<<>>>><<>>>><<<><<<<><<>><<<<><>><<<<><<><<<>><<<<>>><<<>><<><<<<>>>><>>><<<<><<<<>><<<>>>><<><><>>>><<<><<<<><<<<><<>><<><<<><<>>>><<<>><>><<>><<<>><<<<>><>><<>>><>>>><>>><>>><<<<>>><<<<><<<<>><<<<>><<>>><>>><<<<>><<>><>>>><<<>>>><<><<<><<<>>>><>>><>><<>>>><<<>><<>>><<>>>><<<>>>><<>>><<<<>><>>><<>>>><>><<>><<<<>>><<>>>><<<<>>><<<<>><<<>>>><<<<>>>><<<><<<>><<><<<<><<<>><<<>>>><>>><<<<>>><><<<><<<<>><<><<<<>>>><>>>><<<<>>>><<<<>>><<<><<<>><>><<<<>>><<<><>>><<>>>><>>><<<>>><<<>>>><>><<<>>><<<><>>><<<>>><<<>>><<><<<<>><>>>><<<<>>><>>><>><>><<<<><<<<>>>><<<<>>>><>>>><<>>>><<<>>><>><<<>>>><<>><><<>><>><<<>><><<>>>><<>>><<<<><<>><<<>>>><><>>>><<><<<>>>><><<<>>>><<>><<<>>>><<<>>><<<<><>>>><<>><<><>>>><<<>>>><><<<<>>><<<<>><<>>>><>>>><>><<<>><<<<>>><<>>>><<>><<<<><<<>>>><>><<><>>><<<<>><<<<><>><><<><<<>>><<<<>>>><<>>><>>><<<>>><<<<>><<>><<><<<><<<<>>><<<<>>>><>><<<<>>><<<<>>><<<<><<>>>><<<>><<>><<>><>><>><<<>>>><<>><<>>>><>>><<<>>><>>>><<<>><<<<>>>><<<<><<<<>>><<>><<<<><<<>>><<>>><<<<>>>><<<>>><<><<<><>>><<>>>><<<>>>><<<>>><<<<>><<<>><>>>><<<>>><<<>>><<<>>><<<>><<<<>>><<<><>>><<<<>>>><<><<>><><><<>><<>><<<><<<<>>>><<>><>><<><<<<>>><><<>>><<<>><<<><<<>><<>><<><>>>><<<>>>><<>>>><<<<>><>>>><<>>><<><<<>>>><>><<<>>><<>>><<<<><<>>>><<<>>>><<>><>>>><<<<>><<<>>><><<><<>>>><<>>><<<>><<<>>><<<<><<>>>><<>>>><<><<<>><<<<>>>><>><<<>>>><<<<>>><>>><<<<><<><<>>><><<<><<<>><<<<>><<>>><>><<<>>>><<<<>>><<<<>><<<<><<<>>><<<>>><<<<>>>><<<><>>>><<<<>>><<>><<<>>><<<>><<<<>>><<><<<<>>><<<><<<><<<>><<>>>><<<<>>>><<<>><<<>>>><<<<><>>>><>>>><<<>>><<<<>>><<>><><<<>><<<><<<>>><<'
    parts:
      part1: "--- Day 17: Pyroclastic Flow ---\nYour handheld device has located an\
        \ alternative exit from the cave for you and the elephants.  The ground is\
        \ rumbling almost continuously now, but the strange valves bought you some\
        \ time. It's definitely getting warmer in here, though.\n\n\nThe tunnels eventually\
        \ open into a very tall, narrow chamber. Large, oddly-shaped rocks are falling\
        \ into the chamber from above, presumably due to all the rumbling. If you\
        \ can't work out where the rocks will fall next, you might be \ncrushed\n\
        !\n\n\nThe five types of rocks have the following peculiar shapes, where \n\
        #\n is rock and \n.\n is empty space:\n\n\n####\n\n.#.\n###\n.#.\n\n..#\n\
        ..#\n###\n\n#\n#\n#\n#\n\n##\n##\n\n\n\nThe rocks fall in the order shown\
        \ above: first the \n-\n shape, then the \n+\n shape, and so on. Once the\
        \ end of the list is reached, the same order repeats: the \n-\n shape falls\
        \ first, sixth, 11th, 16th, etc.\n\n\nThe rocks don't spin, but they do get\
        \ pushed around by jets of hot gas coming out of the walls themselves. A quick\
        \ scan reveals the effect the jets of hot gas will have on the rocks as they\
        \ fall (your puzzle input).\n\n\nFor example, suppose this was the jet pattern\
        \ in your cave:\n\n\n>>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>\n\n\n\nIn jet\
        \ patterns, \n<\n means a push to the left, while \n>\n means a push to the\
        \ right. The pattern above means that the jets will push a falling rock right,\
        \ then right, then right, then left, then left, then right, and so on. If\
        \ the end of the list is reached, it repeats.\n\n\nThe tall, vertical chamber\
        \ is exactly \nseven units wide\n. Each rock appears so that its left edge\
        \ is two units away from the left wall and its bottom edge is three units\
        \ above the highest rock in the room (or the floor, if there isn't one).\n\
        \n\nAfter a rock appears, it alternates between \nbeing pushed by a jet of\
        \ hot gas\n one unit (in the direction indicated by the next symbol in the\
        \ jet pattern) and then \nfalling one unit down\n. If any movement would cause\
        \ any part of the rock to move into the walls, floor, or a stopped rock, the\
        \ movement instead does not occur. If a \ndownward\n movement would have caused\
        \ a falling rock to move into the floor or an already-fallen rock, the falling\
        \ rock stops where it is (having landed on something) and a new rock immediately\
        \ begins falling.\n\n\nDrawing falling rocks with \n@\n and stopped rocks\
        \ with \n#\n, the jet pattern in the example above manifests as follows:\n\
        \n\nThe first rock begins falling:\n|..@@@@.|\n|.......|\n|.......|\n|.......|\n\
        +-------+\n\nJet of gas pushes rock right:\n|...@@@@|\n|.......|\n|.......|\n\
        |.......|\n+-------+\n\nRock falls 1 unit:\n|...@@@@|\n|.......|\n|.......|\n\
        +-------+\n\nJet of gas pushes rock right, but nothing happens:\n|...@@@@|\n\
        |.......|\n|.......|\n+-------+\n\nRock falls 1 unit:\n|...@@@@|\n|.......|\n\
        +-------+\n\nJet of gas pushes rock right, but nothing happens:\n|...@@@@|\n\
        |.......|\n+-------+\n\nRock falls 1 unit:\n|...@@@@|\n+-------+\n\nJet of\
        \ gas pushes rock left:\n|..@@@@.|\n+-------+\n\nRock falls 1 unit, causing\
        \ it to come to rest:\n|..####.|\n+-------+\n\nA new rock begins falling:\n\
        |...@...|\n|..@@@..|\n|...@...|\n|.......|\n|.......|\n|.......|\n|..####.|\n\
        +-------+\n\nJet of gas pushes rock left:\n|..@....|\n|.@@@...|\n|..@....|\n\
        |.......|\n|.......|\n|.......|\n|..####.|\n+-------+\n\nRock falls 1 unit:\n\
        |..@....|\n|.@@@...|\n|..@....|\n|.......|\n|.......|\n|..####.|\n+-------+\n\
        \nJet of gas pushes rock right:\n|...@...|\n|..@@@..|\n|...@...|\n|.......|\n\
        |.......|\n|..####.|\n+-------+\n\nRock falls 1 unit:\n|...@...|\n|..@@@..|\n\
        |...@...|\n|.......|\n|..####.|\n+-------+\n\nJet of gas pushes rock left:\n\
        |..@....|\n|.@@@...|\n|..@....|\n|.......|\n|..####.|\n+-------+\n\nRock falls\
        \ 1 unit:\n|..@....|\n|.@@@...|\n|..@....|\n|..####.|\n+-------+\n\nJet of\
        \ gas pushes rock right:\n|...@...|\n|..@@@..|\n|...@...|\n|..####.|\n+-------+\n\
        \nRock falls 1 unit, causing it to come to rest:\n|...#...|\n|..###..|\n|...#...|\n\
        |..####.|\n+-------+\n\nA new rock begins falling:\n|....@..|\n|....@..|\n\
        |..@@@..|\n|.......|\n|.......|\n|.......|\n|...#...|\n|..###..|\n|...#...|\n\
        |..####.|\n+-------+\n\n\n\nThe moment each of the next few rocks begins falling,\
        \ you would see this:\n\n\n|..@....|\n|..@....|\n|..@....|\n|..@....|\n|.......|\n\
        |.......|\n|.......|\n|..#....|\n|..#....|\n|####...|\n|..###..|\n|...#...|\n\
        |..####.|\n+-------+\n\n|..@@...|\n|..@@...|\n|.......|\n|.......|\n|.......|\n\
        |....#..|\n|..#.#..|\n|..#.#..|\n|#####..|\n|..###..|\n|...#...|\n|..####.|\n\
        +-------+\n\n|..@@@@.|\n|.......|\n|.......|\n|.......|\n|....##.|\n|....##.|\n\
        |....#..|\n|..#.#..|\n|..#.#..|\n|#####..|\n|..###..|\n|...#...|\n|..####.|\n\
        +-------+\n\n|...@...|\n|..@@@..|\n|...@...|\n|.......|\n|.......|\n|.......|\n\
        |.####..|\n|....##.|\n|....##.|\n|....#..|\n|..#.#..|\n|..#.#..|\n|#####..|\n\
        |..###..|\n|...#...|\n|..####.|\n+-------+\n\n|....@..|\n|....@..|\n|..@@@..|\n\
        |.......|\n|.......|\n|.......|\n|..#....|\n|.###...|\n|..#....|\n|.####..|\n\
        |....##.|\n|....##.|\n|....#..|\n|..#.#..|\n|..#.#..|\n|#####..|\n|..###..|\n\
        |...#...|\n|..####.|\n+-------+\n\n|..@....|\n|..@....|\n|..@....|\n|..@....|\n\
        |.......|\n|.......|\n|.......|\n|.....#.|\n|.....#.|\n|..####.|\n|.###...|\n\
        |..#....|\n|.####..|\n|....##.|\n|....##.|\n|....#..|\n|..#.#..|\n|..#.#..|\n\
        |#####..|\n|..###..|\n|...#...|\n|..####.|\n+-------+\n\n|..@@...|\n|..@@...|\n\
        |.......|\n|.......|\n|.......|\n|....#..|\n|....#..|\n|....##.|\n|....##.|\n\
        |..####.|\n|.###...|\n|..#....|\n|.####..|\n|....##.|\n|....##.|\n|....#..|\n\
        |..#.#..|\n|..#.#..|\n|#####..|\n|..###..|\n|...#...|\n|..####.|\n+-------+\n\
        \n|..@@@@.|\n|.......|\n|.......|\n|.......|\n|....#..|\n|....#..|\n|....##.|\n\
        |##..##.|\n|######.|\n|.###...|\n|..#....|\n|.####..|\n|....##.|\n|....##.|\n\
        |....#..|\n|..#.#..|\n|..#.#..|\n|#####..|\n|..###..|\n|...#...|\n|..####.|\n\
        +-------+\n\n\n\nTo prove to the elephants your simulation is accurate, they\
        \ want to know how tall the tower will get after 2022 rocks have stopped (but\
        \ before the 2023rd rock begins falling). In this example, the tower of rocks\
        \ will be \n3068\n units tall.\n\n\nHow many units tall will the tower of\
        \ rocks be after 2022 rocks have stopped falling?"
      part2: ''
    title: '--- Day 17: Pyroclastic Flow ---'
  18:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: '7,2,7

      12,2,8

      11,18,11

      7,6,3

      7,7,17

      9,15,2

      12,17,8

      12,8,3

      11,6,17

      8,18,10

      11,14,3

      16,14,8

      12,5,4

      7,4,14

      10,3,15

      4,16,7

      14,13,15

      13,17,8

      8,17,13

      3,14,12

      7,17,11

      3,15,12

      5,12,15

      17,8,10

      8,17,9

      3,12,11

      16,12,7

      12,4,8

      12,10,1

      7,12,17

      15,12,11

      9,5,15

      9,17,8

      8,13,3

      8,15,5

      5,7,14

      9,2,13

      3,9,8

      11,4,12

      5,10,14

      7,8,2

      9,3,4

      10,12,2

      9,5,16

      7,14,16

      14,18,11

      6,14,16

      4,13,10

      6,10,17

      9,9,18

      12,4,6

      2,8,13

      4,6,12

      17,13,7

      16,7,7

      8,6,16

      15,6,12

      11,16,12

      9,1,8

      13,16,9

      16,13,10

      15,7,4

      9,15,16

      9,17,6

      3,12,6

      12,14,15

      12,1,8

      5,8,4

      10,18,11

      12,4,3

      13,12,3

      3,5,7

      15,6,6

      16,11,16

      4,13,6

      3,4,10

      13,12,2

      16,8,6

      12,17,9

      9,11,16

      9,17,12

      16,10,14

      16,9,6

      14,3,11

      9,8,19

      16,6,6

      4,3,11

      17,10,5

      17,13,11

      14,15,13

      13,5,4

      16,12,4

      13,15,15

      4,4,6

      16,7,14

      6,17,8

      9,17,9

      13,15,11

      14,16,10

      9,2,7

      17,10,8

      12,9,2

      9,11,18

      9,11,17

      16,6,9

      3,14,8

      4,4,7

      7,15,7

      8,7,17

      10,7,3

      14,10,14

      15,11,16

      7,3,13

      14,10,3

      13,10,2

      12,12,4

      4,8,4

      1,8,9

      11,13,2

      12,6,16

      11,10,17

      1,9,11

      5,16,10

      9,15,5

      3,9,7

      8,11,17

      10,2,10

      16,7,4

      10,18,9

      12,3,11

      10,11,1

      10,2,8

      13,7,15

      11,11,16

      2,13,5

      3,8,9

      14,3,6

      12,10,17

      7,1,10

      8,5,15

      11,15,4

      4,15,11

      12,2,12

      8,9,17

      15,14,6

      7,14,13

      8,4,5

      9,3,12

      4,16,12

      6,3,7

      9,3,13

      16,5,13

      10,1,10

      6,12,15

      11,7,16

      8,10,18

      10,17,7

      3,14,6

      3,8,5

      2,11,8

      13,4,4

      6,4,6

      8,16,13

      12,9,17

      7,12,2

      15,6,5

      15,5,11

      10,8,16

      4,13,7

      15,6,15

      5,12,3

      2,9,13

      2,8,10

      12,3,6

      7,3,14

      12,16,7

      10,17,13

      14,4,5

      5,15,15

      15,9,3

      11,2,12

      5,3,13

      6,15,15

      6,2,8

      9,5,2

      4,6,14

      15,14,8

      8,9,18

      7,5,12

      11,7,1

      10,15,16

      5,16,12

      4,12,14

      9,1,12

      9,1,13

      17,7,6

      4,7,13

      13,15,12

      5,14,13

      16,5,5

      14,7,7

      6,11,3

      8,11,1

      4,8,13

      5,2,8

      8,4,4

      12,3,7

      11,9,17

      4,10,5

      4,11,16

      15,8,14

      8,4,13

      14,8,3

      6,6,5

      8,3,8

      14,16,8

      7,10,1

      14,10,17

      15,11,15

      11,13,5

      5,9,3

      12,7,17

      16,8,16

      17,13,8

      11,9,3

      7,3,8

      17,14,9

      17,11,7

      6,16,11

      3,5,8

      12,5,3

      17,5,6

      14,9,16

      9,16,6

      9,7,2

      14,14,14

      14,15,10

      16,13,12

      8,3,4

      11,6,15

      1,10,11

      14,11,13

      9,17,13

      4,10,4

      9,2,6

      10,5,15

      10,4,16

      8,5,16

      6,14,15

      10,10,15

      13,2,8

      4,5,10

      3,13,7

      17,7,10

      16,12,6

      15,4,13

      7,14,3

      8,6,3

      5,13,13

      14,11,2

      6,4,11

      8,17,8

      5,16,9

      13,7,3

      16,9,14

      15,6,11

      9,14,6

      4,6,15

      3,8,14

      14,17,10

      3,13,11

      18,10,9

      10,16,13

      12,1,7

      14,12,10

      12,14,5

      16,7,13

      4,7,11

      9,9,1

      11,4,3

      6,4,8

      5,16,8

      15,11,6

      6,11,17

      9,15,15

      5,14,14

      8,10,17

      4,16,11

      3,13,4

      3,10,14

      9,5,4

      5,15,14

      6,8,2

      5,3,9

      4,9,5

      15,12,13

      11,16,6

      5,4,5

      11,15,9

      14,6,14

      17,8,7

      18,11,7

      10,4,4

      8,3,9

      4,13,13

      3,3,11

      16,9,5

      3,6,5

      6,13,3

      2,10,11

      11,15,3

      14,2,9

      10,12,18

      11,4,9

      5,13,14

      6,15,5

      7,15,14

      5,4,13

      1,7,9

      3,9,14

      11,11,17

      10,16,9

      7,17,9

      9,2,11

      8,8,2

      16,9,4

      3,6,7

      9,6,3

      5,12,16

      14,9,3

      12,13,2

      15,6,7

      7,5,3

      15,3,10

      7,2,9

      11,15,5

      15,16,10

      15,11,13

      10,4,5

      11,5,15

      1,13,7

      17,11,6

      7,13,15

      10,3,4

      8,1,9

      5,5,11

      17,8,6

      9,1,7

      9,2,12

      16,7,12

      9,12,18

      17,6,10

      14,7,8

      6,15,12

      13,9,17

      14,17,11

      13,7,4

      15,3,11

      11,5,16

      14,10,15

      11,0,10

      8,14,4

      12,14,7

      14,17,12

      13,13,13

      6,4,9

      5,16,15

      10,1,12

      10,9,18

      11,3,7

      17,10,14

      3,11,13

      15,4,6

      9,3,11

      5,10,4

      12,14,16

      3,10,13

      9,12,3

      6,16,13

      6,8,3

      5,4,8

      5,3,5

      15,13,9

      14,14,15

      13,13,3

      8,16,11

      5,11,5

      5,17,7

      5,5,7

      13,16,8

      18,12,11

      10,4,15

      6,14,6

      4,15,7

      7,5,4

      14,4,7

      16,12,9

      13,11,17

      2,9,8

      9,1,10

      11,5,3

      14,3,7

      11,14,13

      14,11,3

      2,11,11

      2,8,8

      14,8,16

      15,13,5

      5,7,2

      10,8,17

      11,6,2

      6,12,17

      14,6,5

      6,13,4

      10,18,7

      12,3,14

      2,10,12

      4,4,8

      5,8,14

      9,14,4

      4,5,8

      9,13,18

      3,11,6

      10,10,1

      13,5,15

      10,7,1

      14,9,4

      16,10,5

      15,4,12

      12,9,16

      2,10,10

      11,17,7

      15,9,4

      16,13,14

      15,8,5

      4,14,15

      6,3,10

      6,17,6

      5,11,3

      6,10,2

      10,7,17

      11,10,18

      12,7,16

      13,4,5

      13,15,9

      14,10,4

      16,4,8

      4,9,4

      14,8,15

      10,13,2

      8,11,3

      6,2,10

      8,8,16

      7,17,6

      1,8,11

      13,6,4

      10,3,14

      17,9,13

      16,5,9

      14,11,16

      3,5,14

      17,11,13

      2,9,12

      1,10,10

      16,7,11

      7,5,5

      9,13,5

      11,4,6

      2,7,13

      12,17,7

      7,3,7

      16,5,11

      9,12,1

      3,12,5

      16,5,6

      13,3,12

      7,14,4

      8,2,13

      12,16,14

      15,4,7

      15,15,11

      9,6,4

      3,9,15

      8,2,10

      15,4,10

      9,17,7

      4,4,9

      7,12,4

      11,16,13

      2,12,7

      11,10,2

      8,4,6

      11,2,11

      6,4,14

      9,16,4

      11,1,9

      11,9,1

      15,14,11

      4,6,4

      15,5,8

      16,14,7

      15,12,14

      15,4,11

      15,10,3

      13,12,17

      8,15,4

      6,5,14

      8,4,15

      1,8,8

      13,8,2

      10,16,15

      14,12,16

      15,16,9

      11,15,12

      16,8,7

      14,14,12

      5,8,2

      10,7,16

      5,17,10

      2,6,10

      8,14,17

      13,11,14

      6,10,16

      17,8,8

      6,9,3

      12,13,16

      13,3,10

      8,3,6

      6,7,17

      3,7,6

      12,2,9

      14,5,14

      13,6,16

      7,3,11

      2,12,9

      6,8,17

      14,15,12

      16,10,4

      17,5,12

      11,8,16

      3,13,9

      7,1,6

      9,7,18

      4,7,15

      5,15,4

      16,5,8

      12,16,5

      3,3,8

      13,17,9

      7,17,13

      16,8,5

      4,14,12

      14,4,6

      9,15,13

      10,3,13

      5,15,10

      16,14,9

      7,11,2

      7,12,6

      5,17,12

      3,15,9

      5,2,7

      3,8,13

      8,8,1

      3,14,7

      8,16,5

      3,7,9

      7,5,16

      12,14,3

      14,12,4

      4,2,9

      7,4,13

      17,6,7

      8,8,17

      13,16,6

      12,12,17

      5,8,15

      10,1,8

      9,10,2

      5,15,8

      12,2,7

      14,16,11

      4,6,13

      18,10,11

      15,12,5

      13,14,14

      5,3,8

      4,7,12

      13,18,10

      3,8,11

      7,12,16

      4,13,4

      5,3,7

      12,5,14

      10,2,12

      12,9,3

      10,13,3

      15,8,15

      4,8,15

      13,2,9

      14,17,7

      18,10,12

      12,5,5

      15,3,7

      8,3,14

      10,15,4

      11,7,4

      1,10,13

      6,6,4

      5,10,3

      18,11,11

      4,6,3

      7,5,15

      8,3,13

      8,10,3

      7,4,5

      8,17,10

      11,5,12

      4,5,16

      6,9,4

      15,7,3

      18,11,10

      9,6,17

      16,11,14

      7,8,17

      14,6,15

      13,12,16

      6,5,5

      6,9,15

      13,13,16

      16,13,7

      14,2,6

      16,5,7

      11,10,1

      18,8,11

      2,8,11

      17,14,11

      3,10,12

      13,7,17

      10,7,18

      5,10,17

      17,9,14

      5,7,16

      12,4,14

      9,13,16

      17,9,11

      1,9,13

      2,6,7

      13,15,16

      15,5,14

      12,16,8

      15,10,16

      7,7,16

      11,15,16

      16,10,12

      6,3,13

      2,12,11

      12,16,6

      11,5,4

      10,12,17

      17,6,15

      2,6,12

      12,7,5

      8,3,10

      12,5,16

      6,17,13

      14,4,4

      9,18,8

      5,16,13

      2,11,6

      6,16,7

      8,4,14

      11,12,2

      6,4,5

      14,8,4

      6,1,10

      12,4,16

      9,4,3

      18,8,10

      16,15,10

      5,9,16

      17,10,9

      17,7,9

      7,7,4

      3,10,5

      6,13,15

      11,16,10

      6,6,15

      9,14,17

      4,8,6

      4,4,12

      9,3,3

      7,16,12

      10,14,16

      4,15,6

      16,4,7

      8,6,2

      8,6,17

      16,13,13

      15,15,7

      18,8,8

      12,13,4

      14,13,4

      5,12,4

      15,12,15

      4,4,15

      5,8,17

      17,11,14

      13,16,13

      5,7,7

      8,13,16

      8,5,14

      16,15,8

      6,1,9

      11,18,7

      11,5,2

      9,4,4

      9,13,2

      7,17,7

      6,7,2

      17,10,6

      14,8,2

      7,16,6

      17,9,10

      16,14,6

      7,16,10

      7,3,10

      16,11,13

      6,13,16

      3,8,4

      12,15,5

      17,6,12

      18,9,11

      14,13,5

      15,8,16

      13,14,15

      17,8,13

      5,14,3

      8,13,17

      14,15,9

      8,14,16

      11,12,18

      15,5,10

      10,14,15

      14,7,15

      13,6,3

      3,14,9

      15,17,11

      1,12,9

      11,15,14

      6,16,6

      12,9,14

      11,18,10

      10,13,4

      13,17,11

      5,13,6

      10,1,7

      15,12,6

      12,12,15

      4,6,6

      3,5,13

      11,17,10

      5,14,8

      5,3,10

      13,13,17

      5,13,5

      15,5,12

      5,6,4

      12,15,14

      16,12,12

      12,17,10

      10,13,17

      8,13,1

      15,10,9

      17,13,9

      10,11,16

      8,12,17

      1,13,8

      13,8,3

      5,10,5

      14,5,15

      7,16,8

      7,9,15

      11,17,14

      12,17,11

      7,17,8

      13,10,17

      4,11,15

      3,11,8

      5,5,15

      11,9,18

      3,13,5

      11,14,4

      10,16,12

      7,3,4

      4,7,16

      8,15,16

      2,6,9

      2,13,7

      13,14,3

      6,9,18

      9,7,16

      13,15,13

      7,2,13

      5,11,4

      6,15,14

      18,11,8

      5,6,16

      12,17,5

      9,8,18

      7,4,11

      13,3,7

      7,11,18

      12,3,5

      15,12,4

      6,7,4

      14,13,12

      15,5,15

      9,17,10

      3,15,10

      17,10,11

      9,3,10

      9,13,15

      5,9,4

      16,9,7

      4,11,4

      5,15,16

      17,7,12

      12,6,3

      15,11,4

      13,6,5

      9,3,7

      8,8,18

      13,7,16

      13,16,12

      15,14,7

      6,6,2

      15,9,16

      5,4,6

      2,8,7

      13,17,12

      5,13,4

      11,15,15

      11,2,7

      16,11,9

      6,7,5

      9,9,17

      8,10,1

      9,14,3

      11,5,5

      14,9,5

      5,6,3

      10,2,11

      7,11,15

      16,14,10

      8,1,11

      16,6,13

      12,3,10

      12,4,10

      4,3,10

      9,11,2

      3,13,6

      5,16,7

      11,11,15

      7,17,10

      16,14,11

      16,14,12

      2,5,8

      3,6,10

      10,8,18

      7,4,6

      6,12,3

      15,15,6

      7,3,12

      9,1,9

      5,11,2

      15,5,6

      11,1,12

      17,9,8

      10,18,10

      2,7,11

      6,9,17

      6,12,4

      16,8,11

      15,5,13

      3,10,8

      16,11,12

      8,3,7

      7,2,10

      4,11,5

      16,13,6

      2,11,12

      4,15,9

      7,16,5

      3,11,12

      14,16,9

      2,10,13

      5,12,5

      16,6,11

      5,7,3

      13,11,3

      5,3,11

      14,14,7

      6,5,16

      5,11,17

      11,3,3

      9,10,18

      14,11,15

      12,5,15

      7,4,15

      16,10,10

      8,2,9

      14,6,17

      10,3,3

      5,14,11

      11,12,16

      14,5,9

      10,9,1

      10,3,10

      2,9,10

      7,3,6

      12,6,15

      9,18,9

      3,8,15

      3,4,11

      13,17,13

      5,5,14

      6,11,16

      5,4,9

      7,13,17

      14,6,3

      1,11,6

      5,11,14

      14,15,7

      3,11,14

      7,11,1

      16,8,12

      2,9,14

      13,5,2

      8,2,12

      4,4,11

      13,12,6

      8,6,15

      13,8,1

      17,12,6

      13,5,12

      16,9,8

      6,12,16

      13,7,1

      7,17,12

      5,13,7

      14,7,5

      10,2,7

      11,14,5

      11,16,11

      2,11,7

      9,18,7

      13,15,14

      8,2,14

      15,12,16

      10,7,2

      5,15,6

      7,13,3

      4,5,5

      18,11,9

      7,9,3

      0,10,10

      10,10,17

      16,10,11

      7,9,2

      3,7,8

      9,16,13

      11,13,3

      13,10,3

      9,5,17

      14,8,17

      11,1,8

      16,9,9

      15,6,13

      11,11,2

      10,16,11

      1,11,9

      0,11,9

      15,6,10

      1,5,10

      8,18,11

      7,15,15

      5,17,9

      5,5,4

      10,14,17

      9,6,14

      2,14,9

      6,16,10

      17,14,10

      10,2,5

      6,8,4

      9,18,12

      4,13,12

      4,5,6

      16,6,14

      3,9,11

      16,4,10

      13,5,14

      9,16,8

      14,4,14

      13,14,5

      5,5,6

      7,19,10

      7,6,16

      6,16,9

      8,13,2

      4,12,3

      17,7,8

      4,9,13

      3,5,6

      10,14,3

      4,14,9

      5,4,11

      5,2,9

      10,17,5

      5,10,15

      2,7,8

      3,5,5

      6,17,12

      9,16,11

      16,8,15

      3,5,11

      2,10,9

      9,9,2

      6,6,16

      13,14,12

      10,8,3

      11,6,16

      5,8,3

      3,6,8

      16,8,14

      11,3,4

      11,1,10

      6,12,2

      8,1,6

      5,6,15

      6,14,5

      17,15,10

      7,16,13

      11,2,5

      11,17,5

      15,13,7

      15,15,10

      5,11,16

      12,3,12

      2,12,8

      9,1,6

      11,5,14

      17,8,5

      7,14,15

      17,13,12

      9,15,14

      16,11,6

      8,11,2

      4,16,10

      14,17,9

      4,14,8

      9,18,11

      9,16,14

      10,15,12

      15,13,13

      17,9,7

      13,14,13

      1,12,11

      13,13,15

      13,15,8

      9,16,5

      11,12,17

      16,2,10

      17,12,12

      14,16,12

      10,17,12

      2,14,7

      7,10,2

      4,4,10

      6,16,4

      12,3,8

      6,7,3

      14,3,12

      13,2,10

      13,8,18

      4,5,7

      12,17,14

      14,11,14

      13,18,9

      9,11,1

      6,14,8

      11,8,2

      4,10,16

      16,13,11

      13,8,4

      10,6,17

      14,5,8

      6,8,16

      14,3,5

      14,16,7

      16,11,7

      13,4,11

      2,6,11

      2,10,7

      14,10,6

      10,11,2

      4,12,4

      16,13,8

      15,7,15

      4,9,3

      1,9,9

      16,5,10

      15,11,14

      14,13,14

      7,18,11

      7,3,15

      12,6,4

      16,7,15

      18,13,11

      9,4,15

      2,5,11

      9,2,9

      10,16,14

      11,2,8

      15,8,13

      3,10,6

      17,9,12

      3,10,9

      16,11,15

      11,5,17

      17,8,9

      5,4,10

      16,12,15

      12,2,11

      8,14,13

      14,4,12

      13,4,14

      15,8,6

      7,10,17

      17,12,8

      12,15,6

      3,7,7

      15,9,14

      3,5,10

      6,5,4

      10,8,2

      10,15,15

      7,1,7

      2,7,9

      18,7,9

      12,6,17

      6,16,12

      9,17,11

      6,6,3

      8,1,10

      6,16,5

      4,2,10

      3,10,4

      1,11,11

      5,11,10

      14,13,3

      8,7,2

      2,5,12

      3,11,10

      4,12,13

      4,6,11

      5,3,12

      12,16,11

      2,9,6

      7,2,12

      8,15,3

      3,12,12

      4,15,12

      6,7,16

      4,2,8

      15,7,16

      3,8,8

      13,17,6

      17,9,9

      3,12,14

      9,5,3

      8,8,3

      3,6,9

      11,7,17

      13,11,2

      7,12,3

      13,5,5

      15,10,5

      13,9,2

      9,6,15

      15,14,10

      8,18,6

      5,6,14

      9,14,14

      3,11,11

      9,11,3

      7,7,2

      16,9,10

      12,13,17

      11,3,10

      12,10,3

      16,5,14

      7,9,17

      4,10,13

      8,6,1

      12,15,15

      4,12,12

      3,12,7

      11,10,15

      8,5,18

      7,4,3

      16,12,10

      16,7,8

      12,1,9

      1,11,10

      16,8,9

      6,10,15

      16,12,5

      8,12,16

      14,13,7

      9,4,6

      17,9,6

      14,15,11

      13,11,16

      6,15,7

      2,7,12

      16,15,11

      11,2,13

      12,17,13

      4,13,11

      7,11,3

      9,4,5

      15,16,8

      2,14,11

      4,14,5

      14,6,4

      11,17,9

      5,6,12

      3,11,15

      4,3,9

      12,4,5

      4,12,16

      5,5,5

      8,13,15

      13,3,5

      6,10,3

      18,7,12

      15,8,4

      4,5,13

      5,8,16

      13,14,6

      17,5,9

      5,10,16

      12,18,8

      8,2,11

      13,2,7

      6,2,9

      11,4,15

      4,12,6

      13,5,3

      6,2,12

      11,4,4

      15,10,15

      3,7,5

      15,4,9

      3,11,7

      5,15,7

      5,14,5

      12,17,6

      16,6,10

      12,4,12

      14,11,5

      9,10,17

      13,16,11

      8,7,16

      10,17,4

      2,11,9

      18,9,7

      7,16,15

      2,10,14

      18,8,7

      17,11,9

      5,14,6

      8,3,11

      4,7,14

      2,9,11

      13,15,4

      8,17,6

      7,10,3

      9,9,15

      6,14,17

      2,5,10

      12,13,3

      3,15,7

      16,8,8

      8,3,5

      4,4,13

      12,15,13

      18,12,10

      9,3,14

      4,15,13

      13,15,5

      14,12,6

      16,11,11

      15,6,9

      7,6,17

      17,11,12

      6,18,8

      13,3,13

      13,2,6

      15,14,12

      12,15,3

      2,12,5

      3,4,9

      5,13,15

      14,15,5

      9,7,1

      2,9,7

      10,17,8

      4,7,4

      14,14,4

      11,15,6

      6,9,2

      12,12,3

      14,7,4

      10,6,1

      15,13,14

      11,3,13

      5,4,12

      15,6,4

      9,1,11

      15,17,8

      5,14,10

      11,14,16

      16,8,13

      16,10,13

      9,3,5

      14,12,14

      12,8,2

      3,7,13

      15,4,8

      2,14,5

      10,7,15

      6,12,13

      7,8,3

      10,15,5

      5,15,12

      8,14,5

      1,8,10

      8,16,7

      9,2,4

      15,5,7

      5,15,11

      14,4,13

      10,18,13

      13,12,5

      5,12,12

      4,5,14

      17,8,14

      12,11,2

      14,3,10

      13,7,5

      6,14,13

      3,10,15

      16,7,5

      10,15,14

      6,3,6

      12,17,12

      13,2,11

      15,4,5

      2,7,7

      12,16,12

      9,8,17

      17,11,10

      4,10,14

      12,12,2

      4,6,7

      14,5,12

      3,6,13

      14,8,14

      2,7,10

      16,9,11

      11,1,11

      9,4,16

      8,16,8

      10,2,6

      11,13,17

      6,14,14

      15,14,9

      4,12,10

      8,7,15

      3,6,6

      4,3,8

      13,5,10

      7,7,3

      4,16,9

      5,7,6

      5,12,14

      14,16,6

      16,11,5

      9,4,9

      1,7,13

      9,3,16

      11,3,11

      15,14,14

      4,14,11

      3,13,13

      18,9,9

      9,0,9

      2,6,8

      12,12,1

      17,12,14

      16,14,15

      3,12,4

      12,4,11

      14,15,6

      7,6,2

      10,14,4

      8,12,2

      12,8,17

      5,12,6

      9,3,8

      16,7,6

      6,11,15

      13,9,16

      11,4,16

      16,11,8

      12,15,8

      1,7,11

      5,9,5

      11,2,6

      8,18,9

      8,3,15

      10,17,11

      18,11,12

      14,4,8

      13,14,11

      13,5,7

      11,14,14

      4,15,8

      12,13,6

      12,12,18

      15,6,14

      5,5,13

      15,16,11

      9,7,17

      4,10,15

      14,15,14

      6,15,6

      9,15,3

      12,7,2

      11,16,14

      5,7,15

      17,8,12

      4,5,11

      13,6,7

      5,2,10

      14,3,8

      4,6,5

      17,11,11

      3,14,10

      6,3,9

      14,7,3

      10,5,2

      13,5,16

      15,16,13

      17,6,11

      8,17,15

      13,6,14

      18,7,10

      4,14,14

      13,14,4

      8,17,14

      17,12,9

      10,15,6

      16,9,15

      16,13,5

      11,17,11

      15,5,16

      4,15,10

      9,3,15

      4,8,14

      5,14,9

      11,8,18

      15,10,14

      12,14,14

      4,8,10

      11,7,2

      5,4,7

      15,15,12

      7,8,15

      10,6,16

      7,16,9

      14,4,9

      6,16,8

      8,12,3

      13,3,14

      4,7,3

      13,11,18

      17,10,7

      2,14,10

      5,9,15

      11,4,13

      2,9,9

      10,8,1

      12,15,12

      4,13,14

      8,9,0

      11,18,8

      11,17,12

      3,6,11

      4,13,15

      17,12,10

      11,2,9

      15,3,8

      7,5,14

      2,12,10

      11,7,18

      12,13,15

      12,7,1

      3,13,15

      16,9,13

      3,3,9

      10,7,0

      4,12,5

      17,10,10

      13,13,14

      10,11,18

      7,3,9

      15,15,13

      3,11,4

      15,7,13

      9,4,14

      1,9,7

      15,9,17

      8,11,16

      2,10,6

      4,11,3

      13,15,7

      10,1,11

      10,17,6

      5,13,3

      1,11,7

      11,13,16

      16,10,15

      8,2,6

      10,10,3

      11,2,4

      5,14,12

      7,15,13

      9,3,6

      7,15,4

      7,8,4

      10,13,16

      13,3,8

      1,10,9

      15,10,4

      13,6,2

      14,6,11

      7,13,16

      2,11,13

      3,6,12

      17,10,12

      3,9,13

      5,4,14

      10,4,3

      10,3,5

      9,16,7

      2,12,6

      17,6,9

      9,14,16

      11,13,4

      9,10,16

      7,2,11

      8,2,8

      3,14,5

      14,9,14

      1,6,10

      15,10,2

      14,12,5

      6,14,4

      3,7,11

      5,7,4

      8,17,5

      10,5,5

      14,14,11

      14,5,4

      6,4,7

      14,15,8

      12,5,6

      19,8,11

      11,14,2

      9,2,5

      7,1,9

      15,7,12

      8,9,1

      14,4,11

      8,14,15

      18,12,8

      11,16,5

      13,12,15

      16,12,13

      6,15,10

      15,4,14

      7,6,4

      7,2,14

      5,15,9

      8,19,10

      10,6,2

      16,15,9

      8,5,1

      5,4,15

      16,3,8

      4,4,5

      9,13,17

      5,14,7

      14,10,2

      5,15,5

      11,2,10

      3,12,9

      7,9,1

      12,16,3

      8,15,14

      6,5,15

      15,10,8

      17,7,11

      9,16,9

      15,13,15

      8,9,2

      5,12,8

      14,13,16

      6,15,4

      15,7,5

      11,12,3

      16,4,11

      11,9,2

      3,9,9

      1,11,12

      7,11,17

      11,3,12

      8,5,17

      14,5,7

      5,2,14

      13,10,16

      7,2,8

      17,8,11

      12,12,16

      12,1,13

      8,5,2

      16,5,12

      11,9,16

      2,13,8

      13,12,1

      8,16,4

      17,6,6

      15,7,6

      8,16,15

      18,7,8

      13,6,15

      7,2,6

      5,14,15

      8,14,3

      14,12,3

      11,9,19

      4,17,11

      16,14,5

      13,12,4

      18,10,7

      9,10,1

      10,1,9

      3,9,16

      9,12,17

      6,5,3

      11,17,8

      14,7,16

      10,15,3

      3,12,8

      14,12,17

      7,16,14

      3,15,11

      12,16,13

      9,11,0

      5,7,13

      1,8,13

      11,15,13

      16,12,14

      16,12,11

      9,18,10

      16,13,9

      12,6,2

      8,16,12

      15,11,3

      7,9,18

      6,8,5

      13,16,5

      9,8,2

      2,8,4

      4,14,10

      17,12,7

      17,7,7

      17,13,10

      6,13,10

      14,10,5

      16,3,12

      6,7,15

      10,4,13

      17,6,8

      9,11,19

      16,7,10

      9,6,2

      7,14,14

      11,18,9

      15,7,14

      3,16,9

      12,16,10

      6,16,14

      14,6,10

      14,3,9

      4,5,4

      13,5,13

      12,7,15

      12,3,4

      15,8,3

      7,8,18

      14,2,12

      14,14,8

      4,14,7

      8,7,1

      2,4,10

      8,4,7

      15,7,17

      11,16,8

      14,9,17

      18,12,9

      8,15,15

      10,2,14

      11,4,14

      11,16,15

      4,12,7

      12,4,15

      9,7,3

      10,4,14

      14,5,16

      14,7,17

      5,16,11

      15,3,13

      10,5,17

      8,3,12

      5,11,15

      2,7,5

      3,8,6

      8,17,7

      13,3,9

      8,4,16

      9,2,8

      7,10,16

      11,6,4

      6,15,13

      14,8,7

      6,2,11

      15,14,15

      14,14,6

      7,8,1

      2,8,9

      13,4,6

      14,9,12

      14,6,16

      13,3,6

      4,13,5

      14,2,8

      15,15,9

      8,11,18

      7,15,5

      10,11,3

      17,14,8

      8,18,7

      7,13,2

      13,10,1

      2,14,8

      10,11,0

      6,3,12

      3,11,9

      2,6,6

      16,9,16

      11,18,14

      7,15,16

      10,16,4

      8,17,11

      13,13,5

      10,10,18

      10,16,5

      10,14,5

      12,3,3

      1,9,8

      3,5,9

      7,4,4

      13,3,11

      9,2,10

      8,4,11

      13,9,4

      6,4,4

      1,10,6

      12,10,2

      7,16,11

      7,17,5

      2,11,4

      4,11,6

      8,2,5

      13,3,15

      6,2,7

      6,17,11

      10,5,3

      6,15,9

      11,3,9

      13,14,16

      13,4,9

      17,10,13

      12,2,10

      6,17,10

      7,1,8

      4,7,6

      10,3,6

      14,10,16

      2,12,12

      4,8,5

      8,2,7

      9,4,10

      14,11,17

      6,4,12

      15,10,7

      16,6,7

      2,11,10

      11,6,3

      4,11,8

      11,17,6

      11,16,9

      4,5,12

      2,7,4

      3,14,13

      3,13,10

      13,4,13

      6,9,16

      11,7,3

      13,2,13

      9,13,4

      16,10,3

      12,8,16

      8,16,6

      16,6,12

      1,10,7

      16,10,7

      6,9,1

      11,13,15

      6,13,2

      15,9,15

      5,4,3

      16,15,12

      6,15,11

      10,2,13

      5,6,5

      17,13,6

      8,5,3

      2,7,6

      12,2,13

      12,9,18

      5,17,8

      7,9,16

      13,1,8

      5,3,6

      6,3,11

      11,1,7

      12,4,4

      14,7,2

      17,7,14

      8,1,13

      18,7,7

      10,18,8

      17,12,11

      4,10,8

      18,8,12

      1,9,10

      9,8,3

      12,11,17

      4,11,13

      7,18,8

      3,12,13

      15,13,11

      2,12,15

      3,4,6

      1,10,8

      16,6,5

      15,13,16

      14,5,6

      15,13,4

      9,19,8

      6,18,13

      4,9,15

      7,16,7

      12,8,18

      10,16,6

      12,5,13

      14,5,5

      8,5,4

      9,4,2

      17,12,13

      9,12,4

      12,7,4

      11,17,13

      13,4,15

      3,4,8

      14,7,11

      4,10,2

      13,12,13

      15,3,12

      13,10,14

      4,7,5

      5,9,2

      13,9,6

      6,2,6

      9,6,1

      3,3,10

      18,9,8

      4,15,14

      13,11,4

      14,16,14

      8,1,5

      14,13,13

      4,9,2

      9,16,10

      14,12,15

      9,14,15

      6,4,15

      12,5,7

      3,9,6

      15,14,5

      7,1,11

      15,11,5

      11,3,8

      10,9,17

      9,12,2

      5,8,5

      6,17,7

      12,7,3

      10,12,16

      2,11,14

      1,7,10

      4,8,9

      16,16,12

      2,9,5

      13,8,17

      2,8,12

      4,3,13

      16,8,4

      5,16,6

      15,5,9

      7,14,17

      13,13,4

      5,14,4

      12,3,9

      12,11,1

      11,3,14

      6,12,6

      16,9,12

      11,8,6

      9,9,3

      18,6,12

      10,5,4

      9,14,10

      13,4,8

      13,8,16

      4,13,8

      7,17,14

      10,6,18

      16,3,9

      4,11,10

      6,5,2

      14,15,15

      4,3,12

      3,16,10

      8,7,3

      3,13,12

      6,13,5

      9,17,5

      9,16,16

      11,8,17

      2,8,5

      9,6,18

      9,5,5

      16,12,8

      12,15,16

      4,14,13

      7,11,16

      15,14,13

      14,8,5

      12,11,3

      8,8,4

      14,13,8

      13,8,13

      14,14,5

      10,15,13

      14,5,13

      12,10,4

      10,12,3

      8,13,14

      0,8,9

      2,13,11

      1,12,6

      15,13,8

      9,16,15

      3,7,4

      12,10,18

      4,11,14

      10,9,2

      4,12,15

      15,12,10

      14,7,14

      3,10,7

      17,14,5

      2,11,5

      15,3,9

      4,15,5

      12,11,18

      5,1,10

      6,12,14

      4,16,8

      11,15,2

      1,9,12

      3,10,16

      10,10,16

      8,16,14

      17,7,13

      11,14,17

      5,5,3

      16,7,9

      3,14,14

      15,13,12

      13,4,12

      10,9,3

      4,9,16

      15,13,6

      7,3,5

      15,11,7

      7,4,16

      8,4,8

      4,5,3

      12,16,15

      2,12,13

      18,9,12

      11,11,3

      14,2,10

      8,14,2

      9,9,19

      16,10,6

      2,8,14

      5,6,13

      7,5,6

      14,5,10

      13,10,15

      7,7,18

      17,11,8

      12,15,9

      8,10,2

      8,18,8

      15,8,12

      7,15,11

      12,11,4

      7,13,5

      17,11,4

      2,5,9

      9,8,1

      6,15,16

      5,7,5

      12,6,5

      9,17,14

      11,11,18

      9,15,4

      10,17,9

      8,16,10

      17,11,5

      13,8,15

      18,11,13

      3,13,14

      11,11,1

      13,16,7

      15,16,12

      5,5,9

      3,12,15

      3,14,11

      2,7,14

      11,4,5

      6,6,7

      12,1,10

      3,9,4

      13,17,10

      4,17,12

      5,6,2

      13,4,10

      7,15,3

      15,11,12

      4,13,16

      9,12,15

      6,2,14

      3,7,12

      15,9,5

      13,5,6

      10,17,14

      6,15,8

      10,1,13

      17,12,4

      6,3,8

      6,5,7

      14,14,13

      17,15,11

      12,10,16

      18,8,6

      12,10,15

      17,13,14

      11,5,13

      10,3,7

      15,15,8

      12,9,1

      6,11,2

      4,14,6

      10,15,17

      7,18,6

      12,8,5

      6,11,11

      13,16,10

      6,10,18

      16,6,4

      11,6,1

      16,15,7

      6,5,13

      7,5,17

      6,17,9

      8,15,13

      12,1,11

      12,14,17

      9,2,14

      1,6,8

      9,8,16

      13,7,14

      4,14,4

      12,11,15

      1,12,7

      3,9,12

      14,7,6

      10,2,9

      10,16,8

      6,11,4

      18,9,13

      4,8,16

      4,9,17

      14,11,4

      15,16,7

      18,10,10

      18,10,13

      17,5,11

      10,13,18

      4,9,14

      5,4,4

      9,4,17

      1,10,12

      3,15,13'
    parts:
      part1: "--- Day 18: Boiling Boulders ---\nYou and the elephants finally reach\
        \ fresh air. You've emerged near the base of a large volcano that seems to\
        \ be actively erupting! Fortunately, the lava seems to be flowing away from\
        \ you and toward the ocean.\n\n\nBits of lava are still being ejected toward\
        \ you, so you're sheltering in the cavern exit a little longer. Outside the\
        \ cave, you can see the lava landing in a pond and hear it loudly hissing\
        \ as it solidifies.\n\n\nDepending on the specific compounds in the lava and\
        \ speed at which it cools, it might be forming \nobsidian\n! The cooling rate\
        \ should be based on the surface area of the lava droplets, so you take a\
        \ quick scan of a droplet as it flies past you (your puzzle input).\n\n\n\
        Because of how quickly the lava is moving, the scan isn't very good; its resolution\
        \ is quite low and, as a result, it approximates the shape of the lava droplet\
        \ with \n1x1x1 \ncubes\n on a 3D grid\n, each given as its \nx,y,z\n position.\n\
        \n\nTo approximate the surface area, count the number of sides of each cube\
        \ that are not immediately connected to another cube. So, if your scan were\
        \ only two adjacent cubes like \n1,1,1\n and \n2,1,1\n, each cube would have\
        \ a single side covered and five sides exposed, a total surface area of \n\
        10\n sides.\n\n\nHere's a larger example:\n\n\n2,2,2\n1,2,2\n3,2,2\n2,1,2\n\
        2,3,2\n2,2,1\n2,2,3\n2,2,4\n2,2,6\n1,2,5\n3,2,5\n2,1,5\n2,3,5\n\n\n\nIn the\
        \ above example, after counting up all the sides that aren't connected to\
        \ another cube, the total surface area is \n64\n.\n\n\nWhat is the surface\
        \ area of your scanned lava droplet?"
      part2: ''
    title: '--- Day 18: Boiling Boulders ---'
  19:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: 'Blueprint 1: Each ore robot costs 3 ore. Each clay robot costs 4 ore.
      Each obsidian robot costs 2 ore and 20 clay. Each geode robot costs 4 ore and
      7 obsidian.

      Blueprint 2: Each ore robot costs 2 ore. Each clay robot costs 2 ore. Each obsidian
      robot costs 2 ore and 17 clay. Each geode robot costs 2 ore and 10 obsidian.

      Blueprint 3: Each ore robot costs 2 ore. Each clay robot costs 3 ore. Each obsidian
      robot costs 3 ore and 18 clay. Each geode robot costs 2 ore and 19 obsidian.

      Blueprint 4: Each ore robot costs 4 ore. Each clay robot costs 3 ore. Each obsidian
      robot costs 4 ore and 18 clay. Each geode robot costs 4 ore and 11 obsidian.

      Blueprint 5: Each ore robot costs 4 ore. Each clay robot costs 4 ore. Each obsidian
      robot costs 2 ore and 10 clay. Each geode robot costs 3 ore and 14 obsidian.

      Blueprint 6: Each ore robot costs 4 ore. Each clay robot costs 3 ore. Each obsidian
      robot costs 3 ore and 15 clay. Each geode robot costs 2 ore and 13 obsidian.

      Blueprint 7: Each ore robot costs 2 ore. Each clay robot costs 4 ore. Each obsidian
      robot costs 4 ore and 11 clay. Each geode robot costs 3 ore and 8 obsidian.

      Blueprint 8: Each ore robot costs 4 ore. Each clay robot costs 3 ore. Each obsidian
      robot costs 4 ore and 16 clay. Each geode robot costs 2 ore and 15 obsidian.

      Blueprint 9: Each ore robot costs 3 ore. Each clay robot costs 4 ore. Each obsidian
      robot costs 2 ore and 15 clay. Each geode robot costs 3 ore and 7 obsidian.

      Blueprint 10: Each ore robot costs 2 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 4 ore and 16 clay. Each geode robot costs 3 ore and 13
      obsidian.

      Blueprint 11: Each ore robot costs 2 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 4 ore and 17 clay. Each geode robot costs 3 ore and 11
      obsidian.

      Blueprint 12: Each ore robot costs 2 ore. Each clay robot costs 3 ore. Each
      obsidian robot costs 3 ore and 11 clay. Each geode robot costs 2 ore and 16
      obsidian.

      Blueprint 13: Each ore robot costs 4 ore. Each clay robot costs 3 ore. Each
      obsidian robot costs 3 ore and 10 clay. Each geode robot costs 3 ore and 10
      obsidian.

      Blueprint 14: Each ore robot costs 4 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 4 ore and 8 clay. Each geode robot costs 2 ore and 15 obsidian.

      Blueprint 15: Each ore robot costs 3 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 4 ore and 19 clay. Each geode robot costs 4 ore and 11
      obsidian.

      Blueprint 16: Each ore robot costs 2 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 3 ore and 17 clay. Each geode robot costs 4 ore and 20
      obsidian.

      Blueprint 17: Each ore robot costs 2 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 3 ore and 19 clay. Each geode robot costs 4 ore and 8 obsidian.

      Blueprint 18: Each ore robot costs 3 ore. Each clay robot costs 3 ore. Each
      obsidian robot costs 3 ore and 9 clay. Each geode robot costs 3 ore and 7 obsidian.

      Blueprint 19: Each ore robot costs 4 ore. Each clay robot costs 3 ore. Each
      obsidian robot costs 3 ore and 7 clay. Each geode robot costs 2 ore and 7 obsidian.

      Blueprint 20: Each ore robot costs 4 ore. Each clay robot costs 3 ore. Each
      obsidian robot costs 2 ore and 13 clay. Each geode robot costs 2 ore and 9 obsidian.

      Blueprint 21: Each ore robot costs 2 ore. Each clay robot costs 3 ore. Each
      obsidian robot costs 3 ore and 13 clay. Each geode robot costs 2 ore and 20
      obsidian.

      Blueprint 22: Each ore robot costs 2 ore. Each clay robot costs 3 ore. Each
      obsidian robot costs 3 ore and 9 clay. Each geode robot costs 3 ore and 9 obsidian.

      Blueprint 23: Each ore robot costs 4 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 4 ore and 18 clay. Each geode robot costs 4 ore and 9 obsidian.

      Blueprint 24: Each ore robot costs 3 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 4 ore and 5 clay. Each geode robot costs 4 ore and 8 obsidian.

      Blueprint 25: Each ore robot costs 4 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 4 ore and 14 clay. Each geode robot costs 3 ore and 16
      obsidian.

      Blueprint 26: Each ore robot costs 4 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 3 ore and 20 clay. Each geode robot costs 2 ore and 10
      obsidian.

      Blueprint 27: Each ore robot costs 4 ore. Each clay robot costs 3 ore. Each
      obsidian robot costs 4 ore and 15 clay. Each geode robot costs 4 ore and 9 obsidian.

      Blueprint 28: Each ore robot costs 4 ore. Each clay robot costs 3 ore. Each
      obsidian robot costs 2 ore and 15 clay. Each geode robot costs 2 ore and 8 obsidian.

      Blueprint 29: Each ore robot costs 3 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 3 ore and 13 clay. Each geode robot costs 3 ore and 19
      obsidian.

      Blueprint 30: Each ore robot costs 4 ore. Each clay robot costs 4 ore. Each
      obsidian robot costs 2 ore and 18 clay. Each geode robot costs 4 ore and 20
      obsidian.'
    parts:
      part1: "--- Day 19: Not Enough Minerals ---\nYour scans show that the lava did\
        \ indeed form obsidian!\n\n\nThe wind has changed direction enough to stop\
        \ sending lava droplets toward you, so you and the elephants exit the cave.\
        \ As you do, you notice a collection of \ngeodes\n around the pond. Perhaps\
        \ you could use the obsidian to create some \ngeode-cracking robots\n and\
        \ break them open?\n\n\nTo collect the obsidian from the bottom of the pond,\
        \ you'll need waterproof \nobsidian-collecting robots\n. Fortunately, there\
        \ is an abundant amount of clay nearby that you can use to make them waterproof.\n\
        \n\nIn order to harvest the clay, you'll need special-purpose \nclay-collecting\
        \ robots\n. To make any type of robot, you'll need \nore\n, which is also\
        \ plentiful but in the opposite direction from the clay.\n\n\nCollecting ore\
        \ requires \nore-collecting robots\n with big drills. Fortunately, \nyou have\
        \ exactly one ore-collecting robot\n in your pack that you can use to \nkickstart\n\
        \ the whole operation.\n\n\nEach robot can collect 1 of its resource type\
        \ per minute. It also takes one minute for the robot factory (also conveniently\
        \ from your pack) to construct any type of robot, although it consumes the\
        \ necessary resources available when construction begins.\n\n\nThe robot factory\
        \ has many \nblueprints\n (your puzzle input) you can choose from, but once\
        \ you've configured it with a blueprint, you can't change it. You'll need\
        \ to work out which blueprint is best.\n\n\nFor example:\n\n\nBlueprint 1:\n\
        \  Each ore robot costs 4 ore.\n  Each clay robot costs 2 ore.\n  Each obsidian\
        \ robot costs 3 ore and 14 clay.\n  Each geode robot costs 2 ore and 7 obsidian.\n\
        \nBlueprint 2:\n  Each ore robot costs 2 ore.\n  Each clay robot costs 3 ore.\n\
        \  Each obsidian robot costs 3 ore and 8 clay.\n  Each geode robot costs 3\
        \ ore and 12 obsidian.\n\n\n\n(Blueprints have been line-wrapped here for\
        \ legibility. The robot factory's actual assortment of blueprints are provided\
        \ one blueprint per line.)\n\n\nThe elephants are starting to look hungry,\
        \ so you shouldn't take too long; you need to figure out which blueprint would\
        \ maximize the number of opened geodes after \n24 minutes\n by figuring out\
        \ which robots to build and when to build them.\n\n\nUsing blueprint 1 in\
        \ the example above, the largest number of geodes you could open in 24 minutes\
        \ is \n9\n. One way to achieve that is:\n\n\n== Minute 1 ==\n1 ore-collecting\
        \ robot collects 1 ore; you now have 1 ore.\n\n== Minute 2 ==\n1 ore-collecting\
        \ robot collects 1 ore; you now have 2 ore.\n\n== Minute 3 ==\nSpend 2 ore\
        \ to start building a clay-collecting robot.\n1 ore-collecting robot collects\
        \ 1 ore; you now have 1 ore.\nThe new clay-collecting robot is ready; you\
        \ now have 1 of them.\n\n== Minute 4 ==\n1 ore-collecting robot collects 1\
        \ ore; you now have 2 ore.\n1 clay-collecting robot collects 1 clay; you now\
        \ have 1 clay.\n\n== Minute 5 ==\nSpend 2 ore to start building a clay-collecting\
        \ robot.\n1 ore-collecting robot collects 1 ore; you now have 1 ore.\n1 clay-collecting\
        \ robot collects 1 clay; you now have 2 clay.\nThe new clay-collecting robot\
        \ is ready; you now have 2 of them.\n\n== Minute 6 ==\n1 ore-collecting robot\
        \ collects 1 ore; you now have 2 ore.\n2 clay-collecting robots collect 2\
        \ clay; you now have 4 clay.\n\n== Minute 7 ==\nSpend 2 ore to start building\
        \ a clay-collecting robot.\n1 ore-collecting robot collects 1 ore; you now\
        \ have 1 ore.\n2 clay-collecting robots collect 2 clay; you now have 6 clay.\n\
        The new clay-collecting robot is ready; you now have 3 of them.\n\n== Minute\
        \ 8 ==\n1 ore-collecting robot collects 1 ore; you now have 2 ore.\n3 clay-collecting\
        \ robots collect 3 clay; you now have 9 clay.\n\n== Minute 9 ==\n1 ore-collecting\
        \ robot collects 1 ore; you now have 3 ore.\n3 clay-collecting robots collect\
        \ 3 clay; you now have 12 clay.\n\n== Minute 10 ==\n1 ore-collecting robot\
        \ collects 1 ore; you now have 4 ore.\n3 clay-collecting robots collect 3\
        \ clay; you now have 15 clay.\n\n== Minute 11 ==\nSpend 3 ore and 14 clay\
        \ to start building an obsidian-collecting robot.\n1 ore-collecting robot\
        \ collects 1 ore; you now have 2 ore.\n3 clay-collecting robots collect 3\
        \ clay; you now have 4 clay.\nThe new obsidian-collecting robot is ready;\
        \ you now have 1 of them.\n\n== Minute 12 ==\nSpend 2 ore to start building\
        \ a clay-collecting robot.\n1 ore-collecting robot collects 1 ore; you now\
        \ have 1 ore.\n3 clay-collecting robots collect 3 clay; you now have 7 clay.\n\
        1 obsidian-collecting robot collects 1 obsidian; you now have 1 obsidian.\n\
        The new clay-collecting robot is ready; you now have 4 of them.\n\n== Minute\
        \ 13 ==\n1 ore-collecting robot collects 1 ore; you now have 2 ore.\n4 clay-collecting\
        \ robots collect 4 clay; you now have 11 clay.\n1 obsidian-collecting robot\
        \ collects 1 obsidian; you now have 2 obsidian.\n\n== Minute 14 ==\n1 ore-collecting\
        \ robot collects 1 ore; you now have 3 ore.\n4 clay-collecting robots collect\
        \ 4 clay; you now have 15 clay.\n1 obsidian-collecting robot collects 1 obsidian;\
        \ you now have 3 obsidian.\n\n== Minute 15 ==\nSpend 3 ore and 14 clay to\
        \ start building an obsidian-collecting robot.\n1 ore-collecting robot collects\
        \ 1 ore; you now have 1 ore.\n4 clay-collecting robots collect 4 clay; you\
        \ now have 5 clay.\n1 obsidian-collecting robot collects 1 obsidian; you now\
        \ have 4 obsidian.\nThe new obsidian-collecting robot is ready; you now have\
        \ 2 of them.\n\n== Minute 16 ==\n1 ore-collecting robot collects 1 ore; you\
        \ now have 2 ore.\n4 clay-collecting robots collect 4 clay; you now have 9\
        \ clay.\n2 obsidian-collecting robots collect 2 obsidian; you now have 6 obsidian.\n\
        \n== Minute 17 ==\n1 ore-collecting robot collects 1 ore; you now have 3 ore.\n\
        4 clay-collecting robots collect 4 clay; you now have 13 clay.\n2 obsidian-collecting\
        \ robots collect 2 obsidian; you now have 8 obsidian.\n\n== Minute 18 ==\n\
        Spend 2 ore and 7 obsidian to start building a geode-cracking robot.\n1 ore-collecting\
        \ robot collects 1 ore; you now have 2 ore.\n4 clay-collecting robots collect\
        \ 4 clay; you now have 17 clay.\n2 obsidian-collecting robots collect 2 obsidian;\
        \ you now have 3 obsidian.\nThe new geode-cracking robot is ready; you now\
        \ have 1 of them.\n\n== Minute 19 ==\n1 ore-collecting robot collects 1 ore;\
        \ you now have 3 ore.\n4 clay-collecting robots collect 4 clay; you now have\
        \ 21 clay.\n2 obsidian-collecting robots collect 2 obsidian; you now have\
        \ 5 obsidian.\n1 geode-cracking robot cracks 1 geode; you now have 1 open\
        \ geode.\n\n== Minute 20 ==\n1 ore-collecting robot collects 1 ore; you now\
        \ have 4 ore.\n4 clay-collecting robots collect 4 clay; you now have 25 clay.\n\
        2 obsidian-collecting robots collect 2 obsidian; you now have 7 obsidian.\n\
        1 geode-cracking robot cracks 1 geode; you now have 2 open geodes.\n\n== Minute\
        \ 21 ==\nSpend 2 ore and 7 obsidian to start building a geode-cracking robot.\n\
        1 ore-collecting robot collects 1 ore; you now have 3 ore.\n4 clay-collecting\
        \ robots collect 4 clay; you now have 29 clay.\n2 obsidian-collecting robots\
        \ collect 2 obsidian; you now have 2 obsidian.\n1 geode-cracking robot cracks\
        \ 1 geode; you now have 3 open geodes.\nThe new geode-cracking robot is ready;\
        \ you now have 2 of them.\n\n== Minute 22 ==\n1 ore-collecting robot collects\
        \ 1 ore; you now have 4 ore.\n4 clay-collecting robots collect 4 clay; you\
        \ now have 33 clay.\n2 obsidian-collecting robots collect 2 obsidian; you\
        \ now have 4 obsidian.\n2 geode-cracking robots crack 2 geodes; you now have\
        \ 5 open geodes.\n\n== Minute 23 ==\n1 ore-collecting robot collects 1 ore;\
        \ you now have 5 ore.\n4 clay-collecting robots collect 4 clay; you now have\
        \ 37 clay.\n2 obsidian-collecting robots collect 2 obsidian; you now have\
        \ 6 obsidian.\n2 geode-cracking robots crack 2 geodes; you now have 7 open\
        \ geodes.\n\n== Minute 24 ==\n1 ore-collecting robot collects 1 ore; you now\
        \ have 6 ore.\n4 clay-collecting robots collect 4 clay; you now have 41 clay.\n\
        2 obsidian-collecting robots collect 2 obsidian; you now have 8 obsidian.\n\
        2 geode-cracking robots crack 2 geodes; you now have 9 open geodes.\n\n\n\n\
        However, by using blueprint 2 in the example above, you could do even better:\
        \ the largest number of geodes you could open in 24 minutes is \n12\n.\n\n\
        \nDetermine the \nquality level\n of each blueprint by \nmultiplying that\
        \ blueprint's ID number\n with the largest number of geodes that can be opened\
        \ in 24 minutes using that blueprint. In this example, the first blueprint\
        \ has ID 1 and can open 9 geodes, so its quality level is \n9\n. The second\
        \ blueprint has ID 2 and can open 12 geodes, so its quality level is \n24\n\
        . Finally, if you \nadd up the quality levels\n of all of the blueprints in\
        \ the list, you get \n33\n.\n\n\nDetermine the quality level of each blueprint\
        \ using the largest number of geodes it could produce in 24 minutes. \nWhat\
        \ do you get if you add up the quality level of all of the blueprints in your\
        \ list?"
      part2: ''
    title: '--- Day 19: Not Enough Minerals ---'
  20:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: '-5623

      -6348

      -3664

      5754

      -1410

      -7634

      -4708

      7273

      -5741

      1906

      256

      -4554

      5995

      -6030

      -1872

      -1031

      2193

      2912

      1425

      7830

      5063

      -6478

      -4156

      1993

      -3710

      -6446

      4349

      -5072

      -8699

      2795

      7437

      2333

      -2894

      1076

      -6406

      -5057

      1198

      1557

      -7008

      -8555

      2233

      6866

      -9102

      -192

      8494

      2722

      9758

      -3196

      5709

      7542

      7454

      8132

      -9434

      6819

      1718

      -1189

      -351

      -4536

      9278

      8761

      3282

      3856

      9665

      1344

      -9551

      4601

      -4773

      1747

      1802

      3357

      5830

      5036

      8807

      -2459

      -6451

      -5832

      -2591

      2018

      -312

      6482

      9416

      8505

      2891

      -189

      -5154

      -371

      5220

      -7880

      -275

      -6494

      8192

      -4602

      -8688

      -7218

      -7273

      1735

      5587

      -766

      -9525

      -3179

      -1404

      1227

      -76

      -2153

      9692

      -4016

      -8329

      -9620

      3408

      -3959

      -4400

      8600

      -6255

      395

      1809

      8682

      -4561

      -7952

      9727

      6382

      2798

      -2775

      -9130

      -4465

      -7119

      -6133

      -2512

      -5466

      -8446

      -4389

      6386

      -5630

      -3559

      -1516

      -3485

      -8969

      4953

      -9981

      -1505

      5965

      -8754

      -8226

      8687

      6485

      2897

      4215

      -1200

      2226

      9620

      -8899

      -8283

      3379

      9642

      -2584

      -6776

      9558

      -7277

      6925

      4107

      -1758

      6980

      6596

      -6315

      7218

      -7040

      7980

      -686

      -9156

      -3559

      -6773

      -5243

      173

      5074

      7044

      3588

      9306

      -7907

      -5135

      220

      5864

      -7036

      -9708

      5323

      -7974

      6476

      7849

      -6721

      -1810

      -8018

      -2852

      -3072

      6813

      -4570

      7607

      4776

      9958

      947

      -9634

      6364

      -5502

      -3870

      -852

      -7923

      -3637

      2676

      -8468

      -1403

      2999

      -7092

      -7881

      254

      -9092

      -2747

      9140

      1700

      -5120

      4586

      9374

      92

      -4435

      9064

      -7824

      -6239

      4580

      -9947

      945

      1682

      -4930

      5470

      -7970

      -917

      3677

      1385

      -891

      6969

      -3765

      -7650

      -8545

      -369

      7454

      879

      8130

      8150

      5662

      1319

      4735

      7250

      -8803

      362

      8024

      2132

      362

      -4108

      7044

      -4212

      1086

      -7192

      -2624

      -140

      -8555

      -4208

      7625

      9416

      -437

      8406

      -5023

      -3057

      9827

      7626

      1266

      6997

      -4053

      27

      563

      -6188

      4598

      -7016

      1948

      -941

      -9010

      4701

      -4121

      205

      -7932

      7689

      1802

      -6443

      -2116

      4549

      -3177

      -9664

      4674

      -1952

      4025

      9851

      -5139

      6170

      5357

      3274

      -7032

      -917

      -2627

      -2716

      4276

      2574

      -2683

      -647

      7241

      -7843

      9934

      -1414

      -3263

      2125

      8132

      8475

      -3693

      -2674

      -9784

      -957

      -7928

      -5452

      -8147

      6602

      -7707

      -8715

      -6131

      -3802

      -4389

      7627

      1522

      187

      -8539

      -5298

      -7876

      7673

      6244

      8941

      -5780

      9473

      3631

      8780

      5018

      9612

      -2352

      2898

      1812

      7863

      9229

      -6020

      -4658

      8166

      -3314

      311

      -4409

      1003

      -662

      -7271

      -5426

      5009

      -5892

      900

      8455

      -5646

      -8876

      -3783

      -4997

      -5953

      -3061

      -2747

      -6617

      -3685

      -6794

      9188

      -502

      6939

      -9382

      3167

      -2980

      -9433

      -5862

      -800

      5829

      7664

      -5607

      2212

      -9224

      5296

      -653

      -7679

      9760

      5271

      9171

      1952

      -1771

      4674

      -9037

      1774

      -800

      -4461

      7817

      2571

      1706

      -9784

      704

      969

      -1441

      -3543

      -1999

      2281

      3112

      -6816

      5436

      -3136

      -3294

      -3401

      7867

      1158

      7454

      192

      2193

      -7448

      -7203

      1246

      4504

      4308

      3746

      9618

      -7175

      8599

      -2352

      6235

      4968

      -1985

      2656

      7431

      2848

      4788

      7187

      -5463

      1739

      7581

      2526

      3408

      -4838

      -1201

      -3146

      -8866

      4122

      3776

      -9223

      5775

      6648

      810

      -1114

      -1362

      7283

      -8010

      -46

      5887

      -6625

      -3655

      -9577

      5809

      284

      1533

      6267

      7475

      -2568

      -5880

      -5603

      -6325

      -6601

      -3354

      4628

      6220

      -4741

      -7498

      -7894

      5407

      6511

      -2399

      9806

      1258

      6671

      3844

      -7209

      7492

      -3273

      -5714

      2388

      -6425

      1557

      4558

      -6325

      5864

      -5953

      -7787

      -5214

      147

      2725

      1304

      2401

      -4689

      6570

      -7442

      -4829

      -7796

      -4908

      -131

      -4605

      3033

      -9667

      5019

      -1878

      -4697

      7844

      -437

      3807

      -1239

      7878

      6969

      5296

      5544

      7536

      8153

      -8396

      -8044

      -1267

      -5281

      -3771

      -4465

      8074

      -3967

      -8913

      -3424

      -7207

      -5527

      4909

      1101

      1395

      2946

      -7533

      -7845

      5598

      -4560

      6426

      -9303

      9149

      8560

      9253

      7721

      -5106

      8965

      7454

      2981

      7581

      2898

      -6757

      -882

      -3085

      9880

      4925

      3572

      8325

      1931

      301

      -723

      -6583

      5501

      -3783

      -5484

      5754

      5164

      1220

      -9797

      -2037

      -9743

      2513

      -5367

      -9929

      -5663

      -955

      6014

      4228

      -6187

      -7896

      5477

      2847

      6260

      -1503

      -4500

      7688

      7025

      9371

      -9327

      9488

      -8022

      -4538

      -8230

      -6059

      -3108

      -7600

      5436

      2276

      417

      974

      1282

      6437

      -5666

      -9697

      -8399

      8114

      -1477

      -4803

      -559

      4605

      3316

      -7757

      1723

      5097

      6242

      -9963

      2307

      810

      4284

      -3412

      -3663

      2859

      5929

      5678

      -5161

      754

      -6865

      -2549

      -5641

      4312

      4737

      -8295

      -7324

      -7806

      -5580

      468

      5704

      5522

      -7202

      6724

      1244

      -102

      -7021

      -3629

      -1119

      3208

      -1033

      1749

      -376

      -889

      -5184

      -2958

      4163

      -1396

      -3194

      5705

      -5954

      9931

      -7916

      -6080

      -3039

      6617

      5323

      -57

      8818

      -8850

      7211

      -2691

      -225

      2885

      -9976

      855

      1970

      -491

      -8585

      1692

      -3379

      3308

      5908

      3929

      -9201

      6310

      -81

      -5002

      -1334

      1721

      -8165

      -6523

      -749

      -8044

      5743

      8156

      1047

      -8398

      7562

      927

      6119

      -4743

      -7189

      8720

      -3910

      3963

      -814

      4329

      -4638

      -8969

      683

      -4128

      5635

      2851

      -7256

      7327

      9065

      -7661

      -230

      1476

      1746

      6040

      6890

      7356

      1881

      -8460

      8873

      2313

      9719

      2134

      -7101

      4321

      7406

      629

      -9784

      8864

      500

      -4283

      -85

      3054

      -9346

      -3961

      9612

      -2916

      5130

      650

      -8116

      -746

      -4128

      -1702

      6538

      -2496

      918

      6528

      -2135

      419

      2292

      -8850

      9764

      1471

      3429

      3530

      -8317

      1696

      -4283

      -9967

      7100

      7565

      6009

      -4496

      3757

      -8647

      -1170

      -4650

      -3367

      4165

      1920

      143

      3563

      -1098

      -5743

      -6439

      5929

      6048

      -3476

      6621

      8276

      1654

      -9927

      -4542

      -8591

      2018

      -9413

      -2571

      -8257

      9212

      -5953

      -2079

      3999

      -8323

      -7414

      -5202

      3898

      6852

      5749

      -2427

      -3061

      -1232

      -344

      -5110

      -7579

      -7609

      -7856

      2050

      2237

      -1232

      -1870

      4191

      1243

      -9804

      5495

      -1764

      -5580

      9793

      -4912

      -3686

      -9001

      521

      2230

      49

      7171

      -8586

      7970

      -3586

      4673

      -6776

      8772

      4279

      -1091

      1369

      4471

      7945

      7820

      5106

      554

      7761

      4346

      -9392

      -9050

      -4809

      -5837

      -2927

      -2425

      9374

      2333

      -3414

      1335

      -9240

      6462

      -6880

      3924

      110

      -4777

      -9356

      9167

      -9577

      -9104

      -9913

      1423

      3082

      -3313

      -8437

      -3152

      3050

      9840

      -2085

      -4249

      2337

      -9269

      493

      -455

      8858

      -7090

      -3552

      -5430

      -28

      -796

      3602

      -7101

      8212

      9827

      3804

      -2001

      563

      -5219

      -4299

      -8972

      -8227

      -665

      41

      -7252

      -7419

      2828

      -3667

      -2212

      -4212

      -1800

      7622

      7029

      -6907

      8022

      -1694

      6511

      -8525

      -1582

      8353

      958

      -7363

      -9248

      -5473

      8269

      3055

      7468

      -3257

      6056

      3316

      8468

      4195

      -1113

      3779

      -2201

      -5095

      3856

      3194

      -2819

      6802

      7171

      -5817

      4978

      4200

      3103

      2116

      -4777

      6426

      1344

      -3045

      6067

      6647

      7758

      1359

      -598

      4717

      8344

      4365

      6613

      1349

      596

      5704

      5276

      -4858

      -5765

      -5580

      6550

      -505

      -9276

      5754

      -1414

      3406

      7589

      7946

      2063

      9196

      1774

      -6315

      8983

      8479

      3677

      7760

      5948

      7101

      8407

      7890

      -4449

      -8700

      -1538

      -1904

      -2159

      2091

      -6813

      9936

      2290

      -5331

      3263

      2605

      -2591

      -9560

      9730

      4673

      -5877

      3255

      4586

      -1998

      4099

      9385

      -8252

      -5953

      -3159

      2795

      8494

      -8010

      -6850

      -9127

      -1516

      -1475

      -3337

      489

      3208

      5667

      -2129

      8037

      -1523

      -5972

      -5429

      9420

      5835

      8389

      -6495

      -9668

      -4029

      -7189

      4487

      -6101

      6066

      769

      1679

      -6646

      5450

      8155

      3579

      -3177

      -909

      5829

      -1083

      4964

      -1601

      5611

      -8204

      -8012

      -4025

      1959

      9932

      -3686

      4741

      -7371

      -7004

      -5077

      883

      -4377

      -2383

      -8981

      -476

      700

      1158

      -7309

      7557

      4273

      -131

      3807

      662

      -2404

      -2199

      2176

      4918

      662

      8225

      9974

      -3817

      3808

      1614

      6691

      7485

      9967

      -6245

      9598

      -426

      -1136

      -1200

      4798

      -9309

      -5140

      7844

      300

      -9058

      -439

      6174

      -3316

      5990

      -8654

      5064

      -455

      9414

      5746

      254

      3529

      -9562

      -4821

      9149

      1206

      6917

      4347

      -3788

      -635

      -6721

      8344

      4085

      2675

      9883

      8632

      2247

      1932

      9904

      -1136

      -5064

      -8591

      -2682

      -6865

      -2713

      -4711

      -8506

      -7648

      -442

      2581

      -5844

      6331

      -446

      5164

      -5844

      3456

      2782

      -3248

      5450

      7485

      -7951

      4851

      8489

      5052

      6866

      -6385

      627

      1436

      7029

      5836

      4492

      3433

      -1098

      5924

      4466

      3563

      -8390

      2134

      -3278

      2656

      6020

      5018

      -6185

      -2127

      9012

      8573

      -9538

      372

      -689

      6526

      1589

      -8146

      8604

      -6274

      -2498

      -4116

      7020

      5984

      8441

      -9569

      3798

      3249

      9810

      7400

      -320

      -1225

      7250

      -1282

      -6162

      6221

      -6010

      6094

      -3538

      -7737

      -5067

      1361

      2462

      -6581

      6310

      4477

      4143

      -4559

      2611

      -3219

      9935

      9776

      -6928

      -559

      302

      8157

      5032

      -1232

      4632

      740

      -3683

      6200

      8061

      4674

      342

      -2648

      2676

      5027

      -880

      86

      2977

      -9668

      -1414

      2762

      7074

      -8516

      6760

      9324

      4053

      -7277

      -4108

      9522

      -3862

      5586

      -4240

      -4975

      -2846

      2102

      5718

      -9420

      5268

      9070

      5829

      -6235

      774

      6111

      -8111

      6332

      3101

      -1242

      -6027

      341

      -6581

      8382

      -2349

      -1644

      4229

      2470

      2233

      -7202

      5703

      8553

      860

      3431

      -2446

      6039

      -6312

      5470

      1615

      -1315

      -3532

      -9065

      9285

      2242

      3958

      -291

      1086

      3000

      8413

      -3456

      7120

      -9574

      -8884

      8185

      1791

      1965

      -9927

      -829

      7920

      -2329

      8858

      -9154

      9097

      9313

      3892

      3488

      -9467

      5514

      4909

      7907

      -1082

      -1527

      8762

      2656

      -1728

      -8346

      -8353

      -4857

      -9956

      -6324

      -2534

      -307

      -7386

      -9251

      3661

      -474

      4059

      5741

      -5781

      7863

      3895

      6038

      2099

      -9408

      -1514

      6577

      6539

      -241

      -2473

      3813

      4492

      -9653

      -6541

      9139

      -4271

      -729

      7520

      9705

      4224

      -2675

      4152

      7110

      9673

      5341

      8628

      9093

      3656

      -6625

      1578

      696

      -3888

      431

      2274

      -7624

      7430

      -8772

      5420

      -7475

      493

      -756

      -8375

      -5077

      -7930

      -3906

      5185

      5917

      -9963

      9236

      1023

      -76

      8986

      4172

      -2110

      6056

      4275

      -7971

      -5096

      1572

      -7832

      7076

      7871

      6026

      -1032

      5113

      -4416

      9834

      -1747

      -5394

      -8044

      111

      -8925

      4698

      -5404

      -1970

      -6255

      -4777

      20

      999

      300

      7844

      5017

      -2434

      -5836

      4859

      -3200

      9214

      5264

      -1869

      -7653

      4371

      -3199

      -9471

      -1998

      -8647

      7457

      2226

      5629

      8318

      -2365

      7201

      3000

      131

      2143

      426

      5602

      679

      1393

      -6185

      5251

      8204

      5533

      -747

      147

      -1032

      3215

      5763

      -151

      6602

      2667

      2402

      9236

      9598

      8964

      -287

      8088

      -4093

      9983

      707

      -2718

      7110

      1906

      1797

      -2000

      2788

      3992

      -2366

      6578

      -150

      5537

      4321

      5864

      666

      -9482

      5864

      -8699

      -8686

      2280

      3776

      -5096

      7143

      -2756

      -8367

      8331

      -2551

      9655

      -4311

      -6581

      -1934

      2051

      3406

      -8704

      8540

      -3138

      -8166

      3126

      -231

      -882

      -838

      7010

      4432

      -9845

      6056

      -2724

      -7169

      -3380

      740

      -5566

      -1003

      7862

      -1330

      9721

      9125

      -4117

      5010

      -3586

      -7191

      -781

      1236

      -7028

      -8479

      -4963

      2125

      -9565

      -4786

      -7455

      -3735

      -455

      -4658

      1791

      -6439

      7509

      1640

      -7973

      -3989

      5149

      -6802

      2946

      6678

      -8328

      -9240

      -3835

      -9471

      -5817

      8407

      50

      -8686

      6515

      5817

      4837

      -6274

      9826

      604

      1335

      -8744

      5704

      9808

      2176

      -1705

      8385

      -7624

      -1449

      -609

      -3817

      1994

      -5189

      -174

      9538

      376

      61

      7968

      8011

      -3108

      8155

      6784

      5221

      -4400

      -382

      -7770

      5690

      761

      9644

      7656

      4161

      4989

      -9110

      9349

      -8394

      -3050

      -4152

      -1063

      3363

      1083

      2094

      -3796

      -3552

      -4349

      -4047

      -8617

      5414

      -556

      -3396

      -9233

      3295

      8612

      -9981

      -1565

      2815

      6284

      -85

      32

      -6130

      5032

      7685

      6100

      4451

      -1593

      6971

      6757

      -9040

      6174

      1168

      4305

      -2371

      -1553

      -598

      302

      5791

      2339

      -2450

      -7819

      9192

      -2682

      -112

      -7110

      6206

      3431

      -9524

      9064

      -5244

      4062

      1533

      -6031

      381

      1143

      -5176

      -4752

      -4400

      8020

      -2986

      6421

      -4038

      3486

      -6402

      6678

      -3749

      7485

      9635

      706

      -36

      6066

      761

      -5002

      3909

      8413

      1536

      4073

      6749

      -5243

      1682

      3631

      3269

      -7524

      3798

      -9057

      7850

      5929

      -6921

      9568

      9522

      4259

      8228

      -5135

      7791

      -4752

      -3713

      -9189

      5521

      -6773

      2900

      5477

      4183

      3958

      4106

      7106

      8140

      -3519

      8185

      -1904

      -1838

      1278

      7368

      197

      3672

      5538

      2804

      5711

      6969

      -2606

      -9850

      -8151

      9482

      -2525

      -355

      -3258

      -6631

      -2799

      -8938

      663

      -9538

      -268

      -5227

      -7955

      9229

      2600

      -2307

      9723

      -3766

      8396

      3503

      2322

      9070

      5845

      9907

      9934

      -4174

      6387

      -9258

      -7899

      9651

      3530

      9173

      -7857

      -2441

      5824

      -9765

      9639

      -4580

      7631

      -7054

      -280

      -7462

      -4121

      -7355

      -3040

      7871

      1302

      -4385

      2595

      -6967

      9994

      1072

      -4958

      -9488

      -4633

      5718

      -1603

      -5329

      -4237

      2056

      8781

      7024

      8344

      1365

      4092

      -2211

      -3713

      -262

      -2549

      6948

      -3454

      -8315

      -7208

      8103

      9901

      -7396

      6804

      9320

      7189

      5903

      -4264

      3145

      6494

      -8292

      -4858

      5447

      7830

      -7005

      3395

      9980

      9974

      6784

      -2231

      1246

      -6798

      -4131

      -676

      4674

      -4312

      4276

      -3385

      -8542

      -954

      650

      1931

      -826

      -3651

      8722

      -2242

      4160

      -8664

      8500

      8344

      -7695

      6100

      -731

      5831

      3031

      -2421

      -9522

      -5327

      3120

      -9206

      855

      6008

      6989

      -6189

      3646

      -2921

      9717

      7322

      4437

      -1312

      -1117

      -1472

      -4818

      5965

      -7583

      41

      -113

      6034

      8080

      -5611

      -2436

      -9214

      -6110

      -5379

      -1614

      -2662

      -7313

      -4456

      -2512

      -1091

      -3371

      -7556

      2119

      5582

      5361

      -8816

      402

      -6641

      1505

      2199

      -9542

      3679

      -9416

      -181

      6795

      9277

      2420

      6015

      -7865

      -1172

      913

      7434

      -3805

      -308

      -2869

      5380

      -395

      6136

      -9845

      7875

      -1978

      2735

      6949

      -3337

      -8714

      5444

      -5737

      -9154

      -907

      -6379

      -3292

      6069

      5120

      7095

      -7172

      -1938

      8339

      9470

      -6716

      8130

      9287

      -2150

      -8147

      2103

      -231

      7242

      -1113

      -9471

      1948

      2365

      -7193

      8981

      -1829

      7867

      5221

      398

      -3017

      -4792

      -1039

      1351

      1168

      5391

      -5940

      4882

      150

      -4523

      6111

      2860

      1536

      -559

      -337

      -9827

      493

      6437

      9930

      5464

      -2724

      -9698

      -8715

      4165

      -8416

      2951

      -5838

      -9701

      -7509

      163

      8403

      -8504

      -7162

      -8569

      7058

      -3729

      8469

      126

      6528

      4432

      -734

      -1501

      -3983

      6147

      -5741

      5082

      2564

      3241

      4798

      -78

      -2980

      -6836

      -1934

      7030

      -5675

      -5735

      -8203

      -1441

      -7443

      2918

      -6089

      154

      -157

      -3071

      3441

      9980

      -1551

      -8945

      -4786

      -3817

      -1283

      -5622

      9004

      314

      9012

      -6068

      -9213

      -1909

      -7739

      5864

      668

      7618

      -4818

      -3746

      8855

      -4323

      9665

      -4784

      3858

      7689

      -8633

      4693

      2828

      -2854

      -6996

      8030

      -7825

      4714

      7656

      -6541

      2912

      -9032

      -1312

      8291

      5357

      -3835

      7618

      6050

      6561

      2784

      -5696

      747

      -8204

      1640

      -2310

      2667

      1695

      -1263

      -6442

      -2022

      3762

      8753

      9212

      -979

      -7351

      9830

      -7945

      6244

      -632

      -3120

      -3895

      1682

      -3278

      -9032

      -1873

      -3949

      6170

      3098

      4509

      -9307

      -4515

      4678

      4753

      -7625

      -4422

      6090

      -9409

      -9804

      -2644

      -7828

      -7705

      5880

      -7435

      2125

      -131

      2656

      -3789

      -5784

      9080

      1124

      -8869

      -7234

      -14

      -7556

      -4950

      4532

      179

      5465

      1107

      5447

      1850

      7991

      1901

      -9893

      3813

      -5261

      7817

      -4825

      7030

      2842

      1244

      5910

      777

      -3510

      9147

      1273

      8548

      6602

      6377

      6103

      6751

      -4676

      -7752

      -3325

      -78

      996

      -6728

      -4109

      -337

      -4739

      3672

      -8315

      -557

      1736

      2888

      -3498

      -8239

      7110

      3035

      -3382

      8386

      8789

      -9471

      1557

      7176

      7311

      2052

      8406

      -1437

      1628

      -7961

      9487

      -5948

      7557

      -5282

      -7213

      5587

      1944

      -9633

      9966

      4059

      3866

      8721

      941

      4015

      4891

      -6422

      6043

      -4551

      -6484

      -8217

      -3385

      4491

      -4113

      971

      -3219

      6469

      6252

      -3162

      -5713

      -8379

      -6672

      8414

      -7654

      2125

      155

      -1905

      -6011

      -8147

      -6924

      7587

      -3337

      -1516

      8688

      -9614

      6260

      5446

      8688

      2987

      -5646

      -5713

      1263

      -3375

      4836

      -2877

      -9149

      -7093

      -5240

      5578

      6855

      3760

      9640

      391

      3178

      1994

      1495

      -460

      5829

      4119

      -6862

      879

      -2646

      576

      -7044

      1596

      -9500

      3865

      9378

      2053

      -3250

      4684

      1840

      -8729

      2160

      -2655

      -4858

      -2866

      -8192

      719

      1036

      2746

      -4542

      -5713

      3125

      163

      6267

      6792

      5393

      -2153

      1533

      8006

      -495

      -8407

      -8866

      4511

      2620

      -991

      -2759

      2573

      -3940

      -6121

      6802

      -9999

      3277

      1005

      -8889

      -3610

      1548

      -7653

      -854

      -3043

      -5288

      5464

      -9358

      6457

      -3895

      2397

      -1601

      -1098

      4421

      335

      4438

      1113

      2788

      9298

      3676

      6180

      -7880

      3070

      -6786

      -6044

      -4673

      -4429

      -1308

      9293

      4471

      -9733

      5072

      7761

      -3164

      322

      -5249

      -1913

      -8883

      -3045

      -2624

      -841

      -4930

      -4611

      2511

      -4750

      5397

      6947

      -2326

      -1931

      2249

      -2099

      2214

      -4859

      8716

      9125

      -3272

      8869

      -9737

      -2314

      -4463

      -7805

      -6924

      -9574

      -5822

      6948

      -8628

      -6199

      -3667

      2627

      47

      -6274

      -8074

      -8867

      7504

      1149

      7704

      -3567

      -29

      -1856

      -453

      -5051

      -1596

      1970

      5678

      -8377

      5235

      4491

      7656

      2197

      -6011

      -6544

      -9905

      -7868

      9491

      -6004

      1255

      8469

      -2531

      2493

      3973

      -3959

      -112

      521

      -6011

      9470

      8947

      -6004

      1672

      -2319

      -8809

      -1904

      -9838

      -68

      402

      2229

      -9517

      -6794

      4383

      4876

      -6284

      7863

      -7907

      1685

      -8585

      5806

      7826

      -3819

      -2698

      -4106

      -1765

      666

      7512

      5586

      -8301

      4228

      9372

      -8132

      -9499

      368

      -3177

      -8898

      4622

      4294

      -8213

      -3450

      5990

      -8443

      -1553

      -1196

      2216

      1679

      6840

      1524

      -5245

      8702

      -6443

      8155

      -5475

      8376

      -723

      -2513

      -4023

      1533

      5997

      -179

      7030

      -4356

      5752

      -4999

      5191

      2672

      4641

      -8997

      591

      3343

      1636

      6569

      -3144

      5546

      -3267

      2033

      -1442

      2290

      -9987

      9073

      9374

      3290

      1751

      -6721

      -4962

      1467

      -9392

      5959

      4165

      -1370

      -6484

      -4418

      -5937

      -5096

      7457

      8195

      -8824

      -9636

      8312

      7189

      -7448

      3776

      5138

      3779

      -5614

      8702

      -7075

      9275

      1370

      2069

      -7513

      5285

      -3162

      1300

      9363

      -3794

      -6722

      737

      2744

      -2127

      3809

      -3303

      -9143

      -2664

      -9668

      7673

      -8533

      9039

      -925

      -5026

      -2878

      -9488

      -8555

      7235

      5903

      3148

      -6777

      6220

      -7975

      1698

      281

      -7311

      9701

      9205

      4975

      -4551

      -8406

      -2927

      4557

      -1352

      -5623

      1948

      -5324

      1723

      -264

      -1889

      5817

      -2553

      6568

      117

      178

      8843

      -2225

      -9189

      9409

      3708

      1423

      935

      -2434

      8835

      -9836

      2470

      -6924

      -280

      6599

      702

      -7190

      6442

      -9776

      -4860

      -7358

      2053

      -4028

      -1158

      -8196

      -527

      3158

      1571

      7844

      2741

      -2297

      -1898

      -5844

      -8924

      5940

      -4984

      -5506

      -362

      3643

      -9130

      -6583

      1540

      -3388

      8403

      -5941

      -9574

      -705

      -9386

      -6293

      9268

      -9213

      8631

      109

      6682

      3208

      -3347

      -6310

      -7649

      5092

      1284

      2828

      5945

      6100

      -1215

      7482

      3727

      -5154

      -2838

      3602

      -1334

      -7781

      1596

      -6425

      5785

      1258

      3563

      -4676

      9495

      6505

      -3200

      -7701

      -5286

      9142

      7601

      3254

      -6973

      5235

      9323

      7638

      3828

      -1911

      -7306

      7878

      7158

      -5066

      -6284

      3477

      -5124

      879

      -7007

      6822

      -7681

      6355

      -5696

      509

      4868

      5316

      4134

      -2363

      5623

      -7906

      -3452

      3321

      -2415

      -3910

      -3574

      -5192

      6901

      -7208

      -2978

      -3133

      9795

      500

      -6439

      4222

      -1529

      5285

      7110

      -1100

      8868

      -3823

      -8257

      -4827

      4674

      9885

      -3488

      -2637

      7821

      9983

      4216

      7433

      -5950

      4068

      1926

      2563

      -481

      -2048

      4709

      1040

      -7485

      5737

      -8660

      2083

      3890

      -4885

      6099

      2999

      2779

      -6195

      2013

      -3571

      7468

      -8060

      3779

      -2615

      8222

      1096

      4509

      -7037

      -7019

      -6078

      6053

      -3532

      5789

      7014

      1823

      -4565

      -8783

      -6496

      6368

      2064

      863

      -2355

      -7662

      7821

      -6924

      -6740

      -8149

      1423

      -8151

      -8038

      -7040

      -8921

      501

      8314

      -8091

      -7877

      8220

      -6757

      4542

      3073

      -9106

      -4108

      6464

      1452

      8829

      1258

      -8686

      -5416

      2340

      2133

      -1173

      238

      4507

      1426

      -3128

      -4405

      9993

      335

      -8310

      -9853

      -6990

      6851

      1195

      1176

      -5213

      -4893

      2841

      8290

      3237

      9656

      -8773

      2598

      5690

      -7221

      9776

      -6397

      -2170

      -372

      -686

      -525

      -5823

      -6763

      -5829

      -5781

      3033

      8380

      5326

      -7851

      9236

      485

      8459

      -6442

      9636

      -1804

      -8969

      4496

      9235

      1642

      6807

      -3472

      -810

      -8770

      -917

      8852

      -6251

      3909

      -9811

      1024

      -5600

      4696

      -9276

      9461

      -6230

      -8876

      740

      -3910

      7076

      -2460

      7167

      -515

      2527

      -8005

      5682

      -7263

      2491

      -6484

      -362

      7204

      -20

      7540

      4245

      -4702

      -9912

      -6580

      7287

      7574

      -3786

      6881

      879

      4649

      -6253

      8224

      9971

      -5631

      -1172

      3590

      2881

      -2000

      3591

      -5361

      9470

      7987

      3389

      4870

      1854

      7816

      3169

      147

      -1676

      -8571

      4601

      5888

      -4419

      1423

      9365

      9929

      -7475

      3572

      -827

      -9909

      -734

      -4718

      2145

      -584

      7808

      6233

      3156

      3026

      8179

      7419

      -6049

      9989

      -3565

      -9638

      6392

      4060

      5185

      765

      9842

      8269

      -4062

      9291

      -7312

      6458

      4376

      928

      4630

      8407

      -4208

      8632

      8306

      774

      -480

      731

      -4986

      -4121

      3020

      -6131

      2189

      -9030

      -6692

      2475

      1642

      6440

      -8858

      2869

      -846

      460

      7273

      2126

      6607

      3156

      153

      -6188

      1770

      1039

      -6498

      7189

      918

      -9907

      -3485

      -4689

      4480

      -7856

      8854

      4505

      8660

      8017

      -3704

      -2242

      1340

      143

      -4440

      9369

      -5915

      5952

      1940

      134

      -5503

      9174

      -7376

      8981

      499

      9109

      8037

      6697

      -34

      4308

      -7701

      -3159

      -437

      9913

      -2057

      -4815

      -7340

      5634

      3865

      -9890

      -5735

      2055

      -6912

      6494

      7075

      -6865

      -7550

      -5497

      5018

      -2869

      -3858

      9471

      3342

      -8398

      -2691

      -4803

      7867

      -6234

      -1367

      -5326

      6119

      -3252

      -4106

      9406

      5406

      -5379

      -2450

      -8296

      -5303

      3390

      5033

      4466

      -182

      5520

      -7008

      -8142

      -2405

      8660

      -4082

      4573

      3486

      680

      -925

      -2948

      4583

      -8832

      -8139

      -2236

      6306

      8284

      -1325

      -1752

      -3187

      -248

      4483

      -7079

      -7092

      -6646

      -8736

      376

      -5588

      4331

      7685

      -7306

      2870

      -7340

      -1193

      -4869

      -5047

      -726

      -9614

      -1756

      1124

      9071

      -8971

      1791

      -7930

      1017

      2520

      -1410

      -6794

      -1441

      7195

      4559

      8

      -5502

      -3816

      7167

      -7190

      8969

      -1196

      -4581

      377

      9108

      -135

      1506

      5682

      8784

      -7463

      -3053

      -4194

      -5057

      623

      -2038

      -8249

      -1362

      870

      -7665

      8017

      8415

      -9622

      7675

      1513

      1346

      7480

      1803

      8838

      -5068

      9750

      -3116

      9335

      832

      -6008

      -2950

      -5829

      4475

      -7845

      7724

      -6874

      4015

      5450

      1590

      -3264

      3892

      9109

      -2597

      8413

      4240

      -5043

      -2753

      -1466

      3935

      -5362

      5323

      3136

      3422

      762

      908

      -7463

      -4294

      -5971

      -8454

      8061

      -2650

      8842

      -3922

      -8587

      2212

      -4547

      5036

      290

      173

      -4858

      -8567

      7495

      8459

      -7012

      -6221

      -5633

      -6145

      6050

      -8236

      -4156

      1622

      -3992

      -4128

      -3713

      -3636

      1208

      7434

      -1890

      2937

      3682

      5929

      -862

      -2989

      9447

      4189

      -7307

      1152

      -7485

      -4612

      8409

      8823

      -1928

      5259

      -1061

      -3908

      -3200

      -7382

      5204

      -3131

      -6953

      -3543

      6969

      -3978

      5831

      -614

      -8141

      -1154

      -3888

      7485

      4714

      -9368

      5682

      -2130

      -2140

      6505

      -8771

      5470

      -5177

      8090

      -4695

      -8454

      4335

      9374

      -4491

      -4492

      6421

      5529

      5590

      -4682

      4851

      9447

      -1515

      1986

      6252

      -1437

      -9162

      -156

      8941

      -8942

      -1998

      8787

      -5920

      -4371

      6053

      3629

      -7105

      -4460

      -7556

      3716

      -524

      5323

      -9117

      3208

      5703

      675

      2744

      -2839

      9007

      -8601

      -6518

      4852

      1057

      -3902

      -5115

      -4792

      -6821

      2137

      1965

      8451

      4487

      -616

      -3655

      -3169

      3942

      -7354

      377

      -5736

      -4768

      4600

      6726

      4654

      2137

      8220

      -2963

      1415

      3420

      8173

      -717

      -3585

      -723

      -5241

      8786

      3327

      6658

      9473

      7867

      7298

      -8947

      -1263

      1372

      9518

      5492

      9346

      2894

      4043

      -1751

      3570

      -9692

      5711

      2722

      2382

      -5126

      5436

      -7271

      -5426

      -8585

      -1523

      895

      1143

      4953

      -4211

      -6406

      7254

      9349

      8643

      8947

      1412

      -9783

      7190

      7638

      -2577

      3098

      -6512

      -3202

      5191

      -3678

      -2914

      9463

      -4886

      -5829

      -9343

      5466

      -7465

      -2897

      -4312

      3611

      -4064

      1240

      105

      1217

      4674

      4103

      1436

      7021

      -5506

      3304

      2912

      6101

      5288

      -7589

      -5383

      8006

      -6274

      -9269

      -9827

      4403

      -6098

      -9797

      -5978

      -7453

      4857

      5032

      5584

      6128

      -8764

      7152

      -8111

      1736

      2990

      -2231

      -1241

      -819

      1471

      -6824

      -4370

      7540

      -4318

      4305

      -3498

      -6672

      4099

      5168

      -1074

      -2949

      6575

      -9394

      7830

      -6619

      1231

      4876

      -5319

      -5229

      6257

      -2187

      2627

      1260

      7920

      7336

      3784

      -1267

      -9817

      -481

      8185

      4796

      8814

      9410

      315

      5586

      -6453

      -9217

      9003

      -723

      -9358

      6829

      -8503

      4776

      -7020

      -1508

      3429

      2448

      -7051

      4171

      -991

      -4422

      1787

      7255

      8228

      -852

      -7309

      6000

      -2405

      -1914

      -4930

      4119

      5289

      -4141

      -2276

      -4689

      5594

      -6100

      6662

      -6717

      -991

      -6239

      1423

      -480

      7617

      -4409

      -8189

      -4362

      -4633

      -8694

      3262

      7259

      -9259

      3819

      -3236

      311

      8461

      2125

      -6856

      5097

      51

      -7707

      1931

      -1952

      8632

      1544

      3361

      8154

      8367

      9334

      4158

      -3354

      3327

      4716

      -5920

      9277

      -7519

      4119

      3702

      5006

      -6191

      -8353

      -899

      8525

      5032

      2038

      6917

      -207

      -7102

      335

      -734

      9518

      -3272

      -9182

      8775

      1464

      4491

      -5948

      5862

      2028

      -2157

      -78

      -5241

      -8786

      -7980

      4819

      -4551

      5684

      8343

      7448

      2581

      9086

      -7973

      -8547

      7572

      8308

      458

      3503

      -363

      8469

      -6786

      -9839

      3194

      -9052

      6691

      9513

      -300

      61

      -1928

      86

      -3665

      6843

      -4896

      -9901

      -9473

      9853

      6173

      3124

      6682

      -3532

      -8899

      6398

      -4215

      9076

      -6014

      -4307

      -1276

      5464

      7633

      2596

      9890

      -2540

      9118

      -1232

      9349

      -4869

      1046

      3805

      -6956

      -7215

      -4131

      -1255

      -5781

      4989

      7312

      5829

      7715

      -9623

      -5345

      8406

      -4362

      3111

      -352

      8454

      -2138

      2754

      8479

      -6451

      -4043

      -4691

      9098

      -6078

      -931

      3430

      6001

      -4897

      -1838

      -1989

      -893

      9054

      -4031

      5194

      -2441

      -6473

      6146

      1859

      -157

      3984

      1821

      -8741

      6221

      -1404

      3167

      8562

      -1161

      8682

      -4515

      -1876

      -2404

      -3452

      9368

      -8261

      -3619

      9362

      -8175

      7979

      402

      6166

      8924

      9474

      6555

      7981

      -4692

      -2039

      -9804

      -2577

      -5235

      -451

      8565

      -3249

      -7686

      5648

      -7342

      -7714

      -781

      2595

      -3493

      7808

      3794

      -6496

      -2411

      -8716

      6159

      841

      -1232

      9953

      -9797

      -5430

      3659

      -6754

      -4440

      4725

      3679

      -7312

      6723

      2368

      1882

      636

      8519

      -9432

      7093

      -2131

      -9524

      7242

      -1854

      -2280

      -54

      8972

      -4480

      1920

      -8142

      1318

      8049

      3351

      982

      -6562

      -3294

      -5120

      -8116

      5682

      8030

      -2927

      -2838

      5014

      1174

      832

      4542

      6963

      -6924

      5833

      1366

      2951

      -1082

      -3842

      9967

      4299

      8858

      -6105

      -809

      -14

      6319

      -7518

      3092

      5789

      3124

      -3235

      9323

      9137

      -2691

      2083

      -8596

      5387

      4388

      -5107

      -7213

      -1758

      -7396

      9841

      -5012

      -3619

      2454

      -7019

      -653

      -4298

      -9517

      -9428

      -3042

      3180

      -4745

      4015

      -1362

      -6325

      -2333

      -8284

      9966

      3896

      -2041

      -6618

      5323

      -8685

      -2920

      6354

      977

      -109

      -220

      8882

      604

      -6582

      -4180

      -9808

      1688

      -8699

      -6462

      3363

      -5314

      -593

      -2159

      -7357

      -8802

      -9086

      6100

      -4759

      6848

      29

      -4703

      -4009

      8224

      8747

      6170

      5071

      9626

      4637

      783

      6144

      6187

      6329

      -6084

      1255

      5129

      -2577

      6615

      -8204

      7631

      8334

      7179

      -5756

      9912

      315

      -8601

      6125

      6526

      5996

      -9240

      958

      -7090

      4920

      -690

      -7323

      6964

      250

      -1251

      6751

      -3379

      519

      -4025

      8416

      5246

      -6936

      -4880

      -6443

      3550

      -5810

      -3167

      -3432

      -6576

      -3403

      5332

      2371

      4586

      -5484

      809

      -5243

      2414

      -7198

      6096

      -9811

      -8786

      -1873

      -4091

      9642

      -4739

      1677

      -488

      6791

      -9623

      7485

      -9672

      1574

      -1056

      3618

      -9973

      -3835

      6647

      -1448

      53

      -7341

      1667

      5834

      -9947

      -372

      6687

      9173

      8569

      6607

      -2743

      -2673

      4682

      -4502

      8822

      5684

      -5118

      761

      -1186

      -7625

      -6967

      7780

      -1893

      -2388

      -1274

      8416

      -4656

      -4958

      8622

      -7643

      1346

      -5182

      178

      6373

      -2202

      -1309

      -7797

      -9893

      1545

      6235

      -4414

      -7323

      -8778

      -1638

      4598

      7724

      1615

      353

      9113

      -657

      -3513

      -4869

      1744

      -5364

      -4456

      -1690

      -1133

      859

      -1688

      -9542

      -7721

      3675

      -5112

      -6335

      8228

      7101

      5533

      148

      -2533

      -9553

      5904

      -3104

      4861

      9235

      -712

      9214

      -2683

      -2477

      9948

      -6791

      3834

      5568

      -2659

      6833

      508

      -9773

      -6111

      4978

      5095

      -9343

      4659

      -6906

      -6577

      2121

      -3424

      -3651

      -78

      -9764

      -9214

      -7240

      9994

      6324

      -8488

      7075

      -1319

      6129

      9493

      -1671

      -7752

      4477

      -6738

      -8240

      8011

      -4893

      870

      3031

      1273

      4022

      -8371

      -7677

      -9768

      -3606

      711

      -4821

      -8786

      5396

      -7811

      -2555

      8359

      -7805

      2000

      -3248

      -4443

      2160

      5189

      -9441

      4002

      4108

      9545

      -6199

      3304

      1062

      -4620

      7729

      -1572

      -8609

      9607

      -1018

      2018

      -5570

      -7569

      -6414

      -9692

      -4223

      1710

      -9385

      8548

      -3674

      -7672

      8818

      -1032

      7605

      6365

      -9542

      8291

      1169

      1029

      -4580

      -4963

      -6776

      -7213

      9283

      4167

      -3281

      2793

      -4288

      5880

      -4773

      3590

      6841

      5996

      -2210

      -1354

      -2713

      -8629

      9672

      7791

      2264

      4249

      -5742

      -4561

      6342

      -1831

      2503

      900

      6555

      -5761

      -2531

      -4529

      1791

      -1601

      1524

      -1002

      -8276

      4152

      7461

      9618

      8227

      -5527

      2635

      -540

      7167

      3031

      -8480

      3789

      -5182

      6244

      1880

      -1760

      -6821

      5996

      9983

      7106

      -1938

      -1915

      4407

      -2392

      1228

      606

      4545

      -6777

      8012

      6802

      -8233

      5467

      5782

      5991

      9994

      3067

      -5544

      8538

      -2946

      1245

      3208

      3441

      4482

      -8279

      -5067

      -6093

      -8876

      3262

      1773

      -3978

      3136

      458

      -3711

      6801

      -8111

      2115

      3713

      4975

      -7020

      -3949

      -603

      -5596

      9212

      1244

      -559

      -2799

      3431

      -7196

      2212

      9647

      5824

      -4361

      -6505

      2520

      1284

      -8866

      4617

      5151

      9890

      -1548

      9647

      -9517

      -320

      6206

      3308

      9030

      2596

      35

      5982

      -4307

      0

      5929

      1204

      9841

      -1016

      -6536

      8781

      7373

      3618

      -6499

      -3178

      7965

      9617

      -4163

      -2260

      2597

      4354

      -2131

      -4007

      9363

      -3817

      -6011

      1326

      4788

      -625

      5549

      -5789

      -5038

      1832

      -4460

      8472

      4266

      6778

      -505

      6570

      8332

      2616

      23

      4608

      -7648

      7633

      -7019

      61

      -5887

      8911

      -9506

      9933

      7707

      -8011

      -3699

      9694

      1205

      7295

      -5892

      -831

      -27

      -8297

      -9614

      8945

      -9001

      7415

      9870

      6377

      -8816

      -3771

      1533

      -8899

      2237

      77

      1843

      -369

      5092

      -7672

      -6274

      209

      7872

      -589

      3296

      -8483

      282

      -183

      -5935

      660

      8080

      8224

      1412

      8818

      2635

      -408

      2448

      7157

      -9344

      -6676

      -2286

      898

      -5022

      6014

      8113

      -4633

      -9623

      4479

      6749

      3978

      -2591

      2933

      -7952

      6377

      -8979

      -1942

      -7711

      -8203

      -6589

      196

      7699

      9890

      43

      -1888

      -4502

      8602

      8693

      8494

      2511

      -9256

      -6012

      8434

      7142

      1615

      3281

      -1030

      1677

      5829

      8117

      56

      -3769

      4699

      6869

      4966

      3656

      6283

      9953

      195

      -5528

      -4743

      721

      4312

      -3907

      -345

      -7952

      4947

      -9817

      6792

      -8872

      6663

      6284

      9012

      3472

      9116

      1948

      952

      493

      -3844

      4161

      4975

      -9788

      -8628

      9298

      42

      -8565

      7874

      3548

      9694

      6377

      -6617

      -9123

      394

      -2806

      -278

      870

      -6104

      3058

      -6347

      -9744

      -6803

      6916

      6901

      5374

      6666

      4305

      197

      3561

      -6603

      4388

      -5849

      9962

      3856

      -710

      6101

      -4461

      1266

      -1308

      3624

      8038

      -1354

      4920

      188

      -8876

      -3296

      9831

      -9183

      -5781

      -1410

      2697

      -4972

      3021

      -4224

      8331

      -267

      7567

      -1297

      -6794

      6901

      2258

      7867

      -2038

      898

      -7124

      -6909

      -2030

      3374

      -1200

      -4523

      -7086

      -1695

      8838

      1961

      -4926

      6876

      -7362

      -732

      -1985

      9893

      3667

      -6274

      -8111

      8419

      9398

      -6008

      9788

      -3519

      -7173

      -552

      4558

      -9258

      1245

      -7956

      1735

      -1477

      -6069

      -2164

      -5622

      9640

      -3855

      4712

      -6928

      -3815

      -7175

      -3674

      8283

      5579

      -4021

      -5429

      8367

      -4875

      5993

      9306

      -5297

      8780

      -4863

      4760

      5056

      3335

      -7188

      -3687

      6381

      4383

      4893

      2659

      -4103

      8764

      -3528

      7661

      -248

      -7566

      5010

      -2357

      7322

      2744

      6173

      1167

      -6835

      -8244

      -939

      1696

      -1167

      -5249

      -8485

      -5837

      1727

      4557

      -1752

      7189

      -8455

      3683

      8817

      3587

      376

      -7442

      -2314

      7871

      8116

      1615

      6829

      -140

      6373

      2973

      7460

      -3639

      3548

      1076

      9808

      -7173

      7075

      -1888

      679

      6687

      1440

      -3268

      -856

      3287

      -678

      4002

      5683

      -5364

      -8297

      1880

      -2368

      8211

      -1865

      5910

      -2179

      -7906

      2368

      -4275

      -3688

      -4708

      3255

      -9545

      6805

      4987

      6237

      -2170

      231

      4742

      -9905

      8505

      9851

      -2365

      9934

      4682

      -7760

      -6355

      7189

      6039

      3866

      -5154

      -7752

      -3249

      -3292

      6306

      -5743

      -5702

      5138

      1980

      5495

      4099

      6368

      -6723

      9593

      -8172

      6630

      -3303

      2064

      -7124

      -17

      -1501

      8598

      -9929

      5549

      2337

      148

      -8773

      -1666

      5134

      4548

      -3182

      8818

      -480

      -4280

      -593

      -1363

      -5073

      9964

      7520

      -7635

      550

      -2935

      -5426

      4937

      604

      -2469

      4893

      3007

      9424

      -6146

      -451

      -5593

      -5034

      -4247

      6851

      -8816

      -6794

      9771

      1113

      9253

      5590

      2368

      6128

      -6014

      -957

      2012

      -4805

      9322

      -5142

      -763

      -1830

      -8245

      9554

      -1354

      -3375

      -8325

      -7920

      -4033

      9776

      -8641

      -2749

      -1194

      9479

      9096

      810

      -5941

      -2920

      -2048

      311

      -3667

      4432

      6691

      -3440

      395

      -7079

      -7004

      9651

      6615

      2479

      -1136

      6208

      -7365

      6687

      6842

      7066

      4956

      6130

      3720

      -2759

      7023

      -3667

      -9668

      7113

      -4163

      -9471

      -7896

      -4695

      -7824

      -7810

      -761

      3825

      7063

      2274

      1072

      6195

      -4612

      -1728

      4280

      -7157

      4415

      8359

      3233

      -1448

      -4051

      7132

      -4816

      -5226

      -1532

      1719

      -7043

      -1930

      7132

      6580

      8865

      -2342

      -7227

      9980

      418

      4876

      2600

      -72

      -630

      -7362

      -176

      -4215

      -5588

      7186

      -7745

      6569

      -3394

      1880

      -711

      9471

      6056

      -7761

      7244

      5586

      5704

      -6059

      7232

      9788

      1333

      7689

      -6924

      2848

      -2106

      4712

      -7672

      -5450

      -4138

      1464

      2600

      1419

      -4615

      1195

      -1985

      6782

      7361

      -9405

      -6911

      -1396

      5170

      -9142

      -6011

      -3963

      -1873

      3672

      -525

      6655

      7047

      -7679

      6562

      -2686

      -7811

      2115

      -687

      -84

      -151

      4542

      6462

      6866

      2491

      2435

      2160

      7851

      5995

      4826

      1088

      -8390

      943

      -5953

      3322

      9961

      6915

      1129

      -2645

      -3209

      -3994

      8943

      4507

      8226

      8344

      6969

      150

      5576

      -1540

      -7543

      -5592

      2581

      -5834

      1057

      -4127

      -1553

      3688

      6657

      5097

      8994

      2187

      5465

      -9001

      3731

      -2377

      -9142

      -3272

      -1014

      -5497

      -5804

      -2153

      4745

      1337

      -657

      -665

      4649

      2616

      -5052

      1056

      3860

      -7271

      -8857

      -5140

      -6649

      5370

      4004

      -9907

      2598

      -2216

      -1461

      -3817

      -5426

      -1577

      6577

      -4267

      -5100

      3262

      -7045

      -7114

      3945

      -3778

      1498

      1183

      -8375

      9801

      -2805

      7928

      6309

      -5937

      5677

      3231

      4096

      8153

      6826

      -2333

      -1063

      9935

      -5201

      -5733

      -9850

      2501

      2795

      -1989

      -3763

      660

      -1725

      -8660

      7068

      2851

      -8398

      -4783

      9812

      6047

      6981

      -9000

      7712

      -2743

      2988

      131

      9865

      7214

      -2720

      5603

      1723

      -225

      -1152

      -6372

      717

      -8074

      -8477

      -4562

      6100

      -2799

      1557

      -394

      740

      9842

      -6686

      4534

      880

      -7264

      -2577

      -5878

      4861

      209

      -1352

      2476

      7989

      -9915

      2063

      -4158

      -584

      -2726

      -1759

      5576

      9190

      -1300

      8687

      6014

      -9208

      6943

      2614

      355

      -1695

      -1193

      4834

      3200

      -9715

      4222

      -7420

      1617

      4701

      7080

      721

      -1751

      7974

      -7656

      5018

      7799

      1530

      5259

      1423

      -7259

      927

      -275

      -1529

      -2110

      3890

      1412

      -5288

      3511

      5785

      -2324

      450

      2682

      -8926

      7791

      5643

      -1758

      -5815

      -6179

      -8249

      2286

      -2512

      740

      -7968

      -2797

      8488

      -1760

      7095

      196

      -1332

      -8323

      -2508

      -337

      -9524

      -4670

      4788

      -5562

      6219

      2672

      2751

      -6662

      -129

      367

      -8728

      -1698

      -1440

      971

      4406

      3798

      2228

      7507

      -2511

      6413

      -6156

      -2371

      6101

      -6168

      7761

      4650

      9846

      -3513

      -5258

      -4827

      4491

      -5068

      -5473

      -4885

      -4184

      -556

      1881

      3430

      -7191

      1684

      1039

      -9821

      -8034

      -8526

      1376

      468

      -349

      -8159

      4425

      8154

      5440

      3555

      535

      4700

      -7173

      7074

      7460

      2590

      -9614

      -5892

      1965

      -8501

      -822

      3082

      -6931

      -5450

      2253

      -1251

      -854

      -5502

      8560

      -605

      -9476

      9931

      -3976

      2083

      -8569

      -5811

      5241

      8873

      -1621

      4860

      7031

      -7311

      -6077

      9617

      1480

      -6188

      -9382

      -3208

      -5230

      5590

      1040

      1533

      -8264

      7622'
    parts:
      part1: "--- Day 20: Grove Positioning System ---\nIt's finally time to meet\
        \ back up with the Elves. When you try to contact them, however, you get no\
        \ reply. Perhaps you're out of range?\n\n\nYou know they're headed to the\
        \ grove where the \nstar\n fruit grows, so if you can figure out where that\
        \ is, you should be able to meet back up with them.\n\n\nFortunately, your\
        \ handheld device has a file (your puzzle input) that contains the grove's\
        \ coordinates! Unfortunately, the file is \nencrypted\n - just in case the\
        \ device were to fall into the wrong hands.\n\n\nMaybe you can \ndecrypt\n\
        \ it?\n\n\nWhen you were still back at the camp, you overheard some Elves\
        \ talking about coordinate file encryption. The main operation involved in\
        \ decrypting the file is called \nmixing\n.\n\n\nThe encrypted file is a list\
        \ of numbers. To \nmix\n the file, move each number forward or backward in\
        \ the file a number of positions equal to the value of the number being moved.\
        \ The list is \ncircular\n, so moving a number off one end of the list wraps\
        \ back around to the other end as if the ends were connected.\n\n\nFor example,\
        \ to move the \n1\n in a sequence like \n4, 5, 6, \n1\n, 7, 8, 9\n, the \n\
        1\n moves one position forward: \n4, 5, 6, 7, \n1\n, 8, 9\n. To move the \n\
        -2\n in a sequence like \n4, \n-2\n, 5, 6, 7, 8, 9\n, the \n-2\n moves two\
        \ positions backward, wrapping around: \n4, 5, 6, 7, 8, \n-2\n, 9\n.\n\n\n\
        The numbers should be moved \nin the order they originally appear\n in the\
        \ encrypted file. Numbers moving around during the mixing process do not change\
        \ the order in which the numbers are moved.\n\n\nConsider this encrypted file:\n\
        \n\n1\n2\n-3\n3\n-2\n0\n4\n\n\n\nMixing this file proceeds as follows:\n\n\
        \nInitial arrangement:\n1, 2, -3, 3, -2, 0, 4\n\n1 moves between 2 and -3:\n\
        2, 1, -3, 3, -2, 0, 4\n\n2 moves between -3 and 3:\n1, -3, 2, 3, -2, 0, 4\n\
        \n-3 moves between -2 and 0:\n1, 2, 3, -2, -3, 0, 4\n\n3 moves between 0 and\
        \ 4:\n1, 2, -2, -3, 0, 3, 4\n\n-2 moves between 4 and 1:\n1, 2, -3, 0, 3,\
        \ 4, -2\n\n0 does not move:\n1, 2, -3, 0, 3, 4, -2\n\n4 moves between -3 and\
        \ 0:\n1, 2, -3, 4, 0, 3, -2\n\n\n\nThen, the grove coordinates can be found\
        \ by looking at the 1000th, 2000th, and 3000th numbers after the value \n\
        0\n, wrapping around the list as necessary. In the above example, the 1000th\
        \ number after \n0\n is \n4\n, the 2000th is \n-3\n, and the 3000th is \n\
        2\n; adding these together produces \n3\n.\n\n\nMix your encrypted file exactly\
        \ once. \nWhat is the sum of the three numbers that form the grove coordinates?"
      part2: ''
    title: '--- Day 20: Grove Positioning System ---'
  21:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: 'mlgm: dssb * wjbz

      ptqp: 2

      ncnt: 5

      hzfs: gbsq * fbbz

      htwj: qcnb * rlmh

      qlzl: 2

      hrfp: 5

      hbsl: ddqr * ffgz

      vcsd: 2

      pght: 17

      mvwb: 10

      mmpr: 3

      mhhm: rcsd + cmbv

      ldjn: 4

      rjcv: qqbm / qlgp

      hbcq: hmtb * mzsr

      ctgj: 7

      qzjg: mwdq * fdfd

      bpgs: 3

      qfpf: 2

      ztmc: 3

      thpt: lsrn / wsqj

      zwmj: tdsz * drch

      btgl: 3

      jnpp: hdpn * hrfp

      lbbz: cfww * prtb

      sbqc: rmrr * ppms

      fprb: 3

      hvmh: 8

      sznb: 9

      nstl: fmcd * zwml

      gwtg: 3

      rmtm: 14

      dprf: nccf - jnwn

      gtjs: gfgq + shbd

      mnjj: 2

      dtdm: 6

      wchv: 4

      tqjb: tncc + gpvj

      zcwf: 12

      nhrm: dvwr + htlb

      wrmb: 19

      rjrr: 3

      dcpr: 2

      zpqz: 2

      bgvb: 3

      pdrt: zctw + npqm

      ftzd: 15

      nvdv: pfmm * lpjf

      wbmq: 5

      cbnh: pgdp * fnnc

      ldvc: 6

      bbrw: glvt * hvqw

      gnwd: fdmq * gfth

      tvwm: pltv * nrmf

      gcch: 4

      wpnl: 3

      rhbv: wtpl / vtcg

      flcm: 3

      tcwd: 2

      zlph: 4

      mddn: 5

      gqrt: nnpd * ctnm

      qsjp: fzdp + vzsg

      pwlw: 3

      fgzn: 4

      fpfj: 18

      jfrg: 8

      pgrl: dnld * pdmm

      wdcw: jdpt + zsqb

      nnll: dcmm + cztp

      vvjn: pmrj * qzjc

      jnbb: 12

      dwzs: 3

      lfqp: 5

      nlzp: pcgz * mjpt

      jbrz: 11

      mvfc: cfjh * tcll

      ntst: trnf + swwz

      brhf: mcss + lrzj

      fmjt: mhjp * zlph

      gpvj: qnrh * shpm

      nnjb: 17

      hntz: 2

      wzsr: rgwr * rwgf

      rsjz: sfnv * dwnf

      qpdl: prql * thwj

      hqds: 2

      swlc: 3

      zzdt: 2

      vsgq: sqtl + vvdr

      zwdn: vpgz + mmrw

      hmmf: vgbc * vgjp

      gfrn: 13

      cfww: 2

      plvz: qfmq - lqlt

      nglb: bfdv * lrmg

      vdrs: shjn * rtnv

      ttjg: jnbb * chhb

      jlsm: rbwl * lnns

      zhmh: czsn + zdht

      sjqr: pclc * lmrj

      dsqb: 2

      vddn: 5

      sjzh: 17

      dcvl: nlbr * gszg

      wwvf: pjdl * gdrj

      bbbj: dwsq + chgm

      mssl: lcgh * gphz

      grfn: mgzr * hnvz

      spqt: czph + shps

      wtsh: 18

      qblr: qflh * cmwq

      czng: glsq + tclf

      rcbq: jjlm + bwst

      dwmz: vmrg * zcdd

      vzsg: lgrr + lhmf

      flvt: qjzj - dtdm

      lgrr: mbmr * hfww

      wlmt: htrp * pgzb

      dzln: 2

      tjmw: 1

      grpq: 10

      szgj: rhjh + cpjw

      rhcc: 3

      rwrb: btvv * dqrg

      ncll: gzrq + mffv

      tcll: jpsb - nqwd

      rsrh: spds + vcpq

      gsnv: 2

      rphm: 12

      bzqg: bpsh - jvfh

      jdvh: 4

      zpcw: brfj + btmp

      mfld: ttjg + gtws

      dzmg: 2

      bghn: gqtg + gvff

      rlqq: tbzl - lcpv

      mlcg: 3

      rdnz: rdnp + jfdb

      qqvt: 4

      wvwh: 13

      mljl: nsbg * bfvg

      zfhs: qnqc + pztt

      rqdc: nflf - prhq

      root: rcsj + zfsf

      wstc: rpbc * gwfp

      lnzd: dwwp + czng

      zlcr: 3

      hbvv: svdn + jzdg

      vsnl: smqm + tptg

      ldzd: 6

      wpsg: jftj * ngrw

      wgjf: 3

      npqm: gbvt + njnf

      rwjb: 3

      nnqd: 4

      rdlm: ljzj * hcns

      lqrg: ntpc * pbwb

      tpqw: 8

      lsrn: prgt * dmtc

      hlfj: hqds * hgvl

      pwrh: 3

      vtcg: 2

      fnnc: 2

      csfz: 11

      nzbn: bmqg * fwrp

      nqcg: 5

      swzv: wdft + ljtt

      tbtn: nzbn + wzcn

      twff: 2

      rndm: 2

      tdsz: 17

      qmzh: 20

      gstp: vqpd * ttnq

      ncqz: dlpm - ptgf

      ctrq: 2

      bnsh: tvnr + lfcw

      lmdr: 2

      chps: 16

      glhl: ghvv * jqsd

      qmvm: 3

      njgm: vjgn + tpcn

      qtjf: jplf + tlnw

      qnqc: hssv * wrmb

      prtb: 7

      ncwg: 12

      flqr: 2

      wdrv: 5

      pmgn: sfsj * wgfl

      vmrs: 5

      pqmf: trqq / blsb

      rmjs: 3

      qpvr: fmwn * dlpp

      pqzq: snzz + vldf

      hblv: mqsg + lrgs

      dsjl: rdjh + lfqp

      sspw: nswz + wcgw

      nngg: 4

      qzsv: ggdg * tdrt

      mshb: cbgn * pqjz

      vnqg: 3

      cmbv: rfhv + ljdn

      swsm: 4

      vtbt: 4

      sjgw: 3

      lnwf: dbbv * jvlg

      whzm: cfrr * qrpw

      vtsq: tbsr + mgnl

      bmzt: 6

      bcpz: 9

      vjvd: pzqq * wgjf

      dwnf: bpnp + hlqb

      dlws: fthn * mqmd

      dwtj: bdvl / twtm

      pcgz: 3

      lbpv: jvtt * crrq

      vbsw: 1

      wqnm: mzqb + hjtw

      wprh: 3

      cpjw: 6

      pvwh: gnvg * gtsh

      hbmp: jzmc + mctq

      jrgj: jsdf * mtgd

      dhgt: 5

      bbgt: 2

      ffgz: qqdd - phrz

      zbms: 3

      pgwb: zrfn * gvhb

      bsrb: zrtn + dcvl

      mqzr: tbnw * hdgz

      tmlm: 3

      shmz: 8

      dvjt: 3

      fqnd: lpbq * wjqv

      vtvb: dvtj * nltb

      bscm: 2

      lhjl: stns + rgnf

      pzqq: 3

      wnqv: vwbt + vjwr

      qmsc: bshb + phqn

      mjpt: 4

      bmqg: pfff * rndm

      lhmj: pmrz + rdlm

      mmrz: rqmg + cbgc

      tgsn: 2

      tcpc: 3

      wgcw: gqrg * twmj

      lvsf: qwwh * qrmn

      qjpj: mljr * lpdb

      hjlh: lwgr * jbth

      tdrf: 1

      grdm: 3

      zddz: dztc * wpsj

      lnwd: 2

      nflf: fqnd * flvt

      stgz: 4

      bjcg: bfdb + hbmm

      zsqb: 1

      vcgs: sdwm * tgqs

      rmdl: mppz * dslv

      pjlw: flrs * lhtj

      zzvn: brhf + qcdg

      wbzw: sqsh * gwgz

      jnnw: cjwj * zffj

      gpzz: ltgb * zlcw

      dpnb: prvr + hwgh

      lwpw: 1

      npnz: qcsv - hpbn

      ppjr: 20

      bqcp: 2

      lpmg: 13

      rdhl: jtqc + pvbc

      zctw: tlqq * pnrq

      wnvw: vczv + zbpn

      clwz: 2

      pbzv: 2

      dbbv: 3

      phqn: wfgw + qbwb

      fcvz: dcbz * vsnl

      ltzg: thpt - wlhl

      pdwg: qbrv / qbzz

      tnzd: vffw * jqdj

      fgfd: 2

      fvld: 2

      sjfc: tvvs / npff

      rbfg: 3

      pclc: 13

      jlfh: qdrp + cjlc

      lsmd: 2

      zrtn: whzm * ndsl

      chns: lqlr * cjjn

      cwdd: 4

      fspj: dtts * jmnr

      hhms: sbtw - vsnj

      qgph: 3

      slmq: 7

      btzq: sqqv + tqpq

      pmjs: wnvc + dhjs

      pwfv: sczh / jcsh

      zvzj: 17

      lmrj: 5

      prgt: gpsz + zffw

      dlpp: mptw / tdrd

      cgcv: 2

      qndw: 3

      mgmm: 4

      brcn: 2

      hnmc: zfnz + dmqm

      sbnn: 5

      tpcn: prqp * spqt

      pdmm: 4

      mdvd: 5

      lzhv: 2

      zvpr: 1

      qbrv: fghj * qdgn

      vdcr: 5

      gzcg: 3

      qnfp: vjfs + dvbg

      mbnw: rtzt - zvcq

      bdtg: rfts / wcsz

      tncc: zznh - jgml

      trrg: 16

      chgm: brcv * vqht

      mqmd: 4

      slpg: gsnv * qqcp

      rjgf: 3

      vpgg: pdwg + wprn

      bzpc: 13

      pnhr: hwht * vphq

      chfj: whqw * qzjg

      chhb: 5

      ztcz: qhzv + dwdz

      dcmm: 3

      shbd: fbfq + shlt

      qtmg: jjvz + ctpt

      ldgj: 2

      cwlt: mnzl * qgph

      twbh: wbmq * jbjh

      lrqd: 2

      csnr: 5

      fwwh: 3

      pngg: bgwh / lmgh

      qppw: vsnh / zpcw

      prmv: cpvn * nqcv

      hsdf: rvvt - tvmf

      zvcq: tnzd - mdth

      zfnz: qtjf + tvwm

      jwsn: 2

      whgr: mvhg * fmlt

      fthn: 2

      dfnq: 4

      jmrv: 2

      znqf: 2

      zrtw: gpvp * lswh

      svfd: 3

      rlqt: hjmr * grdm

      smqm: rdzs / zvvl

      hdpn: 2

      dwwj: mnnf + crst

      mpfp: nwgq + wcmp

      btmp: 7

      szgd: smjw - fjhv

      dvnz: 3

      grnc: 5

      pbwb: 9

      jdpt: 5

      dvwr: sjfj - sbvb

      lcpv: dbjq * qddj

      whdh: 3

      mvhg: 3

      tvtm: tpzh + dgnj

      qnpj: 3

      rlmh: 5

      jtqc: htsm * rlqq

      mgvq: tlqt * mbnw

      hmlv: 1

      qswc: gzwt + htzd

      tslb: cwlt * lpwr

      cswf: jghl * zszj

      pmmr: rlfc * mssl

      rbdb: 3

      wwbg: 17

      jbbv: 2

      vhvc: wssb * rhfw

      psbd: npnj * dwwj

      vjnr: wnvw * szmt

      trdw: ctqv + dqcn

      fpjt: vcgs - lqnp

      tvnr: hsdf * gmnz

      szlp: 2

      nmwp: gfqt * hfjz

      trmb: 4

      gsvv: bpgs + hsqw

      qvbv: 3

      psbv: 9

      qnrh: tnmn + vlgm

      nqtd: 4

      bhqn: chhp + mfst

      vvgb: csqq * gfcb

      qcdg: bfvr * pwlw

      bhwr: zzwv * rrjj

      gvqq: 3

      tbjm: pjzl * srpt

      jlhz: tmbs * rdvd

      cwpb: tffm * jlsm

      qmcs: 3

      nvht: 4

      flnv: jhvw * snts

      hdnn: nnjb * rncp

      vpfn: 2

      nncq: zjtv - sndh

      qmrn: cgwh * sslp

      smdv: 5

      tzmg: qgcn + jllc

      rhfw: 7

      wqtf: 7

      ntgd: 4

      gddd: jpfm * fvmg

      gwfp: 3

      sndh: 7

      zwml: 8

      dlfm: fjgm * qwsm

      wlgn: 7

      ggdg: 2

      ccrm: 10

      fwfq: 11

      bdgj: 3

      fqpl: 16

      jvvt: 3

      hdgz: rpfs - mddc

      gddl: 1

      jztz: 3

      pgdp: mvfc / hzsn

      vmhl: llnt * qrst

      qdjm: 2

      plds: 2

      zfvl: 5

      qmhp: szwn - qmcs

      dtpz: 11

      cpvn: vgrj + hvmh

      lzcp: nnqd * lzgc

      qvvs: 1

      ngjs: 4

      jbqv: 6

      pfmm: sznb + rzsc

      prvr: 7

      fbfq: 4

      fjgc: 8

      zcmz: 17

      nhvl: 2

      dsjd: mlcg + tpqw

      zcbb: 3

      mnnf: 4

      wjhq: zfhs * bzfw

      mmqn: fmrw * gllr

      dmcc: 5

      zfrn: 4

      phrz: qgmv * hhnt

      qfnr: 2

      btgd: 13

      gnrh: rdjz * nmbc

      rgnf: lmhr * cfrf

      rmvm: 5

      zgzh: dpnb + wfdd

      jsqn: 3

      clhv: dwtj + btpf

      nfpq: 2

      twhs: 3

      jvwb: mcbz + bjsl

      dvtj: 13

      qsgq: 5

      ghvv: 4

      rzsc: 2

      qvfv: pqzq - cdth

      hzmt: 4

      mpbm: vgjj + gfzd

      wclq: rbdb * wrvl

      lmwb: tdlw + wscg

      rdjh: vstg * dpcg

      qzlv: 4

      gslh: 2

      hhch: tmzs * qggg

      rhlr: 8

      lspc: bsnr + wchv

      gdrj: prnv + wcvd

      wqjg: dptg + vfsg

      nvrp: 4

      rdvd: 3

      qjwv: jddt * tfbh

      shcw: httv - fmjt

      lnmh: njfj + dqsc

      zdht: 3

      zscv: 4

      msqs: gvfj + btzq

      wpmg: 4

      jtht: hlcd * whnd

      hljq: phsl + sfgc

      jhts: 1

      gtjt: fqjb * qrpj

      vjwr: tnwv * gtjs

      hswd: 5

      tvvs: sjgj + qlfs

      wlsf: sjtm * flpv

      crwl: jgpw * fnzw

      zzjn: 5

      fbzw: qmrn + lmbf

      gptp: zcbb + tqlr

      hpbn: 3

      vqpd: vtvb + qztv

      fghj: shwg * hbvv

      jcdg: 4

      crst: 3

      pswd: 2

      zrqm: pjlw + slgc

      zfgq: 2

      fdfd: jpqb / zmcl

      ntfc: qdsm * fvld

      swwz: sbmj + sdrn

      rlft: jfhm * pbwn

      dgmc: 2

      qftf: 4

      wvgd: rzsv + qpzq

      fnqc: 8

      mcqn: 10

      htzt: 5

      ljzj: ncll + zzqf

      tlnw: mrzn * flnv

      mbbg: zztr + zstf

      sldc: 2

      htzd: 4

      psfr: bzfm * qhps

      mppn: 12

      ltqj: gftl + cjbs

      vplf: 2

      dhpr: 5

      pqjz: sqtf + mgpr

      wsjh: vbzp * spvq

      sllp: 2

      rdnf: fjtg + bnff

      hbvq: mdvd * vmrs

      qbsd: shcw * bhmf

      jfdb: qzmz * tbtn

      mhpc: 5

      sbtw: rcbp * tnbp

      jvfh: 3

      njvw: 2

      rbwl: zstt + vhwd

      mbmr: mcqn * lqss

      qwtt: 5

      sbwq: 20

      prhl: mlls + csch

      hppv: rhbb * shqz

      nmdc: nncq + qvvs

      vdmp: pshg + nqcg

      nwcl: vsdw + ztng

      bfvm: 2

      gvhr: 5

      trhc: 3

      tnwv: jztz + jqjn

      lwsf: nvht * fpfj

      prjq: 2

      tzhf: pzsq + jjmh

      vpgz: 2

      ptbj: tdvv * nstl

      vlgf: 7

      sfsj: 5

      gvff: vjvd + dwjf

      tqhr: 18

      mffv: whgr * vnht

      mrqp: 7

      ssvp: 4

      tflv: 12

      bhwn: 2

      qvqm: chpb + vtsd

      cprd: 3

      sntc: 4

      psfj: 1

      dpjc: swwv * bmzt

      lpft: 3

      gjvr: 5

      snts: 9

      jrdw: 3

      ztfh: 3

      smlv: ldvc * nlzp

      jgwr: 14

      znpv: ljqw + gzlz

      mmzh: htzw * csbn

      llnt: 2

      sczc: hvlg * lrqd

      thgb: bmnw * svfd

      bshb: npqr * dnpf

      rtfc: 3

      mrzn: ztcz - wdqz

      brfq: gddm + lzfs

      smjh: 5

      gdgj: vfbb + vrtp

      nvfr: djwn * dsrt

      nrmf: tlwr * ztfb

      vjbm: 2

      vcpq: 9

      jqzn: pvph - wpsg

      chpb: 18

      fjdr: lldn + jccs

      htmz: 4

      bpbg: mcsc * tvhv

      pnhc: 7

      spds: cnpv * vtbt

      pmrj: qmhp * ltdp

      rpbc: swsm + tmqj

      hdff: 2

      btqt: 17

      wtjg: 5

      cqpd: nnll * clwz

      wpns: 2

      lqnp: 2

      gqrg: ntst + rcbq

      zstf: 5

      hsnc: 2

      vnlt: 14

      pnsn: ghhc * lbzf

      thwj: bdsw - pgwb

      pttq: dvdc * rvbt

      svdn: pmjs * swlc

      qwvh: 6

      dvnb: wptw / rsbs

      chwj: mfnn * pmss

      shgs: 4

      zfsf: cvmj * hfbg

      wbgs: 11

      gfqt: 3

      dppj: zbbt * mzhc

      vmzm: bgfl * wtpr

      nljh: pbzv * mwtl

      tnmn: stgs * bjcg

      slwg: vlcw * gzvg

      gdnd: mshh + dfpp

      rgnz: hntz * dmjr

      dnqj: gvqq * lbcr

      cmzj: 3

      nnnn: jntt * cwch

      wwqb: 5

      pscq: nnpb + vvjz

      wscg: 14

      bfrg: 3

      lsng: wvpz * wgps

      qhnv: nmgs * szsc

      hswm: jjdb - sngh

      cwch: 3

      rmlg: dgmc + lnwf

      pmls: hsnc * qcqm

      dpvl: rbpm * vddn

      lwwq: 4

      vphf: 2

      djwn: ncpc * bncg

      dsvb: rcnr * zfvl

      tmbs: mjjt * ldjn

      hgpp: 2

      mwdq: 2

      qwwh: drhc + vtsq

      gfcb: 3

      hnvz: 2

      btnn: 13

      lhmf: qvnp * mhhm

      nnpb: 5

      hsjl: wdfz * zdpw

      bnzm: 2

      rpff: tphg / hzmt

      hzsn: 2

      btvv: 3

      mtgd: 3

      ddhf: swsd + ghhh

      prnv: pltz + lwpm

      zmrz: 7

      nglg: 4

      lmqj: 2

      jzbb: 4

      rvcs: 3

      wzfh: hswm + lfcr

      cjjn: crwl / bgvb

      sqrj: qttr * rfdz

      hnpz: npvs - swbl

      qlfs: zgfr * hhms

      hfww: htzt * jlpp

      vhlg: zqld - qpnc

      pnrq: zpgc - wdrv

      zqlb: tgcm * zjqf

      tlqt: 2

      znzt: 4

      tmqq: czzb * nlhw

      jsdf: bhqn + tbvn

      tbzl: hnmc / vtjt

      ftpf: bdtg - wrvp

      qhzv: zhww * zfrn

      qctj: 2

      qztj: 11

      fmvc: 6

      szhl: twbh * lqzn

      ztfb: 2

      bphv: dzmg + mcpt

      lmhr: 2

      hmtz: 1

      jftj: 4

      wrvp: nhpg * gbjf

      rfdz: 5

      wcjw: 10

      qbwb: 15

      dqrg: 3

      nqcv: mwjt * ccmh

      jplf: crpm + zmbc

      spvq: 4

      fpts: 3

      rsbs: 4

      mgzq: 3

      cfrr: 5

      cfft: sddg + mbhc

      ctvj: 5

      scjl: 3

      srpt: qswc * zrqm

      prqp: 3

      dtsz: 6

      mvqd: wlgn * lmvf

      vncb: jcgg / hdqs

      qzmz: hpmc + cswf

      tzzr: 5

      zrfn: jhtm * mhpc

      ffvf: 3

      hqwp: 10

      wdqz: 9

      mspd: rdnf * pgmc

      qbzz: 2

      rdsp: 3

      lwbp: vwcb + npbl

      vwmt: 3

      mbsm: 2

      jzrw: 2

      vlgm: brcn + dhpr

      jfrm: qmvm * qgmp

      wlwm: 6

      blsb: 4

      tlwr: 5

      mwss: dwzs * shgs

      wdbp: 2

      lsfd: qslr * jfbv

      zzqf: 4

      nswz: lppg + jdqs

      rpwm: 2

      srzq: sqwj + tzmg

      tnnl: zrgq - ztmc

      pmqb: gtjc * mmgt

      lpwg: 1

      zdjz: 4

      rjdd: 2

      mjnq: rgnz + bzgv

      rgwr: tqjb + nljh

      bljn: vdcr * bbnj

      wjbz: 3

      hdrl: 4

      ffms: 3

      lrth: 2

      hqvc: 5

      jnwn: jdlg + rbrt

      rjqm: dsjl + rmfj

      wnzl: fbbg * hsdc

      wdft: 4

      qwvg: 2

      wpsj: zrtw + pbwr

      llzs: fzhr * cbjm

      dfzs: ftzd + nwsb

      sjtb: cmzz * lgfh

      htsm: dsvb - ffvf

      mfjn: 12

      wjcm: hhch + hvlh

      wnrb: zrwt + qcrn

      ljdn: brfq * ffvc

      pvph: mfqr + hjlh

      jfhm: 2

      zcbt: 4

      vnqc: rzcl + fwsw

      rlmq: sswz * spjv

      ltcp: 11

      qhjn: psvj * gnwd

      jbjh: 3

      jmvh: 14

      wcdt: bfvm * vsgs

      mrrc: 3

      rtnv: 9

      zgfr: pwrh * mgzq

      fwtt: stgz + vpgt

      mpzf: smjh * qtgf

      tdlw: dwmz / jmrv

      gfgq: 4

      jwrp: 5

      mjbf: 6

      rgtm: wgcw + vflt

      wcvd: tvdr * mwss

      lszr: 16

      ggpt: 1

      jccs: mmqn + tjmw

      bpnp: sbwq + hbcq

      hrhw: 2

      vwbt: 6

      njst: vhlg * wprh

      qtgf: 5

      mpqb: 3

      trnf: ptlc + rqdc

      hjtw: 2

      wjpl: zgzd + qbqc

      bmnw: jqqj + vmsf

      lcgh: 5

      snhj: mbsm * msqs

      qdsm: 11

      jfbr: 5

      qhmc: rfpg * slpg

      fbzr: 3

      zcdd: mcgm + tflv

      tsbz: 4

      nflz: 3

      dbjq: nqtd * rhlr

      jbth: 14

      wrsq: 2

      czsn: tsbz * mqwv

      fnzw: 3

      jlgt: 2

      dslv: 2

      rhjh: 5

      fmzz: vqll + psjp

      tmzs: 2

      grtw: 17

      ftlg: 3

      ptlc: gmvz * mnqv

      pmss: 5

      qngc: 1

      gbsq: jnpp + bngb

      gvjw: rmdl / hhtd

      flrs: 3

      bgpg: chps * vqgq

      ffhs: 3

      zfgh: sbjf + lgpj

      bhmq: wbwg * gldd

      gcph: 2

      ghhh: ctww + hjfz

      scpn: zrgr + hqwp

      lhrd: ftpf / nlsm

      nntq: zgvw - fqpl

      bwrh: 3

      bvrq: 4

      wfgw: gjtl * mrdv

      shlt: 3

      rmfj: mppn * fgzn

      ddqr: 7

      dstt: 4

      dhjs: btnn * jddd

      prhq: rsrh * cwsl

      nwgq: lptq + wzfh

      mnzd: 2

      vzqf: qghr * mrbt

      jhvm: tggw + tvtm

      mbtw: 1

      qgmv: mfld + szvl

      chzd: 2

      pwlt: mdhl / fjgc

      vqlg: 2

      chgs: jsmm / whdh

      mfcp: 19

      fmqp: hbmh * ppvl

      nqgz: 4

      ppvl: 2

      bfrv: 3

      zcvw: 3

      bzds: 9

      dmtc: 3

      lzgc: 2

      pgzb: znqf * bhzh

      jqdt: 17

      dgnj: 5

      sngh: 4

      qjzj: lstj + llqv

      mwqr: bbbj + bsrb

      nvdz: dqpd * fspj

      hzbm: 7

      mjlf: tqbh * wnqv

      dzpd: 3

      mvhr: dprf / dfnq

      lhnr: 7

      qlns: 13

      btwg: gsfj * mrvr

      dflq: flqr + bbjs

      jtrn: qplb + dfzs

      crlt: 15

      rbgm: lpft * pcwf

      pnsf: 2

      dwwp: 9

      znmp: jstc * zrfs

      ppwb: 2

      wlfc: 19

      qcsv: bnhn + sqtc

      cbcc: dpmr / fsmf

      vffw: 5

      bfdb: 4

      lfcw: rjqm * bphn

      wwqv: pwtq * hbvq

      bvrr: 16

      hvqw: lgpg - bgrt

      rtql: 1

      fndt: 5

      npqr: 4

      gnzd: gjvr * gmgz

      qwfw: hbbw + vzqf

      mgnz: ldlm + jsjt

      dshq: 3

      stgs: 2

      swwv: 2

      wtpl: htrz * csfz

      fzhr: bmbf / mrjm

      cgmw: wqrl * btgd

      ghhc: fddg * vdmp

      mnzf: szhl * crlt

      lsvj: 2

      pbsn: rmlg - fbpw

      jlzq: 11

      zzwv: 2

      mrvr: 12

      mdhl: mmzh - gwrd

      wpmr: 3

      bdcw: hlsw + qhwt

      lmbf: sfmr * wzfv

      hndn: 18

      lqss: rbvr + mnhz

      cvmj: rvzs * jrgj

      qcnz: 10

      tdvv: pwfv * dsqb

      gtgn: tmqq + jgwr

      wqbj: mnjj * bljh

      jcsh: 2

      dlpm: trdw + tslp

      ztng: wwpj - ghhp

      pprv: 10

      zsmv: 4

      gwth: 3

      vgjj: mhsn * rjrr

      hsqw: dcpr * wfms

      npnj: 3

      hvsj: 7

      hfjb: vpgg * sjcm

      npff: ccrm - csgb

      sthj: 2

      fjtg: rjsn + jwqb

      tpst: psfr * dcqv

      tpnf: hbtc * pwqj

      zfmb: humn - znmp

      qbqb: rbgm - rjgf

      tjlg: 2

      gtws: wtsh + tlzt

      pltv: 2

      ntws: wgzt + pgrl

      tbpg: 2

      qdrp: zzfs + vbqr

      fvjs: 5

      jcqr: 2

      tccg: jphm * jbqv

      gldd: pwtp - vhqg

      vtbn: qvfv - sjzh

      znbt: mbzb * cspv

      jdlg: rwmw + mjnq

      fbbz: wrqs * jlzq

      jsdz: 2

      glbm: jfbr * mddn

      tvdr: fvjg - thgb

      glvt: 9

      lptq: wqnm * rrpf

      vsnj: glhl * zssl

      llqv: 6

      fqzs: qzsv - zstc

      mzjn: fgng + fhvd

      gqtg: 13

      bhww: gzwj * rjdd

      hhqv: ztwn * hnnc

      cpbz: hdnn + sqrj

      smmr: mmrz + jmvh

      wdrp: 5

      qqdd: pmls * rsjz

      nwnp: ddww / vmgb

      czzb: 2

      mddc: nhrw * bjrb

      rqmg: hmlv + mwhj

      qrgf: tcwd * tprs

      zshv: vnqc * rbfj

      vldf: ghzr + wnrb

      rprp: tfbz + dstt

      rvzs: lctp + zshv

      lqrb: qltm * rzzf

      crrq: jtht + pbsn

      hdpb: 5

      ldfb: bzbl * pnlz

      mppz: qwhr + hsjl

      rqqn: vsgq * wzth

      bjrb: ncrf + bqgg

      mmrw: cjzd + bhsh

      lqhf: 4

      gzsm: pjwm + qmsc

      hvzn: 2

      qgcn: 4

      rznw: 4

      cppm: 17

      rfzs: 3

      rfts: fdzl + qpdl

      hvlg: 19

      hbbw: vfwh + pdrt

      gwrd: fmlp * ptqp

      dpmr: sbqc - bbrw

      vmgb: 2

      lmgh: 2

      rlfc: 5

      rqzz: 6

      nlbr: 2

      pnlz: 3

      cdbz: 5

      ltsf: lnzd + jtrn

      qrmn: 2

      hsdc: 2

      tmtn: 19

      pgmc: 2

      jsch: znzc * grtw

      jstc: mcbs * mgph

      cztz: 4

      cgwh: 2

      cggv: 2

      mqzc: 4

      vstg: 2

      cjzd: 4

      vrgr: 7

      tfdh: 6

      bnff: qztj + ftmr

      rtcz: bbmq * jwrp

      twdz: 13

      fzfs: 3

      mnhq: bchd + njgm

      njnf: 3

      bvff: 4

      sdhz: 3

      qcst: 17

      bbfz: 3

      btpf: vnpb * bjst

      bbjs: 17

      lgpg: nvls + bhwr

      zgrr: qlrq * gwth

      wgps: 2

      hwrl: 5

      vjmn: hjml + sqpb

      ctpt: 10

      shpm: 2

      mqbn: 2

      sljf: 16

      whqw: 2

      dtvh: nsbn * mflw

      gfzd: mfnh + rlqt

      ntwf: zvpr + vhvc

      pfdc: 4

      qpzq: 4

      hbmh: chwj + jnwd

      bnwp: jcbl * dghg

      nlsm: dhjc * gqbq

      rbrt: vvjn + zgzh

      sjfj: zhfg * fmqp

      mdhf: dnfj + gbwc

      qcrn: qwvz + pfdc

      mnhz: qtvj * rngf

      tqlr: 4

      dhgc: bzds + wvgd

      zssl: 2

      cwvj: 2

      zztr: mpsc * lzcp

      ctmz: 2

      dqcn: 4

      zqld: mbjv * tqdc

      sfgt: hccs + gfrn

      swmc: qngc + gmjd

      bgrt: prjq + nglg

      zvvf: 7

      tznj: mgnz + dvnb

      vfbb: 10

      pqtc: rbfg + wvgs

      rdnp: shtz + ltqj

      lspv: 1

      mwjt: 2

      mmgt: 7

      mzqb: 5

      bgzb: 3

      fjws: 15

      qzjc: 6

      rszl: 7

      mwtl: rhbv * zlcr

      qrpw: 5

      lzfs: qrgb * sczc

      vsnh: sjfc + hzfs

      wbwg: 3

      rcwr: 12

      qvtj: ntfc * cmzj

      zvgg: 4

      nccf: rdhl * bndg

      gpdb: vbsw + nhfb

      dqsc: pght * mrqp

      hnnc: dhgt * zwzg

      bjst: qppw - chfj

      wlhl: qbrs * dvnz

      mcbz: wlsf * tpst

      cnpv: 4

      mgph: 7

      bprq: pptd * wvwh

      fsmf: 3

      jvlg: slwg - jhsc

      lwpm: grtd * qqvt

      flpv: wjhq + tqtf

      vjwv: 2

      jhtm: 5

      zrgq: 12

      rbfj: 7

      msld: 15

      qqtv: 2

      fddg: 2

      htrz: 2

      fnwh: hlfj * mhmz

      wngq: gdnw + wlmt

      mfnh: 4

      bhsh: 5

      ngrw: 2

      wzdb: 2

      fjgm: 3

      jvdv: zjmm - dppj

      jrjd: 14

      vbqr: 3

      dnlb: hqvc * nlbs

      qrpj: tcpc + zsmv

      vhqg: ztmf * fpjt

      dstg: wgsh + qhmc

      mrwd: rgzm + fbdq

      tclf: 3

      fwwv: fqzs * hrvg

      mcnd: ltcp * vjwv

      lldn: qwtt * swmd

      pmzr: 8

      qzzp: fzfs * qrgf

      jfbv: 3

      jdqz: 3

      cbgn: rwjb * mrrc

      vbvn: tmvn + trrg

      jvcs: 10

      ctnm: bwvl * wwwj

      crcv: 2

      glsq: wwwg * dlws

      vwfr: 3

      csbn: 2

      jpsb: lmwb + lhmj

      wzfv: 3

      fpvj: 8

      vhwd: gdgj + sspl

      ljqw: qrql * pmzr

      bchd: wwvf - sjfb

      sczh: thjr * ffjl

      sfmr: fbvr / bzbb

      dmmn: 5

      bdsw: djbl * flcm

      bfdv: dnlb + wnzl

      gllr: 3

      dpcg: gsvv + jbrz

      zbbt: 2

      lbbl: 1

      qzcd: 3

      dztl: vbvn * nfpq

      pbwr: zfmb / hrhw

      hdbv: ptbj + qsjp

      mctq: 5

      sjcm: bjzh + mfjn

      qttr: hbwf - hmsq

      hdqs: 2

      hcpm: dnps + vgjs

      rhbb: 3

      fgng: 10

      fmcd: qcnz * mjrb

      bgwh: scrh * wwtg

      tphg: sntc * jlfh

      fqjb: 3

      wwtg: 4

      wvgs: 4

      bndg: 2

      rmrr: 2

      mcbs: dpjc + jhts

      gfwh: 9

      dvpl: 2

      dcqv: gjjl * tznj

      hwht: zjpf * lrzm

      dwww: 4

      jtnv: 4

      zjqf: nnnn * jqdt

      mdhs: 2

      cmwq: rtql + rzql

      prql: 2

      vnjc: 2

      wtpr: 8

      mcsc: jmcz + fbzw

      szqv: dsjd * mqbn

      sbrf: 5

      mgpr: bhww + jsch

      pwjt: 3

      lwgr: 5

      dcgq: 3

      cbjm: hzqz * rmvm

      vqll: 3

      swls: 2

      vmrg: 2

      tfbz: jzbb * cnfm

      fbfd: sjgw * bbgt

      jbcq: 4

      frds: lqrg - fmvc

      qltm: ppjr + tzhf

      fbgq: nhrm / grpq

      bnhn: 18

      hwgh: 12

      jlhw: hzjc * chns

      tqtv: jcdg * fjhr

      ctww: spgr * lqnw

      jqvj: lwsf + rcrn

      tvmf: mdhs * rsnj

      vflt: mqzr / hcqw

      pjdl: 2

      humn: 3705

      zffw: pqmf * ctvj

      gzwt: jqzn - vptl

      tmqj: 3

      tdrt: 13

      lpjf: 3

      ljtt: 2

      mzsr: 4

      mfst: dztl + hbmp

      lmvf: 7

      schc: 18

      qrql: 3

      dqpd: 4

      pjfg: 2

      mcss: cgmw + pmqb

      pshg: lsmd * qvdq

      lnns: 2

      nqhq: mhbw * mrwd

      gdnq: prmv + fdhl

      mcgm: pbsq + ncqz

      czph: ncnt * fnfv

      dnps: fmzz * jfrm

      rfcv: lzhv * rcmt

      sqtf: qncv * mpzf

      pltz: cwdd * rpff

      zsrr: 3

      drns: 3

      dmjh: 1

      hqhr: 2

      tvmh: 2

      mjrb: 4

      thvl: wwqb + twff

      gjjl: 3

      lpwr: 2

      gchm: pngg + rhdj

      wrvl: 5

      sfgz: swmc * znzt

      hpmc: 3

      nnpd: 7

      zbpn: mfps * jtnz

      tprs: pmgn + gddl

      szvl: rvnb + vdrs

      mzhc: 6

      vtgl: 11

      qgld: grfn + pmjj

      hznw: ntbs * psnm

      hhtd: 2

      dtbn: hlcb + jdqz

      ttnq: 3

      zdpw: pmmr + ztqs

      pnqz: 4

      bgfl: 2

      dqgt: 18

      jvjh: dffc + wdbp

      zwzg: 4

      jpfm: 19

      wszn: hmmf + jvdv

      qqpg: qzlv * hznw

      lctp: gdnq * nvrp

      rvbt: ptmh * qwvh

      qfmq: nppj * rhcc

      tbnw: rsgb / dsvv

      wrqg: bfdg * lbbz

      sjfb: bljn * wbcz

      gsll: 2

      lstj: 17

      cbgc: 3

      rpfs: qzzp * rffd

      zgzd: fvgl + zgcw

      vjfs: hwrl * cvcz

      hfbg: twdz * hdbv

      gjqp: bgpg - pvwh

      tqdc: 5

      tnjh: sbrf + pjfg

      ldgz: 5

      qgsd: zsrr * qqtv

      ghzr: mbtw + fbvs

      dptg: wclq * lcbf

      fnds: rlmq / mnzd

      wfdd: cmbb * grzc

      mbbf: wstc + npnz

      slgc: rcnm * rjlj

      qztv: wlwm * msld

      jjmh: lbpv / hcsb

      pcdc: cvgr * rfzs

      hvlh: msdb * cgcv

      wgsh: 20

      dnld: 2

      jqnc: jrjd / tgsn

      rfph: 5

      sdzz: 1

      nctj: sdhz * nnjg

      fbvs: bfrg * vlls

      qcnb: 2

      lfdr: 19

      hcns: 3

      hsrg: twhs + ftlg

      vwcb: psgb + lsfd

      hzjc: 4

      qqbm: nmwp + tccg

      dmqm: nnvh + fcvz

      jllc: ndmj * bdcw

      lhmt: wzdb * nwnp

      gftl: hcpm / bfrv

      tqtf: czjc * mpfg

      wwwg: 5

      thjr: 2

      tfbh: 3

      dsvv: 2

      hgsl: 5

      sfnl: pwrf * rfcv

      rvvt: rmst * qmfp

      bzbb: 6

      jpqb: gsll * lnmh

      qsfd: 4

      vptl: bvrq * nwng

      gdnw: vvcl + bpbg

      cvcz: 2

      dztc: vdjv + vjmn

      fvjg: hwgr / lwwq

      dvgv: gnzd + ntwf

      wsdn: wjcm / jwsn

      plgl: 4

      lrmg: 3

      qrgb: jbbv * cdbz

      hjsb: 13

      ctqv: 3

      qrst: 3

      nnqm: 2

      dnfj: 9

      lhds: 2

      hwgr: pwlt + slnf

      tqpq: vmzm + thvl

      trnr: 2

      cjlc: jhwj / gmld

      wcgw: 16

      frpw: nbmj / zlcn

      szwn: 12

      qpnc: fbzr + rlft

      nmbc: dtsz + lpwg

      znzc: 5

      lwcv: 2

      hcww: 2

      vsdw: 4

      jhwj: vphf * hwmv

      tmvn: 15

      mcpt: mcnd / zzdt

      lrzj: 19

      rngf: 2

      gszg: hqhr * zzvn

      gnwp: 4

      wcsz: 4

      pgjl: ncwg + fwpp

      gqsg: zwmj + qqpg

      cmzz: 2

      vsgs: 13

      psvj: bnzm * zfgh

      gtsh: wcjw + dflq

      qpzd: tnmv - hhsp

      fvmg: 2

      sbjf: 17

      nsbg: zbms * dtvh

      jrpp: 2

      qncv: 8

      djzl: jrdw * jhvm

      ddww: pnsn - lszr

      zvvl: 3

      bfvr: zscv * lgfv

      tnbp: 2

      qbjl: qjpj + szgd

      shps: rcwr / szlp

      czjc: 2

      njfj: smmr * vczm

      jzmc: htwj * fqfs

      drhc: 3

      qhwt: jbcq * psdd

      rljg: mhbf * vplf

      nlhw: sbwv * rjzg

      zdbq: 2

      npbl: vvgb + lbbl

      jhvw: 2

      jqsd: ltsf - gddd

      mbjv: frqv * rznw

      gsfj: 3

      szlc: 3

      ghhp: zspb * bgfr

      fjlb: ppwb * mnsm

      mlqv: 4

      htzw: fpcb + zddz

      rcsj: qwfw / vnjc

      fzdp: vtfv * mwqr

      vpgt: 3

      cqnw: zhmh * vlgf

      dvbg: qftf + ffms

      nmnt: zqlb + cqnw

      mzqw: dnsw * gwts

      fdhl: gqsg + lbfn

      rcsd: cpbz * pcrb

      dmjr: nrqs * lvsf

      wssb: 2

      sjhq: znpv * bhmq

      swbl: 6

      pbwn: dmcc + ctmz

      gvhl: 2

      stsn: nzcd * dshq

      hssv: fwtt * bgzb

      cllf: 7

      rwgp: qlzl * fcvm

      jmcz: schc + mzjn

      mhhr: rlhj + cfft

      csch: wfmt * frpw

      tpzh: 2

      mfnn: 7

      pwrf: 2

      mhbf: 5

      zffj: 6

      wgts: 2

      wnvc: ldgj * gtgn

      mlvg: 4

      vlls: 2

      jcgg: wsdn * pgfl

      mnmh: 13

      hbtc: 2

      sqwj: tjdg * mpbm

      jcbl: 2

      mmzg: wdcw + ltzg

      lgpj: 14

      mhsn: 10

      hlsw: 11

      szng: wtjg * lhbm

      mgtd: 5

      tjdg: 3

      fdzl: 8

      tlmv: vjrj + qnfp

      gzwj: tmsh - ggvg

      cztp: dwww + gbzz

      jjvz: 1

      vrtp: gnvr + gcph

      hcqw: 7

      wgqt: nbbt - qqdr

      fwpp: grnc * rszl

      nltb: 11

      ffvc: 2

      dwjf: 1

      mrbt: jvwb - cbcc

      vczm: 2

      tnmv: 10

      wzcn: jnnw + dmmn

      dtts: 4

      zwtw: fnwh / wpmr

      ptgf: 2

      zpfp: qhjn + tbjm

      psgb: 1

      gnqf: 13

      wprn: gvjw + sjhq

      hjfz: pscq * ghpl

      rbvr: zgrr + nhgc

      qwhr: mshb + nmnt

      grzc: 2

      mwhj: 13

      zrmv: frmb + wsjh

      zstt: 1

      qwsm: lwbp + hjqv

      gmnz: 3

      zhww: 5

      rtfb: 5

      lfmc: gstp / qnpj

      gjtl: bghn + chbw

      wgfl: 2

      dttm: 3

      qcqm: gdtq * lsvj

      twfd: plvz + dpvl

      ncpc: 3

      gtjc: 4

      cnnh: trmb * gvhl

      rzzf: 2

      dhjc: 3

      rcrn: mspd / trnr

      wrqs: 2

      bvqc: lqrb + fcdp

      spjv: 2

      vhtw: 5

      dvdc: 2

      dnsw: 12

      fvvc: 3

      tbsr: 2

      nccv: qvqm + smlv

      ptmh: 2

      rhdj: 3

      jqqj: hdpb * mwgm

      wtfc: 4

      spgr: zdjz + fnds

      tpvs: tbpg * mdhf

      jggh: dtbn + nctj

      brcv: zzjn + nvfr

      qddj: lspc * lmdr

      dnpf: 4

      bwvl: 2

      ltdp: 3

      ffjl: vgdg + wzsr

      jzrf: wgqt - cggv

      lmpt: 3

      sspl: cccs + zvzj

      lpbq: vpfn * mmpr

      crpm: twlz + qhnv

      qhps: gmpr - tdrf

      sbwv: 8

      vgrj: 2

      vvjz: gtjt * chzd

      mqsg: cprd * slsp

      qdgn: bdfc * qcvd

      zrgr: rphm * lmqj

      ldhd: 4

      slnf: nmdc * bzpc

      pmrz: mpfp * lqhf

      mlls: lpmg * gzqv

      dmtv: 2

      fmwn: pprw - zpqz

      zjmr: 2

      gnvr: psjl + nnqm

      qvdl: tslb * fnqc

      lzqw: 5

      szmt: 13

      gbwc: wgts * bgsb

      stjz: ssvp * swzv

      jtnz: mbbf * ddhf

      lrgs: mjbf * qlns

      wqrl: 2

      sfgc: vrgr * sbnn

      bzfw: srzq * nggm

      fjhv: 1

      shtz: gqrt * btqt

      gmpl: jfrg + vwfr

      nppj: drns * dvjt

      lnlb: tjlg * mrqr

      gwgz: ldhd * qfpf

      gpvp: mmzg / ntgd

      gdtq: jlhw + zrmv

      vqht: 7

      zszj: 2

      gmrz: 11

      hmsq: scrf * dzpd

      gbjf: gvhr * gpdb

      hcsb: 3

      jghl: hblv / rvcs

      mdth: 2

      lbzf: 5

      ltgb: bjll * lhdz

      rzsv: 4

      jgpw: qvtj / lnlb

      gzqh: 3

      dzjc: 16

      gzvg: 5

      wzth: 14

      rtzt: clhv / jrpp

      mjjt: 2

      qbrs: 7

      bgfr: 3

      mpsc: 3

      vjgn: 4

      jhwr: jlgt + hdrl

      hjml: mvwb * rpwm

      gcdc: qsfd + lzqw

      jnwz: nwcl + plhd

      vslq: fjlb + mnzf

      tvhv: 2

      mffq: rprp + qgsd

      gmgz: 3

      wgzt: tmtn + jzrw

      wptw: cwpb / rtfc

      gbvt: 4

      rbpm: gslh * mlvg

      pgfl: 2

      dwsq: gpzz * mgtd

      qslr: 2

      tslp: ldzd * jdvh

      hbwf: lhmt / crcv

      rsgb: qpzd * nhvl

      bncg: 3

      mbpg: nvdz - bcpz

      sqpb: 19

      vgbc: mgmm * qhld

      mptw: wqtf * fvvc

      cnfm: 3

      zrwt: 9

      zjtv: mbpg + pttq

      qvdq: 3

      rdjz: 3

      ztwn: 10

      vgdg: 19

      mwrp: zpfp * zpgm

      vczv: hfjb * pnhc

      mljv: prhl * gnqf

      fcdp: rcdt + gnrh

      lqzn: 5

      hlcd: 3

      zpgm: wqbj * zwdn

      qplb: qpvr - hzbm

      csqq: 11

      pbsq: 8

      rrjj: 17

      fhvd: 3

      fwsw: sjqr + jpvr

      mhbw: 3

      lppg: 5

      jntt: 3

      trqq: vtbn + hppv

      ztmf: 7

      lgfh: snhj / tvmh

      dghg: bprq / swls

      psjp: 12

      cwsl: 2

      zlml: gwtg + hndn

      bngb: 1

      bdfc: 4

      npvs: mfcp + jvcs

      sfnv: hmgc / sllp

      jwqb: fvjs * rtfb

      lhqf: 2

      pprw: tmlm * bwrh

      vbzp: 2

      pptd: 2

      sswz: pnqz + fpts

      zmbc: sldc * hnpz

      fmrw: bgfj * dttm

      hgvl: 3

      shqz: 3

      wvpz: qwvg + tcns

      rcnr: 11

      lqnw: 3

      bphn: 2

      frqv: 3

      fcct: 6

      gtmf: 2

      vmsf: jnwz + gdnd

      tdrd: 3

      vnht: 3

      vgjp: 8

      cfjh: 4

      hlqb: cllf + wbzw

      vtjt: 4

      mnzl: 2

      bjzh: 11

      ntpc: 5

      cfrf: 5

      grtd: 2

      mfps: rdnz + rgtm

      cmbb: 3

      gmpr: 8

      pwtq: lvml + qcjh

      cspv: 4

      fpcb: wjpl * tnnl

      mqwv: 7

      qmfp: gzsm + lhrd

      nbmj: zvvf * wrsq

      hccs: 6

      sqqv: vncb + tqjr

      wwwj: zmcb + ggpt

      smjw: 8

      gzlz: 2

      lbfn: shgv * mljv

      lrpd: 6

      qqcp: scwf / qctj

      scwf: jqnc * lnwd

      qgmp: 12

      sqtl: 1

      tgqs: 3

      pzsq: cnnh * dzvc

      sjbb: hswd + jlhz

      dcbz: dmjh + prnl

      bjsl: vslq * vjnr

      ncrf: 3

      dnqg: 2

      rwgf: 2

      hzqz: 5

      sdrn: qcst * rwrb

      vphq: stsn / vnqg

      qggg: bmmc + vhtw

      fbbg: 4

      jjnv: 3

      wfms: pprv + ldfb

      nlsf: 3

      vgjs: gprp * vnmn

      jmnr: 2

      bqgg: 5

      jzdg: bnbz * qwhg

      vtsd: 11

      cjbs: wszn * ldgz

      mshh: lrlj + tqhr

      sjtm: 2

      shjn: 2

      rjlj: zlml + mffq

      bpsh: rfph * hgpp

      qrqn: plgl * htmz

      gfth: 3

      tqbh: 2

      dlpg: 7

      hfmd: 2

      mwgm: jrbp / wslm

      hlcb: 4

      tptg: 17

      zpgc: wbgs * jcqr

      zlcn: 2

      sqsh: 3

      ffvn: 3

      gmld: 2

      jddt: 2

      fqfs: 3

      zgcw: qcfb - tzzr

      sbmj: dtpz + fwwv

      lbcr: 5

      vrhl: 2

      wcmp: 3

      djbl: bvqc + chgs

      fzzv: rdsp * qndw

      dzvc: 8

      bljh: 4

      gzrq: qbjl * lhrv

      vfsg: wwqv + fjdr

      bbmq: 5

      rrpf: 14

      zrfs: 3

      zfrm: 1

      qvnp: tlmv + tpnf

      pfff: bhwn * lhnr

      lgfv: 3

      nqwd: zmrz * mnmh

      vnpb: bvrr + sljf

      bzgv: bscm + nglb

      tqjr: 18

      hmtb: 4

      lvml: 15

      gqbq: 3

      pwtp: jqvj * zfgq

      rcnm: 4

      qfjr: wpnl + jsqn

      zdjb: 6

      cccs: 4

      szsc: 9

      sblz: 8

      qgwm: bqfv + zvgg

      tggw: dvpl * lhjl

      jjlm: vnlt * zcmz

      zmcl: 2

      nhfb: mmpc * wfgs

      gddm: bdgj * pcdc

      sjgj: cbnh / mchb

      tlzt: dnqg + ntws

      ggvg: rqzz * lwcv

      pchb: qfjr + sdzz

      swsd: trhc * dqgt

      tzvz: zfrm + bnwp

      jgml: 9

      gpsz: 2

      gphz: lspv + nntq

      mrqr: 3

      fwrp: 2

      frfm: 5

      rzcl: vcsd * mjlf

      nzcd: 7

      ppms: qbsd + mvhr

      zgvw: fgfd * sjbb

      twmj: 6

      sqtc: tpvs - jjnm

      bhzh: cqpd / njvw

      bnbz: cppm * dzln

      pcwf: 3

      rfhv: nvgj * mhhr

      dfpp: qbqb + vtgl

      nrqs: 2

      rsnj: gchm * qdjm

      lrzm: dlfm / fcct

      gprp: wcdt + qmzh

      rgzm: 5

      zhfg: 8

      jphm: gzcg * jvvt

      tsfc: 3

      psnm: dstg - ctgj

      pztt: vrhl * gjqp

      qcfb: bzqg * gzqj

      cdth: 4

      qflh: sspw + sblz

      nvgj: qmbj + cjfz

      mpfg: hbsl + mwrp

      jrbp: mqpc * mbbg

      wsqj: 3

      wmvv: 4

      hhnt: qblr + qvdl

      mljr: 2

      nnjg: 4

      lhrv: 2

      vvcl: rjcv + jzrf

      mnsm: tsgb * hlcp

      zznh: wpns * wwbg

      jsmm: mgvq - mzqw

      rncp: 17

      mgnl: qntf * lmpt

      zmcb: btgl + ztfh

      qlgp: 3

      qcvd: rwgp * hcww

      chbw: 14

      mbzb: 2

      qqdr: lhqf * gmpl

      shwg: 3

      mhjp: 3

      ztqs: djzl * stjz

      fbpw: dnqj + wpmg

      gmvz: 5

      rcdt: gptp * szng

      qntf: 2

      fnfv: 3

      lqlt: zcbt * hvzn

      pwqj: zwtw - psfj

      jfbj: 5

      mgzr: rmjs + qzcd

      htrp: zdbq * hsrg

      lqlr: 3

      bgsb: 4

      ndsl: jggh + ffhs

      wfmt: 3

      wwpj: hfmd + sfgz

      tcns: mpqb * dlpg

      fjhr: 4

      jpvr: zcvw * shmz

      qtvj: fwfq * vjbm

      rjzg: 2

      pcrb: 2

      rvnb: 10

      bgwd: 2

      bsnr: 7

      bfdg: 2

      wbcz: smdv * fndt

      fbvr: pqtc * jhwr

      lhtj: 3

      tmsh: njst / scjl

      sftz: 3

      wdfz: 4

      hmgc: pswd * psbd

      nvls: 19

      cwvw: sthj * pchb

      hrvg: 3

      zspb: 3

      nbbt: scpn + twfd

      phsl: 6

      scrf: 3

      chhp: vwmt * cwvw

      sslp: 11

      zlcw: 3

      lrlj: 12

      pvbc: qwgr * qgwm

      fcvm: sfgt + wtfc

      whnd: 5

      vvdr: 9

      zpvn: mbss + qsgq

      pmjj: psbv + wrqg

      mmpc: 5

      nmgs: 3

      ghpl: 2

      mrjm: 2

      stns: 1

      hwmv: bgwd * hljq

      fdmq: ffvn * zpvn

      hjqv: jdlv * fprb

      bqfv: nvdv + tqtv

      vlcw: 5

      cjfz: 4

      bfvg: 3

      nhrw: pnhr / hvsj

      frmb: glbm + znbt

      nlbs: 3

      bhmf: wmvv * fwwh

      tmsz: 6

      vdjv: 8

      zstc: 7

      mfqr: wdrp * slmq

      vnmn: 3

      plhd: szlc * jtnv

      bvth: sftz * qtmg

      lswh: 5

      mhmz: 7

      ldlm: 17

      zzfs: 4

      bjll: 2

      jlpp: lsng / jrzs

      mbhc: mlgm - tnjh

      wfgs: 2

      sbvb: hhqv + nqhq

      ntbs: 2

      tzdb: llzs + wngq

      jjdb: 15

      qghr: 3

      twtm: 2

      fbdq: 2

      wjqv: 2

      hjmr: 3

      dsrt: 2

      sddg: jjnv * szgj

      rmst: 2

      rfpg: 2

      hhsp: 3

      gzqj: 4

      jjnm: hgsl + qjwv

      mqpc: 2

      cmrj: 13

      twlz: lhds * dhgc

      mchb: 4

      qcjh: 4

      swmd: 5

      wslm: 2

      sdwm: 3

      bzfm: fjzc / cwvj

      prnl: pnsf * bmcs

      hlcp: lfmc + rqqn

      nsbn: 2

      vjrj: bztz + vmhl

      shgv: 2

      csgb: 3

      fmlp: pgjl * nngg

      dssb: qvbv + tfdh

      slsp: 11

      rjsn: fbfd * szjr

      vfwh: ctrq + cmrj

      msdb: 16

      fmlt: 5

      jdqs: 2

      pjzl: 2

      zjmm: nflz * hjsb

      mbss: 2

      brfj: 2

      nhpg: 5

      fjzc: vqlg * tzdb

      nggm: hmtz + lrpd

      jqjn: 4

      cjwj: 3

      jddd: 3

      psdd: 3

      bzbl: 3

      pjwm: 17

      nwng: 7

      qwgr: 8

      gmjd: dcgq + mqzc

      mflw: 3

      fvgl: 20

      tgcm: 3

      gwts: 19

      qhld: 2

      hbmm: 7

      jrzs: 2

      nhgc: 8

      rcbp: fbgq - wqjg

      tlqq: ngjs * rljg

      vqgq: plds * mvqd

      lfcr: 1

      dffc: dmtv + fzzv

      vtfv: rtcz + gcch

      qlrq: fpvj + gcdc

      rffd: qgld + mljl

      jnwd: 8

      lhbm: 5

      lpdb: 5

      bmcs: 3

      tbvn: bphv + fjws

      ftmr: 7

      qwhg: szqv + gfwh

      gbzz: 6

      gvfj: lwpw + btwg

      nwsb: 18

      cvgr: 7

      bgfj: 3

      bztz: 7

      rzql: gtmf * gmrz

      qbqc: csnr * lrth

      rlhj: sfnl * jfbj

      bwst: pwjt * nccv

      shvb: 14

      qwvz: tsfc + dvgv

      psjl: 5

      lhdz: 5

      rwmw: sjtb * bbfz

      ccmh: frds + rmtm

      hfjz: bvff * mlqv

      bdvl: 20

      lcbf: cztz + dzjc

      bbnj: 5

      mnqv: 5

      ndmj: 2

      jsjt: wlfc + hdff

      tsgb: 2

      qmbj: 9

      tffm: zcwf / zjmr

      bmbf: nqgz * zdjb

      jdlv: gzqh * jvjh

      bmmc: 8

      szjr: 4

      dwdz: frfm + shvb

      gzqv: 2

      gnvg: 3

      jqdj: 5

      scrh: lfdr - tmsz

      rcmt: 3

      mrdv: 2

      jhsc: 2

      nnvh: bnsh / jsdz

      snzz: 11

      drch: 7

      rdzs: bvth * gnwp

      jvtt: 3

      httv: qrqn + tzvz

      zjpf: 2

      htlb: mnhq / qfnr

      gvhb: bqcp * nlsf'
    parts:
      part1: "--- Day 21: Monkey Math ---\nThe \nmonkeys\n are back! You're worried\
        \ they're going to try to steal your stuff again, but it seems like they're\
        \ just holding their ground and making various monkey noises at you.\n\n\n\
        Eventually, one of the elephants realizes you don't speak monkey and comes\
        \ over to interpret. As it turns out, they overheard you talking about trying\
        \ to find the grove; they can show you a shortcut if you answer their \nriddle\n\
        .\n\n\nEach monkey is given a \njob\n: either to \nyell a specific number\n\
        \ or to \nyell the result of a math operation\n. All of the number-yelling\
        \ monkeys know their number from the start; however, the math operation monkeys\
        \ need to wait for two other monkeys to yell a number, and those two other\
        \ monkeys might \nalso\n be waiting on other monkeys.\n\n\nYour job is to\
        \ \nwork out the number the monkey named \nroot\n will yell\n before the monkeys\
        \ figure it out themselves.\n\n\nFor example:\n\n\nroot: pppw + sjmn\ndbpl:\
        \ 5\ncczh: sllz + lgvd\nzczc: 2\nptdq: humn - dvpt\ndvpt: 3\nlfqf: 4\nhumn:\
        \ 5\nljgn: 2\nsjmn: drzm * dbpl\nsllz: 4\npppw: cczh / lfqf\nlgvd: ljgn *\
        \ ptdq\ndrzm: hmdt - zczc\nhmdt: 32\n\n\n\nEach line contains the name of\
        \ a monkey, a colon, and then the job of that monkey:\n\n\n\n\nA lone number\
        \ means the monkey's job is simply to yell that number.\n\n\nA job like \n\
        aaaa + bbbb\n means the monkey waits for monkeys \naaaa\n and \nbbbb\n to\
        \ yell each of their numbers; the monkey then yells the sum of those two numbers.\n\
        \n\naaaa - bbbb\n means the monkey yells \naaaa\n's number minus \nbbbb\n\
        's number.\n\n\nJob \naaaa * bbbb\n will yell \naaaa\n's number multiplied\
        \ by \nbbbb\n's number.\n\n\nJob \naaaa / bbbb\n will yell \naaaa\n's number\
        \ divided by \nbbbb\n's number.\n\n\n\n\nSo, in the above example, monkey\
        \ \ndrzm\n has to wait for monkeys \nhmdt\n and \nzczc\n to yell their numbers.\
        \ Fortunately, both \nhmdt\n and \nzczc\n have jobs that involve simply yelling\
        \ a single number, so they do this immediately: \n32\n and \n2\n. Monkey \n\
        drzm\n can then yell its number by finding \n32\n minus \n2\n: \n30\n.\n\n\
        \nThen, monkey \nsjmn\n has one of its numbers (\n30\n, from monkey \ndrzm\n\
        ), and already has its other number, \n5\n, from \ndbpl\n. This allows it\
        \ to yell its own number by finding \n30\n multiplied by \n5\n: \n150\n.\n\
        \n\nThis process continues until \nroot\n yells a number: \n152\n.\n\n\nHowever,\
        \ your actual situation involves \nconsiderably more monkeys\n. \nWhat number\
        \ will the monkey named \nroot\n yell?"
      part2: ''
    title: '--- Day 21: Monkey Math ---'
  22:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: "..................#..#.....#....................#............#.......#..##..........................\n\
      \                                                  .#...#.....#.........................................#...##...#...#....#...................#........\n\
      \                                                  ...........##.......#.........#.#.#...#..#.............#.............#........#.................##..\n\
      \                                                  ..#........#.......#.............................................#......#...#.......................\n\
      \                                                  ..............................#..........#...................#..................#.............#.....\n\
      \                                                  .......#..#.....#.......#...#.........................#.........#...#..#...............#........##..\n\
      \                                                  .........#.....#...............#...##.........#...................#..#..##.....#...........#.....#..\n\
      \                                                  ..#.#.......#............#.#.............#...................#......................##..............\n\
      \                                                  #......#......#......................#.......#.........#..............#.....#.#....#...#..#.........\n\
      \                                                  #.#.......#.............................#.........................#.........#.#..#............#.....\n\
      \                                                  #.................#...........#...#...#.....................................#............##...#.#...\n\
      \                                                  ............#.....##............................##............#..#...#.......#..#..............#....\n\
      \                                                  ....##..............#.................#...............#....#..#...#..............#.........#........\n\
      \                                                  ......#..#...................................#.#......#..#....#............#..#......#..............\n\
      \                                                  .........#........................................#........#....##....................#...........#.\n\
      \                                                  .............#....##.#..#...#...##.#..................#.........#.##................................\n\
      \                                                  ...............#...........#.........##................#............................................\n\
      \                                                  #.###.#..#.........#......#........#......#......#.......................#.....................#....\n\
      \                                                  ......................#................#.........#....#..##.....##....#....#........................\n\
      \                                                  ...#.#.............................#.....##...#.#......#.......#.#..........#.###................#..\n\
      \                                                  ......#....#.............#...............#.........#................#..#...........#......##......#.\n\
      \                                                  .#.....................#...........#..............#...........................................##....\n\
      \                                                  ....#...................................#...........................#..............#...........#....\n\
      \                                                  ......................................#..........................#.............##...............#...\n\
      \                                                  ###.......#.....#..#...........#..#.#.....#......#..........#........#.....#..#......#..............\n\
      \                                                  .................#....#.............................#..................#.##.....#...................\n\
      \                                                  ...............#...........................#....#......#..#...........#.............................\n\
      \                                                  .........#....#........#.....................#.......#.#.#................#.........................\n\
      \                                                  .........##..#....................................#.........#...#...#.....#.#......#................\n\
      \                                                  ...##.......................#...........#...#........#...#.###....................#..........#......\n\
      \                                                  #....................#......#...#....................#................#.#........##.........#......#\n\
      \                                                  .....................................#................#..........#......#.........#...#.............\n\
      \                                                  .....................#.....#..........................................#............#................\n\
      \                                                  ....#..#..#........#..........#....................#....#...#..#..............##................#...\n\
      \                                                  ............#.#...........##.............................#.............#..#.................#.......\n\
      \                                                  .....#........#...##...............................#............#...#....#...#............##........\n\
      \                                                  .....#...#.......#....#....#....#...................#...........#................#.........#........\n\
      \                                                  .#.#.......#.#..........#..................#.........#....#...............................#.........\n\
      \                                                  .........#..#.............#......#......#......#........#........#.#.#.................#....##......\n\
      \                                                  .........#....#......................#.#.............###...#...#........#.......#....#..##..........\n\
      \                                                  ...................##......#.........#...#...................#..................#...................\n\
      \                                                  ..........#..........#....#.........#...................#............#..#...........................\n\
      \                                                  ..........................#...............#....#...........#.................#.........#.#...#.#....\n\
      \                                                  ......#....#...................#........................#........#......#...#......#................\n\
      \                                                  #..................................#....#................#.#..............#.........................\n\
      \                                                  .....#...#......................................#.....................#.....#......#........#.....#.\n\
      \                                                  ..#.....#.......#..#...#...............................#.......#..................#......#.#........\n\
      \                                                  ....................#.......#........#.........................##..#.........#.#.#........#....#....\n\
      \                                                  ........#............#.......................................#........##............................\n\
      \                                                  ....#..............#...........#....##............#.............#.....................#.............\n\
      \                                                  .#........#.........#.....#.#...#..............#.#\n\
      \                                                  ..#......#....................#.##........#...#...\n\
      \                                                  ............#.......##......##........#...........\n\
      \                                                  ......#.#.........#.......................#.......\n\
      \                                                  ............#...................................#.\n\
      \                                                  ............................#.#..............#....\n\
      \                                                  .........................................#........\n\
      \                                                  ............#.......#....#..#................#....\n\
      \                                                  ...........#.#............#.....................#.\n\
      \                                                  ..........#...#.............................#.....\n\
      \                                                  ....................................#.#..##.......\n\
      \                                                  ..#....#............#.....#.......................\n\
      \                                                  .....#...#...........#............................\n\
      \                                                  ...............#.......#..........#.....#.........\n\
      \                                                  ..................................................\n\
      \                                                  .....#.##.......#.##.....#.#.#...#................\n\
      \                                                  ...........#..##.....#..................#.........\n\
      \                                                  ....................#.......................#.....\n\
      \                                                  .......#...##...............................#...##\n\
      \                                                  ......#..............#........#.........#....#....\n\
      \                                                  #.#.##...........#.......#..#........#...........#\n\
      \                                                  ............##.................#.##...........#...\n\
      \                                                  ...#.......#................#.#..#.#..............\n\
      \                                                  ..#...........#............#..#.#......#.........#\n\
      \                                                  ..................................................\n\
      \                                                  ...........#..............#..............#........\n\
      \                                                  ....#.#..............##.......#.#......#...#.#....\n\
      \                                                  .........##.............#...#...#.................\n\
      \                                                  ...#......#.....#...#..#..##..........#...........\n\
      \                                                  .........#............#...........................\n\
      \                                                  ......................#....#.........#............\n\
      \                                                  .......................#...............#.......#..\n\
      \                                                  ..........#.#....#............##................##\n\
      \                                                  ..#......#..........#..#......#.......#.........#.\n\
      \                                                  ................#.#...#.......#........#..........\n\
      \                                                  ....#.....#..............................#........\n\
      \                                                  ..............#............#...................#..\n\
      \                                                  ....#.......#..#.....#...........#.....#......#...\n\
      \                                                  ......#.....................#......#.#............\n\
      \                                                  .....#.#....................#..........##.....#...\n\
      \                                                  #...........#........#............................\n\
      \                                                  ..#..........#..#...........#....................#\n\
      \                                                  ...#.#.........#.........#.....#............#.....\n\
      \                                                  ...#.........................#....#.#......#......\n\
      \                                                  ....#.....#..............#.............#..........\n\
      \                                                  ...#........#...........##.......................#\n\
      \                                                  #....#.......#......#...#..........#..........#...\n\
      \                                                  ........#...#.......#.....#...#................#..\n\
      \                                                  #..............#.#....#..#...................#....\n\
      \                                                  .........#.....#.#................................\n\
      #....##................#..........#...#.#......#...........................#.........#...........#..\n\
      #..........................#..........................#......#.......##.#...........................\n\
      #.......##...#.......#........#.....#......#...#.#....#.....#.......#.............#.................\n\
      .#......##.....#.#.........#........#...#.......................................#...........#.....#.\n\
      ........#..###............#......##..#............#.......#.....#....#.......#......................\n\
      ....#.#.....#...#....#.....#...#..#.#...........#..............#..................#............#....\n\
      ..................#........#..#.....#..#...#....##..............#..##...#.......#.....#.............\n\
      ......#...#.##......#......#.....#....#..........#.....#.....#...............................##.....\n\
      .......................#.....##.......#....#....................................#.................#.\n\
      .........#........................#..........#...#......#.....##....................................\n\
      .......#........#...................#.......#...#.............#.#..........#.#...#..#.....#.....#...\n\
      .....#..............#................#.....#........................#....#....#.....................\n\
      ##...#.#..#..........#.................#....##......#.......#..................#.......#..#..#......\n\
      #............#...#.................#.................#.#..#.......#.#...............#...............\n\
      .#...........#...#.........................#........#.......##..................#....#..............\n\
      #......#.........#...................#........#........#.........#.............#.........#..........\n\
      .................................#...#......................#........#...#....#.....................\n\
      #..........#...........................#.............#....##.............###.........#........#.....\n\
      ..............#..##...#..............#.......#............#...#.....#............#....#......#.#....\n\
      .........#.....#......#.....................................#.............#.......##..#.......#.....\n\
      ..#..#.#......................#....#..........#...........#............................#....#...#...\n\
      #............#..............#...#...##.#.##........#..#....#....#...#...............#.#.............\n\
      ..#...............#....#...#.........#..#......#..............#........#.........#..................\n\
      ...........#....................#.....#...#...#..........#..........................................\n\
      ......................#.............#....#..............#.......#....#.#...........................#\n\
      .................#.......#...#.......#...................#.#.......#.....#..........................\n\
      #............................#..#..........#..............##..#.............#..........#............\n\
      ..................#.....................................#..#.#................................#....#\n\
      .#......#......#.......#........#.............#..#....................................#.....#..#....\n\
      ........#..#.......................................#............#.....##.........#...........#..#...\n\
      ......#..............#..#..#..#.............#..................#...#...........................#....\n\
      ......................#...#..#.......#.#....................#...........#.......................#...\n\
      ..#...........#..................#..#....#............................#....#...#.............##..#..\n\
      ......#....#....#.#.......#...#...............#..........#..........#....#...#....................#.\n\
      ......................................#................................#...#...........#....#..#....\n\
      ................#.......................#.......................##.#........#...#............#......\n\
      ......#..#.................#..........#......................#............#....#..#.......#.........\n\
      ..##..............................#..#....#.................#........#.#.......#....................\n\
      ...##.#....#..#..............#......#.......#..#.#.#.......#.#.......##..........#.....#..........##\n\
      ......#..#....#....#..#.......#............#........###..........#.#..#...........#..........#..#..#\n\
      ...#........#..........#....................#.........#.....................#...................#...\n\
      .#.#........#.................................#..............................#......#...............\n\
      .........#...........##........#..............##........#..........#.................#..............\n\
      ......###....##...#.......................#....................#...................##.#..........#..\n\
      ..............#....#........................................#.#.............#.....#.#....##.......#.\n\
      .........................................................................#.#.##.#..#.....#..........\n\
      ...#.........#.........#......#..................#....................#..........................#..\n\
      ..#...#.....#.............#..##..............................#.........##.#..#......................\n\
      .....................#...........#.....#......................#..............##..........#.......##.\n\
      .............#...............##.................#...#.........##........##.........................#\n\
      ...#..............................................\n.#.#..#...........#.............#.#......##......#\n\
      .................................#........##..#.#.\n.......................#......#.........#..#......\n\
      ..#.............#.#................#..............\n.........##.##....................................\n\
      ......#..##.............#....#.........#..........\n...............#...........#..............##......\n\
      .........#.......#.#..#................#.....#..#.\n.#..#.......................#.....#.........#..#..\n\
      .................#..#...................##.#..#...\n........#...............#...##.............#..##..\n\
      ...............#..........#.......................\n..........#......#..#...................#.......#.\n\
      .#.......#..#..........................#..#.......\n#.......#............................#............\n\
      .....#.#........#.........###............#........\n.#.............#............##..#...#...#.#.......\n\
      .........#.......#..........#...#........#.#......\n...#...........#...............#..................\n\
      ........#................................#........\n............#................................#....\n\
      ....#........................#..##......#...#.....\n.#.##..............#.#..................#.#...#.#.\n\
      .............#..........#...................#.....\n..##....#....#..#...........#....#.##.............\n\
      .#.........#....................#...............#.\n........#.#..........#...............#...#...#...#\n\
      ...............#.#..................#.....##......\n.....#....#.##..........#.......#....#...#....#.#.\n\
      ..#.............#......#............#......#..#...\n..#..#............#.#................#..#.........\n\
      .........#.......#......#......................#..\n..........#.........................#.............\n\
      .##.......#...................#.........#..#......\n...........#.....##.....#.#...#..........###......\n\
      ...........#.......#..............................\n.........#.......#...#.....#..........#....#..#...\n\
      ......###.#....#.#..........##....#.......##.#....\n.......#.............#..................#.....#...\n\
      .............#..........#......#......#...........\n...#...........###.....#..#.................#.#...\n\
      ..................#........##....#......#..#......\n........................#.........##.....##.......\n\
      ........#..#.#....#..........#...#...........#....\n.....#........##........#............#..#.........\n\
      ....................#............#.......#........\n.................#.#...#....#.........#..##.......\n\
      ...........#..........##....#..........#.....#....\n..............#..........#.............#..........\n\
      \n10R47R7L35L4R34R29L20L45L43R33L46R31R10L1L6R7R25R45L46R12R35L9L22R10L3L35R48R19R26L6L45R49R5L14R17L4L27L13R24L41L11L15L10R9L9L10L44R8L14R25R32L33L45L25R8R22R44L5R5R23R26R32R36L13R38R27L22L10L33R39L21R28L10R5L14R35R9R16L9L46L28L16R32R4L8L41R20L36R47L31R26R49L4L16R6R40L3R19L15R7L50L40L32R12R2R5R15L10L4L23R9L1R1R48R7R39R32R6R23R38L7L17R28R50L33L27R36L46L44R27L20L2L17R4L21L3L31L29L43R18R14R22R17R7R33L33R30R35R5R35R7L39L30L5R38R6L47L44R33R4R10R17R27R20R44R25R10R26R28L35L28L46L13L11L40R40L8R35L6R27R35R17L10R38R44L23R17R10R38R34R49R46L15L7R26L20L9L14L8R1R41R31R20R27R36L39L48R23R19R44L6R50R49R29L48L4L34L36L43R9L10R4L24R16L25R47L41L10R22L24R3L21R15R36L38R39L37L7R24L39L5R20L9L22R17R18R18L21L32R22R13L15L49R50L31L43R5R17L37R40R41L30R15L9R43R3R23L17R14R29L13R12R5L43R17R34L20R41R4L41R19L45L5R19L2R37R44R25R22L40L31R42L7R36R10R26R26R8L5L30R49L14L48R39R20R32R20L1R47L22L1L3L47L5L47R27R20L26R11R28L18L50L18R46L44R28L33R46L45L1L35L20R5R47R26L3L42R21R30L36R44L19L49R12L13R42L9R6R18L18R43L39R40L29R17R2L14R4R45L44L1L17R27L4L37L1R8R28R36L50R31R21L33R2L33R35L3R4R50R37R38L19L12R40L39L2L14R12L40L4L29L42L5R1R11L33R20R41L21R12R50L19L32L3L35R45L37L4L47L32R28L35R33R2L18L43R23R46R33R29R41R15R3L23R47L48R3L22L36L9L29R17L22R2L40R47L16R35R22R37L35R48L24L36L12R45L9L34L30L16R12L22L28R25R4L8L12L48L37L35R19L7L14L18R9R28R45L50R32R33R8L13L49R16R31R36L41R27L26R33L9R24L40L39R11L3L24L37L23R5L50R39R23L1R22L22L25L19R11L24L5L9L23R21L48R9R1R49R15R32R46L13R14L39R10R1R23R30R15L21L31R7L48R16L43L36L18R42L45R44L40R37L38R33L11R12L30R39L5R31R39R20L1L38R16L46R36R48R4R1L6R6L34L16L13R39R3R12R5R38R12L34L39R12L18L25L5L18L45R6L10L7R20R15L49R3L17L20L28R43L48R32R30R44L41L16R41L9R8L21L7R20L22R12L3L49R9L30R13L34R25R46R12L16R23R43R16R49R37L5R29R4L7R40R18L32R16L30R30L7R50L2R13R12L4L34L15R3R22R44L12R7R26L8L38R23L41L45R42L28R7R16R21R32R20L21L49R7L21R38R37R7L42R4L32L31L29R39R47L22L44L2L12L46R31R29L5L32R24R46L48R43R25L45R40R12L41L5R19R16R29R22L47R5R45L10R14L25L19R15L40R4L21L41R27L37R19L34R47R22L22L36L8L38R29L37L47L22L40R12L16R30R44L10L50R49R26R30R31R27L22L33R27R14R22L12R7L25L44L34L46L42L44R20L41L12R30L20R26L8L9L31L15R41R41R43L34L1L14L1L21L17R7R29L37R12R44L10R39R7R25L4R37R16R23L19R7L37L2L5R27R16L33R50R30R2L11R47L44R40R30R48L46R3R9L15L1L41R45R18R5R36R2L7L14R11L50L48R22R40L44L43R39R40L30L9L29L46R23R22L45L45R20L18L8R9L46L38L20R38L35L10L4R41R4R43R9R27L15R42R35L4L49L49R11R36R38L9L15R7L45L43R4R30L5L12L36L28R42R13R50L45L24L19L39L7L24L50R23L30R12L6R12L24L36R35R43R39L31L37R14L5L32R19R34R45L47L40R23R37L22R14L50R39L42L19R11L17L14R29L30L20L11R21R42R28L44L10L41L5R41L48L30R49R25R22R46L41L20L34R41R23R5L21L38L24L16R11R33R8L43L19R36L42R38R15L43R10L41L34L27L1R36L18R12R47R7L23L20L43R47L25R3L24R26L42R9R38R8L35R46L40R3R48L50R25R15L45L45R28R44L43R18L23R22L5R32L31L29R41R33L42R2R32L48R32L4R41R25R12R20L34L12R24R2L30L26R21R19R43R22L11R1L36R17R11R1L17R25L42R49R7L50L43R20R16R36R7L37L23L6R5R7R30L4L20L44L43R8R16L1R24R44R32L35L17R12L41L40L6R44L30L22R39L35L28L25R38R2L4L2L44R36R47R9L26R20L36R41L5L44L46R13L6L41L38L3R8L43L18R8R8L25L19L19L29L12L36L11R42R27L14R17R22L42L34L35R49R5R1L26R18R7L34L8R42L29R2L15R17R29R39L22R12L17L25L45L41L50L45L49L42R21R16L17L16R20L6R21L26R33L42R35L28R31L30L39L17L47L25R17L29R4R15R3R27L20R49L23R29R2L28R43R21R14L41L45L20R31R16L46R10R8R33L44L38R16L19R30R7R4R13L37R46R23R5R2R23L42R22L1R8L12R15L9L49L13R2L1L11L15R29L3R23L21L40L32L44L32R44L10L44L1L7R38R50R25R14L32R25R15L18R1L40R34L17R9L8R26R29R7L19R6L18R47R11L25R2R37L29L47L32L1R6L44L29L45R25L12L5L13L28L20R30R50L39L9R15L4L30L36R27R34R3L16L41R42L9R16R50R45L14L10R46R28L6L45L44L22L40L32L20L34R18L30L4R14R29R9L15R13L50L3R37R38R42R35L10R31R25R33R6R26R33L6R33R35R4L12R27R18L47L40R17L22L8R17R40L44R23L44L5L37L20L14L16R15L38R34R37L10R29R20R40L40L10R11L5R18R26L17R50L27R40L7R14R28L39L13R3L38R7R26L33R3R36L7R24L9L31R39R38L20L8R42R32L5R7L19L9R18R46L20R26R3R27R45L3R21L36R39L49R16L42R1R48R3R24L50L29R46R32L13R50L50L34R26L7R24R25R27L30L23R32L9L20L50R15R4L21R1R39L50R9R1R25L44L48R16L47L36R21L15L5R1L6L1R45L5R29L29L26R36R47L43L7L48L15L8R5L17L37R17R30L35R40R21R18R9L44L27R14R41L40L25L27R42L33R17L34R29R50R35L16R11R47R36L12L41R2L19L3L17L46R1R39R36L37R19R29L1R37R15L11R41L12L16R4R35R49R20L6R35R38L5R35R3R14R4L47R5R24L40L44L16R32L18L2R21R5L25L18R4L4R5R36L45L8R34L42L24L35L17L45R37R48L32R14R40L21L45L11R14R31R31L20R41L42L21R33R33L49L41R8R25R1R27R3L37L5L24L48L44L10L13R43L18L20R27L47R21L34L29R11L43R6L44R35R38L16R25L13R36L22L41R7R47L24L43L7R37R12L26R23R32R26R43L44R41L34R30R19L30L38R19R34L33L48R38R9L35R40L41R37L37L35R31R50R48R38L33L47L17R13L45R34L40L17L5R47R25L28R19L50L11L11R23L29R20L13R42L50L22L6L21L24R12R34R22R46R33L14L46R18L32L19L19L42R29R23L19L23R25L27R45R3L1R28L46L50R17R31L41R41R39R30R19R43L44R35L14R41R23L28R9L13L17L30R15L39L5R10L39L45L31R37L22L3L31R8R9R19L18R20L21L37L24L41L9R45L33L24R47R44L11R25R5L36R43L15R28L5R33R18L34R32R30R2L29R16L37R43L28R41R12L22L26R21L35L29L25R17R7R18R10R15R33L49L9R28L33L4L43R21L5L15L24L3L24L20L33R43R36L23R10R40R4R1L26R29R20L2L50L39R4R40L13L13R43R25L38R7R48R33R12L49L25R7L36L42R21L22R10R30L6R35L11L3L8R50L3R34R13L13R33L6L9L7R25R11R9R14R12L18R28L18L44R21L4R25L18L29R23L21R46L32R44R16R47R40L43L11R44R41R30R42R5R20L12L26R21R17L18R24L30R2R2R26L5R44L19R11L16R35L47R12L32L47L18R28L32L1L1L11L48L50L37R44L12R34L21R8R41R17L43R38L5L17R4L16L33L15L31L23R18R22R39L40R38L10R50L35R18R11L17L6L46L24R25R12R19R12R41R43R16R21R23L2R19L27L5L45L13R47R22R5R2R14R11R34R40L48R45R50L4R16L10L42R37L25L3L44L11R7L16R34R2R28L3L23L26R11L10L27R15L14R39R11L4R26L40L48L12R49R42L43L49L38R33R24R26R12R46L36R19L42L34L50L28L49L46L36R37R18L11L15R47L49L1L48R44L3L26L18R28L44L29L7L7R50R36L50L39L1L11L23L50L14R39L33L8L46L44L29R50L48R9L41R18R17L24L32R20R30L16R25L32R1R10R43R21R3L41R9L38L32R13R42L41R47L12R28R10L30L2R27L1L42L45R14"
    parts:
      part1: "--- Day 22: Monkey Map ---\nThe monkeys take you on a surprisingly easy\
        \ trail through the jungle. They're even going in roughly the right direction\
        \ according to your handheld device's Grove Positioning System.\n\n\nAs you\
        \ walk, the monkeys explain that the grove is protected by a \nforce field\n\
        . To pass through the force field, you have to enter a password; doing so\
        \ involves tracing a specific \npath\n on a strangely-shaped board.\n\n\n\
        At least, you're pretty sure that's what you have to do; the elephants aren't\
        \ exactly fluent in monkey.\n\n\nThe monkeys give you notes that they took\
        \ when they last saw the password entered (your puzzle input).\n\n\nFor example:\n\
        \n\n        ...#\n        .#..\n        #...\n        ....\n...#.......#\n\
        ........#...\n..#....#....\n..........#.\n        ...#....\n        .....#..\n\
        \        .#......\n        ......#.\n\n10R5L5R10L4R5L5\n\n\n\nThe first half\
        \ of the monkeys' notes is a \nmap of the board\n. It is comprised of a set\
        \ of \nopen tiles\n (on which you can move, drawn \n.\n) and \nsolid walls\n\
        \ (tiles which you cannot enter, drawn \n#\n).\n\n\nThe second half is a description\
        \ of \nthe path you must follow\n. It consists of alternating numbers and\
        \ letters:\n\n\n\n\nA \nnumber\n indicates the \nnumber of tiles to move\n\
        \ in the direction you are facing. If you run into a wall, you stop moving\
        \ forward and continue with the next instruction.\n\n\nA \nletter\n indicates\
        \ whether to turn 90 degrees \nclockwise\n (\nR\n) or \ncounterclockwise\n\
        \ (\nL\n). Turning happens in-place; it does not change your current tile.\n\
        \n\n\n\nSo, a path like \n10R5\n means \"go forward 10 tiles, then turn clockwise\
        \ 90 degrees, then go forward 5 tiles\".\n\n\nYou begin the path in the leftmost\
        \ open tile of the top row of tiles. Initially, you are facing \nto the right\n\
        \ (from the perspective of how the map is drawn).\n\n\nIf a movement instruction\
        \ would take you off of the map, you \nwrap around\n to the other side of\
        \ the board. In other words, if your next tile is off of the board, you should\
        \ instead look in the direction opposite of your current facing as far as\
        \ you can until you find the opposite edge of the board, then reappear there.\n\
        \n\nFor example, if you are at \nA\n and facing to the right, the tile in\
        \ front of you is marked \nB\n; if you are at \nC\n and facing down, the tile\
        \ in front of you is marked \nD\n:\n\n\n        ...#\n        .#..\n     \
        \   #...\n        ....\n...#.\nD\n.....#\n........#...\n\nB\n.#....#...\n\
        A\n\n.....\nC\n....#.\n        ...#....\n        .....#..\n        .#......\n\
        \        ......#.\n\n\n\nIt is possible for the next tile (after wrapping\
        \ around) to be a \nwall\n; this still counts as there being a wall in front\
        \ of you, and so movement stops before you actually wrap to the other side\
        \ of the board.\n\n\nBy drawing the \nlast facing you had\n with an arrow\
        \ on each tile you visit, the full path taken by the above example looks like\
        \ this:\n\n\n        >>v#    \n        .#v.    \n        #.v.    \n      \
        \  ..v.    \n...#...v..v#    \n>>>v...\n>\n#.>>    \n..#v...#....    \n...>>>>v..#.\
        \    \n        ...#....\n        .....#..\n        .#......\n        ......#.\n\
        \n\n\nTo finish providing the password to this strange input device, you need\
        \ to determine numbers for your final \nrow\n, \ncolumn\n, and \nfacing\n\
        \ as your final position appears from the perspective of the original map.\
        \ Rows start from \n1\n at the top and count downward; columns start from\
        \ \n1\n at the left and count rightward. (In the above example, row 1, column\
        \ 1 refers to the empty space with no tile on it in the top-left corner.)\
        \ Facing is \n0\n for right (\n>\n), \n1\n for down (\nv\n), \n2\n for left\
        \ (\n<\n), and \n3\n for up (\n^\n). The \nfinal password\n is the sum of\
        \ 1000 times the row, 4 times the column, and the facing.\n\n\nIn the above\
        \ example, the final row is \n6\n, the final column is \n8\n, and the final\
        \ facing is \n0\n. So, the final password is 1000 * 6 + 4 * 8 + 0: \n6032\n\
        .\n\n\nFollow the path given in the monkeys' notes. \nWhat is the final password?"
      part2: ''
    title: '--- Day 22: Monkey Map ---'
  23:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: '......#.##.###.###..##...#.###..###....##....#.#.#.#...#.#..#####.#..#.#..

      #######.##...##.##..#..##.#....#.###.##...#...##......######...#...###..#.

      ...#.#.##.#.##.#.#..#..#.#.##.######...###.....#.#.##..##..##.#..####..###

      .##.#.##.#.#.#..#.##.###..........###..#.##.....#..#####.#....#.##...#..##

      #.#...###...#.##.....#####.#.#.###..##.#...#..#.#.###.##......#.###.#####.

      ....##....#####..##.#....#.##.#.##....##.####..#.##...#..##..#.##....#.##.

      .......##.#..#..##...####.##.#..###.....##.##...#.....###.###...#....#....

      .####.##.##..#...##.##...###..####..####....#####.###.####....###.###.#...

      ####..##.#..##.###...####..#####....#.####.............##.###.......#....#

      ..........#...##....#.#####..#....##.###...####...##..###.##.#.##......###

      .........#.#.##.##..#.#.####.#.##.#.##..#...##..##...#.#####...##.#..#..#.

      ##..#...#..#.###.###..#....##.#......###...#.#...#.#.##...#####..##.###...

      .##.##......#.####..#..#...#.#..##..##..#..##..###.#.##.....#..##.###.#.#.

      .############...#.#.##..##...........#.######.#..####.####...###..#.#.#.#.

      #...##..##.....###.#...##..##..##.....#...#..###..###..####.#.#..#.##..###

      #...##.#.#..##.###.#.....####.#.#...#....#####.##...#.#.###....#.#.#.#..##

      ##.###..####.....#####..###.##..###..#####.#.#####.#.#...#.#...###.###.###

      ####...#.####..#.#.##..#..#..##..##.#.........#.#..##.####.###......#...##

      #....##.####.##.#.#.#.##.##..##.##.#.#.#......#.####.##..#..##..#..##..#..

      ..##...##.#.###.##..##.#..##.......#.####.#...#...#.#...###...#..####..###

      ##.#..####..#.#.##.##..#.##..##.......####...######.######...#....#.......

      ##....##.####..###.....####..###.#..#.######.##..###.#..##...#.###..#.###.

      .####.#.###########..###........#.#.##.##.###...#.##.#..###.#.#.....#####.

      ##.#.###..##....###...##.##....##.#.#..#.###.##..#.#...###...####.##..###.

      .#.#.#.###.#.###.....#..#.#######.......#.#.#.#######..####.#..###.#...#.#

      #..##..##.#.#.#.##....#.#.###.#..##.##..##.####.#.#.#.........##.#.#....##

      ###..#.#...#...##.###...#..#.#.#.#.###..#.###...#.#.###.######.##.##....##

      #.#....#.###.#.##..#...#..###.####..#.##..#.#.#.##...###...#.##..#.#.#####

      .....#.#.....#.###.#.##.#...#....##.#.#.#..#.#####.##..#.#..##.#.#####..##

      ...#......#.###.###...####..####...##...####.###.##...#...#######..#..##..

      ##.....#...####.#.#...#...#..##..#...#####.##.#..#....##.###.##....#.#.###

      #.####.#..##.#####.##..###.#..........###..#...#.#..##.#..####.....#......

      ....#.###.....#...#.#.##.##...####..##.#.##.#...###.#####.#..#.##.#.....##

      #.###.#....#..#.###..#..##..######.##.#.#.###.#.#.##..##...#.##..#..##...#

      ###..####.##...#..#.##...#...#...###.###..###.#...#..##.#.#.###..##.#..##.

      #.##.###..#....#....#..#.##.......###.###.#.###.##......#####..#...###.###

      #.#.#..#..#.#######.##..#....##....#.###.##...##...#..#.####.#.##..#....#.

      ##..##.###.#..#.#..#.#.#.#..#.##.###.#.##..##...###########..###.#.#..###.

      ..#..##..##########...#########.#.#.#......###......#.....#....##..######.

      .#.#...#..#..#....#.#.#...##..##.##.#....##....#..#...##..#.##...#...##.#.

      ##..#.#.#.####...##.####..###....#.#.##.#.#...#.##.#...######.##..#####.#.

      #.#..###...#..##..###.#.#.#..#..#.#.#...#.##.#....#...##.###.##.#..##.#..#

      #...#..##..#...#......####....#.#.##..#.##.###..##.##.#..#.#####.##.#.####

      .####....##.#..####..##.#..#.#.######.####..##.......###...#####.....#....

      ..#..##.#.#..#####...##.#....####...##.#.#.###.#.##.#..#.###..###.##..##..

      ###..###.##.#.......##...##..#..#.#..#.#.##..#.####.#.##..#.##.###.##..###

      #.....######.#...##...#.#.#####..#.######.....#..#..###..#.###....###..###

      #...##....###..#.#.##..#.###.##..####.#..#...#.#....##.#.####...#####.#.#.

      #.#.#...##.#######....#..###..####.#.#####....###.##.#...#.#####.#...###.#

      ####.#......#..#.#.##.####....#.#.##.#...#...##..#........###.###.##.#...#

      #####..##..##.#####....#.#.#..#.##......##.##...#.#...#.####.#.##.#####.##

      .#.#.####..##...#...#..##..#.#..###...#...#######..##.#####..#..#..#....##

      ###.....###..##.#..#####.#..#...###.##.##.###..#....#.....##.#.#.###...###

      ..#...######..##.#.#.#.########.###....#...#.##...#..##.#.##..###...#.###.

      ##..#....##..########.###..#..#.##..#######.#.#..#.#.##..##.#...##....#..#

      #.##..#....###...#.##..#.#.#..#.....#...####....####..##..#..#..#..#.##.#.

      ##...#...#.#..#...#..####.#...##..#..###.##.....#.##.##..#.##.##.#..#.####

      ####....####.##...#.##..#...##...#.##.####.....###.#.#.###...#.##.##.##.##

      #...#.#....#.#.#####.##.#.##.#...#.##.#...#...#.##..##...#...#..#...#..##.

      #..####.#..#...##.#.####..###...##.###.#######...#.....#..#.#####..##..##.

      ##.#...##..###########.....##.##..#...#.####....#.#....####.##.#.###.#.##.

      #...#..#.#####.#....#.##..###...#..#...#######.#...##..#..#.###..#.##.#..#

      ###.##...#.####....##.########......#...#...####.#..####.##.##..##..##....

      ##..###..#####...###..#.#...#..###....###.#..###....#.......#.###.#.#.#.##

      ........#.#....#..#.#...#...#####.####.....###...##.#.#...#.#..###...##..#

      #.....###.####....###.#.##.##.#.##..#.#...##..##.....#.#..#.###.##.#......

      ..#...##.#..###.###..#..##...#.#..#.#####.##..##..#..#.....#####.######..#

      ...#...##.#.#......###.####..#.##...#..#....##.#.####..#.#..#...#.##.#..#.

      .#.....##.#..####.###.#.#...#..#...#.##.#.#.#.####.##...#..###..####.#####

      ..##..##.#.##......#.#.####.#####.#.##..###.##........#....#..#.#..##.##..

      ..##..##...#..###...#..#.#...#.....###...##..###.###..##.#.#....#..#..##..

      ##.#..#.#.###....###..##...###.##.#..#####..##..##..#.......##..#.###..#..

      #..#.###.###.##.###.###....#..#..##.##.#.#.##.#.#....##.#..#.#.###.##.###.

      .##.#..#.###....##.####.##........#..####..#..#.....#.##..#.#..#..###.#..#'
    parts:
      part1: "--- Day 23: Unstable Diffusion ---\nYou enter a large crater of gray\
        \ dirt where the grove is supposed to be. All around you, plants you imagine\
        \ were expected to be full of fruit are instead withered and broken. A large\
        \ group of Elves has formed in the middle of the grove.\n\n\n\"...but this\
        \ volcano has been dormant for months. Without ash, the fruit can't grow!\"\
        \n\n\nYou look up to see a massive, snow-capped mountain towering above you.\n\
        \n\n\"It's not like there are other active volcanoes here; we've looked everywhere.\"\
        \n\n\n\"But our scanners show active magma flows; clearly it's going \nsomewhere\n\
        .\"\n\n\nThey finally notice you at the edge of the grove, your pack almost\
        \ overflowing from the random \nstar\n fruit you've been collecting. Behind\
        \ you, elephants and monkeys explore the grove, looking concerned. Then, the\
        \ Elves recognize the ash cloud slowly spreading above your recent detour.\n\
        \n\n\"Why do you--\" \"How is--\" \"Did you just--\"\n\n\nBefore any of them\
        \ can form a complete question, another Elf speaks up: \"Okay, new plan. We\
        \ have almost enough fruit already, and ash from the plume should spread here\
        \ eventually. If we quickly plant new seedlings now, we can still make it\
        \ to the extraction point. Spread out!\"\n\n\nThe Elves each reach into their\
        \ pack and pull out a tiny plant. The plants rely on important nutrients from\
        \ the ash, so they can't be planted too close together.\n\n\nThere isn't enough\
        \ time to let the Elves figure out where to plant the seedlings themselves;\
        \ you quickly scan the grove (your puzzle input) and note their positions.\n\
        \n\nFor example:\n\n\n....#..\n..###.#\n#...#.#\n.#...##\n#.###..\n##.#.##\n\
        .#..#..\n\n\n\nThe scan shows Elves \n#\n and empty ground \n.\n; outside\
        \ your scan, more empty ground extends a long way in every direction. The\
        \ scan is oriented so that \nnorth is up\n; orthogonal directions are written\
        \ N (north), S (south), W (west), and E (east), while diagonal directions\
        \ are written NE, NW, SE, SW.\n\n\nThe Elves follow a time-consuming process\
        \ to figure out where they should each go; you can speed up this process considerably.\
        \ The process consists of some number of \nrounds\n during which Elves alternate\
        \ between considering where to move and actually moving.\n\n\nDuring the \n\
        first half\n of each round, each Elf considers the eight positions adjacent\
        \ to themself. If no other Elves are in one of those eight positions, the\
        \ Elf \ndoes not do anything\n during this round. Otherwise, the Elf looks\
        \ in each of four directions in the following order and \nproposes\n moving\
        \ one step in the \nfirst valid direction\n:\n\n\n\n\nIf there is no Elf in\
        \ the N, NE, or NW adjacent positions, the Elf proposes moving \nnorth\n one\
        \ step.\n\n\nIf there is no Elf in the S, SE, or SW adjacent positions, the\
        \ Elf proposes moving \nsouth\n one step.\n\n\nIf there is no Elf in the W,\
        \ NW, or SW adjacent positions, the Elf proposes moving \nwest\n one step.\n\
        \n\nIf there is no Elf in the E, NE, or SE adjacent positions, the Elf proposes\
        \ moving \neast\n one step.\n\n\n\n\nAfter each Elf has had a chance to propose\
        \ a move, the \nsecond half\n of the round can begin. Simultaneously, each\
        \ Elf moves to their proposed destination tile if they were the \nonly\n Elf\
        \ to propose moving to that position. If two or more Elves propose moving\
        \ to the same position, \nnone\n of those Elves move.\n\n\nFinally, at the\
        \ end of the round, the \nfirst direction\n the Elves considered is moved\
        \ to the end of the list of directions. For example, during the second round,\
        \ the Elves would try proposing a move to the south first, then west, then\
        \ east, then north. On the third round, the Elves would first consider west,\
        \ then east, then north, then south.\n\n\nAs a smaller example, consider just\
        \ these five Elves:\n\n\n.....\n..##.\n..#..\n.....\n..##.\n.....\n\n\n\n\
        The northernmost two Elves and southernmost two Elves all propose moving north,\
        \ while the middle Elf cannot move north and proposes moving south. The middle\
        \ Elf proposes the same destination as the southwest Elf, so neither of them\
        \ move, but the other three do:\n\n\n..##.\n.....\n..#..\n...#.\n..#..\n.....\n\
        \n\n\nNext, the northernmost two Elves and the southernmost Elf all propose\
        \ moving south. Of the remaining middle two Elves, the west one cannot move\
        \ south and proposes moving west, while the east one cannot move south \n\
        or\n west and proposes moving east. All five Elves succeed in moving to their\
        \ proposed positions:\n\n\n.....\n..##.\n.#...\n....#\n.....\n..#..\n\n\n\n\
        Finally, the southernmost two Elves choose not to move at all. Of the remaining\
        \ three Elves, the west one proposes moving west, the east one proposes moving\
        \ east, and the middle one proposes moving north; all three succeed in moving:\n\
        \n\n..#..\n....#\n#....\n....#\n.....\n..#..\n\n\n\nAt this point, no Elves\
        \ need to move, and so the process ends.\n\n\nThe larger example above proceeds\
        \ as follows:\n\n\n== Initial State ==\n..............\n..............\n.......#......\n\
        .....###.#....\n...#...#.#....\n....#...##....\n...#.###......\n...##.#.##....\n\
        ....#..#......\n..............\n..............\n..............\n\n== End of\
        \ Round 1 ==\n..............\n.......#......\n.....#...#....\n...#..#.#.....\n\
        .......#..#...\n....#.#.##....\n..#..#.#......\n..#.#.#.##....\n..............\n\
        ....#..#......\n..............\n..............\n\n== End of Round 2 ==\n..............\n\
        .......#......\n....#.....#...\n...#..#.#.....\n.......#...#..\n...#..#.#.....\n\
        .#...#.#.#....\n..............\n..#.#.#.##....\n....#..#......\n..............\n\
        ..............\n\n== End of Round 3 ==\n..............\n.......#......\n.....#....#...\n\
        ..#..#...#....\n.......#...#..\n...#..#.#.....\n.#..#.....#...\n.......##.....\n\
        ..##.#....#...\n...#..........\n.......#......\n..............\n\n== End of\
        \ Round 4 ==\n..............\n.......#......\n......#....#..\n..#...##......\n\
        ...#.....#.#..\n.........#....\n.#...###..#...\n..#......#....\n....##....#...\n\
        ....#.........\n.......#......\n..............\n\n== End of Round 5 ==\n.......#......\n\
        ..............\n..#..#.....#..\n.........#....\n......##...#..\n.#.#.####.....\n\
        ...........#..\n....##..#.....\n..#...........\n..........#...\n....#..#......\n\
        ..............\n\n\n\nAfter a few more rounds...\n\n\n== End of Round 10 ==\n\
        .......#......\n...........#..\n..#.#..#......\n......#.......\n...#.....#..#.\n\
        .#......##....\n.....##.......\n..#........#..\n....#.#..#....\n..............\n\
        ....#..#..#...\n..............\n\n\n\nTo make sure they're on the right track,\
        \ the Elves like to check after round 10 that they're making good progress\
        \ toward covering enough ground. To do this, count the number of empty ground\
        \ tiles contained by the smallest rectangle that contains every Elf. (The\
        \ edges of the rectangle should be aligned to the N/S/E/W directions; the\
        \ Elves do not have the patience to calculate \narbitrary rectangles\n.) In\
        \ the above example, that rectangle is:\n\n\n......#.....\n..........#.\n\
        .#.#..#.....\n.....#......\n..#.....#..#\n#......##...\n....##......\n.#........#.\n\
        ...#.#..#...\n............\n...#..#..#..\n\n\n\nIn this region, the number\
        \ of empty ground tiles is \n110\n.\n\n\nSimulate the Elves' process and find\
        \ the smallest rectangle that contains the Elves after 10 rounds. \nHow many\
        \ empty ground tiles does that rectangle contain?"
      part2: ''
    title: '--- Day 23: Unstable Diffusion ---'
  24:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: '#.########################################################################################################################

      #.<^>v^v>v>^.><v.>><.>><v^v^v<<>.v^<v^.<>v<^v..>.><v<^v>v<>v.vv^v>^vvvv>>><><.v<<v>><<<.^^><v^vvv^v^>.^<^>v<>vv>v.>^^^<^<#

      #>^^vv.>^v^>.v^^<^v<>.v><>v><v..v>><>>v^vv<....^>^v^v<<<<.><><v^v<v^<.vv.<v^.<v.^><<vv^v.v.^v<>^>.<><.v^v><.v<<.>>v<v>^^<#

      #><>^<^^^^<^^>>^^^^v<v<>>^^.v<>v<v.><v><v^<^>><^>v^^.<<v>v<^>>.^vv<^.^vv>v>>vvv<>v<>.>>><<^<>..v<v<>><><>^^<<.vv>>><><>.<#

      #>v^v^<>v^^>^>><<^<<.v><v.v<v><^<^<v^>^<^>^<<<.^^v<>vv>v<.vvv<>^..^.^<>^v><.v^.>v>v<vv^><.<>vvv.^<v<>^>>^<<vv<<^<.^<><>^<#

      #>^^>v>>v.>><>vvvv><vv><><>v^^vvv.<^v>^<^>^^>><<v.v><.><<^^.v><>^v^^vv^^vv^<^<^<>v<vvvv<^<.>v<.vv.^>v^<vv^^.<vv><vv.^^><>#

      #<.v<<v>v^<vv><^<^v>.<^>^v.<^<.>v^<v^v>v><v<v<><>>^^><.>..>v<>.><v^><>><^^>^^^>v^v^.^<^<^vv>v<.v.<<vv>>^v.>vv<.>><^^><vv<#

      #>v^v><>v<^.>>.v^>.>v<>^>v<<>>vv<^^<>^>^v.<>>^v><^v<<<<^v<..^>v>v><<^vv<>^>.v<>>v.^<.<<>>><<vv^<.^>v.vv<<v^v><><<>^.^^>^<#

      #<vv.^<v<v>^^<^.<<.^>>v^v^>^.<>>^>v.<vv<>^>v.v>>><>>.v>>vv^v>v<>><^<<<<^vv.v<>^.^<>v.v>><<..<^v>.^>vv<v<<vv>.v>^<<>><>>v<#

      #<^>>v^<^.><vv^v><vv.<^<><^<v^vv<<.<^<v>^>.^<^.<>^.>>>v.v^.vv><<v<^<^^<^^v<^v^<..v^><<vv<>^<<^><>><.^v>>>v.<<^^><>^^^><<>#

      #><^>v.^<v^>^<^<<v^<^<v><vv>v^>^><<^^<v^>vvvv><>.^^v>v.>>v>v^.>v^v>v^>.<v><^^^>vv^.>>>^<^>>v<><^vv^<><vv^>^>vv.><^<vv^<<<#

      #>><^>^<^v<>>.v>^^^>>^<<^>v<<^<<>>.v^<v.<^<vv><v<>>v^vv>.v>^.^v.><<^<^<<v<v.v.^><.v<<^>>><^.v^<<^<<^>>^>v>v.v^^>^><vv<vv<#

      #<vv>^v<<<>>.vvv><v^<<>v^^v.v>vv><^v<<<v<>^v<v<vv^^<>v<v^<<..^><<^^v>>>vv.^>^<>v>vv><<..<v^v<v.>v>v.>>>v>>v.v<<v.v>.>v.v>#

      #<<.^^<.<^><><vv<>>v<.<<^v^^v^<<>v.<vv^>.<.^vvvv.<>^^^v<v>v^<^^^<>vv>>.v>>^v<^^v>..<^<>^v^^<>v<>>v^.<..<^<<>^v^<.<^vv.<v<#

      #>^.><<.^>>>>>^.vv>^.<.<.^v>.<v<<><<vv.^v<v>><^^^^.<^^v<<v><>.^<>v.>^<^<<<>v<<<.>v^^.^^>.v><><<^.><>^<<>^<^<^<v^>v^>.^^v<#

      #<v><>.v>^.vv><^>^^>>^^^>.^^>vv^><^><>><^<<<><>^.v>>v^><^>.^^v<>>^<>>v.v.<><v.v^<^>.^>>.>><.v>.<>>v.v^>^<^>>.^><<>v<<^>>>#

      #>^.^v>^>>.^>v^.>>>v<vv^^vv<<<^.<<<>>.v>v>>v>.^<>vv^.><^.v>v^v><>v>v>vv<.^.v.>v^vvv^<><v^<<<v^v.^>v>.v>>^v<<v.>>>..v.v>^<#

      #>v><v.<^<<^<<<<<<^<<.<v^v.<>v<>>>^<v^...^>^v^v.>>^vv<..<v<v^^.vv>.v<<>>v<<<^>^^.vvvv><v^v<<.^v<><>>^^^^v^^^^<<<v<<v>>>v>#

      #><<<.^v>...^<>^.^^><v^vv^^<^>v>>.<<v^^<>><vvv>>^v^^v^^v<><<^v.^><<v.vv.<.>>vv>^vv.^<<<<>v^v^.^v<<<^^^v^>v^<<vv<>^<<^v>><#

      #<^v.^v<.v<<v^v<<v<<>>.><vv>^^<^>vv.vv<v>.^v^<<>><><<.v^><><.>>vv>v>^^.>.v<<^>>v>vvv.^<v^v^v><^<<.<<<<v>><<^>>><v><>>v^>>#

      #><<v><^^^>^.<^v^^^><.^^<v<<><><v<v^v^<.^^^vvv^<^^>>v<^>^>.v^<^>^>^>^v.^>>^v<>^v>^<<<.>.v<v^^v><v^><<.>v^><>v^>v>>>>^v^.>#

      #>><v^>vv^v<v><<.^><^>.<<>vvv>>v^^^><^>.><^v^^v>v^>vv>^<><v>^v<v<<<.>><.<v<<>><^>^<.v>>^><^v^<vvv<.vv><^v^v>.^<.>v^^<v>^<#

      #>v>>v>^^<<>><<>^.v.>>^^<^<<>^v<^.<^^.<.vv^<<<<<..>.v<.<^<>v<><>.>v..>>><^>^<><^^><v><<vv<<><^vv^><>^><^^<^v><vv.<.vv>>v>#

      #<><>v>.>>.>.>^>^<^v>.<vv><<^.vv.v.><<^>v>^<>v^v>><.v<<>>vv^v^<v>^>^>^<<v^<>^.v^><<<>.^.v^v.<<>vv>.vv>><^...<v<v>>v>>v<.>#

      #<.>>.<><^<>^>.^>>>v<><v<<.^^v.>^.^>>vvv<<<^><<.v^.v>^<<>vvv^v^vvv^v.^^^..<^v<v><<vv.<.<<^.^^^^>>>v^v<.>^^<>>^><>><>>v^v.#

      #><<>>vvvv><.<.>>^>^.^<^<.v>v>^^<<<><^^>>><^><^^^>>vv<>v<>^v^v^>>.^>v^<<<v<^<^^^^<>>.v><<>v^vvv^>v^.>^.^v<<>^v<^>>><>vv.<#

      ########################################################################################################################.#'
    parts:
      part1: "--- Day 24: Blizzard Basin ---\nWith everything replanted for next year\
        \ (and with elephants and monkeys to tend the grove), you and the Elves leave\
        \ for the extraction point.\n\n\nPartway up the mountain that shields the\
        \ grove is a flat, open area that serves as the extraction point. It's a bit\
        \ of a climb, but nothing the expedition can't handle.\n\n\nAt least, that\
        \ would normally be true; now that the mountain is covered in snow, things\
        \ have become more difficult than the Elves are used to.\n\n\nAs the expedition\
        \ reaches a valley that must be traversed to reach the extraction site, you\
        \ find that strong, turbulent winds are pushing small \nblizzards\n of snow\
        \ and sharp ice around the valley. It's a good thing everyone packed warm\
        \ clothes! To make it across safely, you'll need to find a way to avoid them.\n\
        \n\nFortunately, it's easy to see all of this from the entrance to the valley,\
        \ so you make a map of the valley and the blizzards (your puzzle input). For\
        \ example:\n\n\n#.#####\n#.....#\n#>....#\n#.....#\n#...v.#\n#.....#\n#####.#\n\
        \n\n\nThe walls of the valley are drawn as \n#\n; everything else is ground.\
        \ Clear ground - where there is currently no blizzard - is drawn as \n.\n\
        . Otherwise, blizzards are drawn with an arrow indicating their direction\
        \ of motion: up (\n^\n), down (\nv\n), left (\n<\n), or right (\n>\n).\n\n\
        \nThe above map includes two blizzards, one moving right (\n>\n) and one moving\
        \ down (\nv\n). In one minute, each blizzard moves one position in the direction\
        \ it is pointing:\n\n\n#.#####\n#.....#\n#.>...#\n#.....#\n#.....#\n#...v.#\n\
        #####.#\n\n\n\nDue to \nconservation of blizzard energy\n, as a blizzard reaches\
        \ the wall of the valley, a new blizzard forms on the opposite side of the\
        \ valley moving in the same direction. After another minute, the bottom downward-moving\
        \ blizzard has been replaced with a new downward-moving blizzard at the top\
        \ of the valley instead:\n\n\n#.#####\n#...v.#\n#..>..#\n#.....#\n#.....#\n\
        #.....#\n#####.#\n\n\n\nBecause blizzards are made of tiny snowflakes, they\
        \ pass right through each other. After another minute, both blizzards temporarily\
        \ occupy the same position, marked \n2\n:\n\n\n#.#####\n#.....#\n#...2.#\n\
        #.....#\n#.....#\n#.....#\n#####.#\n\n\n\nAfter another minute, the situation\
        \ resolves itself, giving each blizzard back its personal space:\n\n\n#.#####\n\
        #.....#\n#....>#\n#...v.#\n#.....#\n#.....#\n#####.#\n\n\n\nFinally, after\
        \ yet another minute, the rightward-facing blizzard on the right is replaced\
        \ with a new one on the left facing the same direction:\n\n\n#.#####\n#.....#\n\
        #>....#\n#.....#\n#...v.#\n#.....#\n#####.#\n\n\n\nThis process repeats at\
        \ least as long as you are observing it, but probably forever.\n\n\nHere is\
        \ a more complex example:\n\n\n#.######\n#>>.<^<#\n#.<..<<#\n#>v.><>#\n#<^v^^>#\n\
        ######.#\n\n\n\nYour expedition begins in the only non-wall position in the\
        \ top row and needs to reach the only non-wall position in the bottom row.\
        \ On each minute, you can \nmove\n up, down, left, or right, or you can \n\
        wait\n in place. You and the blizzards act \nsimultaneously\n, and you cannot\
        \ share a position with a blizzard.\n\n\nIn the above example, the fastest\
        \ way to reach your goal requires \n18\n steps. Drawing the position of the\
        \ expedition as \nE\n, one way to achieve this is:\n\n\nInitial state:\n#\n\
        E\n######\n#>>.<^<#\n#.<..<<#\n#>v.><>#\n#<^v^^>#\n######.#\n\nMinute 1, move\
        \ down:\n#.######\n#\nE\n>3.<.#\n#<..<<.#\n#>2.22.#\n#>v..^<#\n######.#\n\n\
        Minute 2, move down:\n#.######\n#.2>2..#\n#\nE\n^22^<#\n#.>2.^>#\n#.>..<.#\n\
        ######.#\n\nMinute 3, wait:\n#.######\n#<^<22.#\n#\nE\n2<.2.#\n#><2>..#\n\
        #..><..#\n######.#\n\nMinute 4, move up:\n#.######\n#\nE\n<..22#\n#<<.<..#\n\
        #<2.>>.#\n#.^22^.#\n######.#\n\nMinute 5, move right:\n#.######\n#2\nE\nv.<>#\n\
        #<.<..<#\n#.^>^22#\n#.2..2.#\n######.#\n\nMinute 6, move right:\n#.######\n\
        #>2\nE\n<.<#\n#.2v^2<#\n#>..>2>#\n#<....>#\n######.#\n\nMinute 7, move down:\n\
        #.######\n#.22^2.#\n#<v\nE\n<2.#\n#>>v<>.#\n#>....<#\n######.#\n\nMinute 8,\
        \ move left:\n#.######\n#.<>2^.#\n#.\nE\n<<.<#\n#.22..>#\n#.2v^2.#\n######.#\n\
        \nMinute 9, move up:\n#.######\n#<\nE\n2>>.#\n#.<<.<.#\n#>2>2^.#\n#.v><^.#\n\
        ######.#\n\nMinute 10, move right:\n#.######\n#.2\nE\n.>2#\n#<2v2^.#\n#<>.>2.#\n\
        #..<>..#\n######.#\n\nMinute 11, wait:\n#.######\n#2^\nE\n^2>#\n#<v<.^<#\n\
        #..2.>2#\n#.<..>.#\n######.#\n\nMinute 12, move down:\n#.######\n#>>.<^<#\n\
        #.<\nE\n.<<#\n#>v.><>#\n#<^v^^>#\n######.#\n\nMinute 13, move down:\n#.######\n\
        #.>3.<.#\n#<..<<.#\n#>2\nE\n22.#\n#>v..^<#\n######.#\n\nMinute 14, move right:\n\
        #.######\n#.2>2..#\n#.^22^<#\n#.>2\nE\n^>#\n#.>..<.#\n######.#\n\nMinute 15,\
        \ move right:\n#.######\n#<^<22.#\n#.2<.2.#\n#><2>\nE\n.#\n#..><..#\n######.#\n\
        \nMinute 16, move right:\n#.######\n#.<..22#\n#<<.<..#\n#<2.>>\nE\n#\n#.^22^.#\n\
        ######.#\n\nMinute 17, move down:\n#.######\n#2.v.<>#\n#<.<..<#\n#.^>^22#\n\
        #.2..2\nE\n#\n######.#\n\nMinute 18, move down:\n#.######\n#>2.<.<#\n#.2v^2<#\n\
        #>..>2>#\n#<....>#\n######\nE\n#\n\n\n\nWhat is the fewest number of minutes\
        \ required to avoid the blizzards and reach the goal?"
      part2: ''
    title: '--- Day 24: Blizzard Basin ---'
  25:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: '21-0==1=-0

      102211-220011-----

      1=2=111=10=-

      12-2=022=2

      1=--=11

      12-2211000=0011-0-

      1=1-

      2=0-10-=21-2

      1210-

      2=1-=

      1=0=12=2112--11=

      2--211=200

      20-02-20

      12=12=0=0=1

      22===21=-0102-012=

      1--=-121

      1=02=2-=

      12-0-20

      2=---=0102--00=22

      1=2==0=2=

      11-1112

      2--012

      12=12=--212-0-==-02

      1=220

      20===1

      2210-02=12-022-=1-

      22--1-==1

      211-1=1=0-==1

      10

      1-1-02

      1=-2==-0=21

      1=102

      20121021

      1=2=22=001200-==1020

      10211-1-20--10-1=

      1222==1--=1--11-=

      11211211

      1=101-20=

      1=1-11=0=000

      1=-=101

      2

      1000-2

      1==0=210=1=21222-=2

      1=1==2-

      2--020=2=2===-

      2-

      2=0

      222101=22=-21=11

      2=

      121201-0-20-2-=11=

      10=

      1212=20=2=-=-1--1

      2-20-=212=01

      1=1--00--0=12=-00

      22--

      22

      22===1=-0-22-

      111-=

      2-111=0021=2

      200=22-=12-2=

      1==-=1=0

      1--=02-0002=

      1=-=2-2=2-

      2=2222220=2==001

      1=00==11=-20-=2-2

      1---0=-=

      1-0==10-=22001

      1=02=02-1=0111

      1-=010-21-=21==02

      10200-2=-=20120-2

      1=-

      10=122-

      210-1=-=2011-0--1

      2==-1=20

      1=-=101-20=221-1

      210

      1-=-==-0-=02=---

      1-=1=-=12=0

      1-=0---12-0=

      210-==1021=010=1

      1=-212

      11=1=-=2211=101222-

      2=-==--=2

      1=11-200--=

      1120-

      11=-0=221=0101=

      11-1=-

      1-12-2=0

      1012-22=1-

      20-122=-1=

      1-100=0=101-0

      20-1=1=0

      1102=

      21

      10=20=11

      1-=2001

      1-20=12-0221102-==

      1-1--010100=-1=

      221002==2102-2=1

      2012=121-22

      110222002=01

      212102-1=1=-211

      210-=12

      1=-1-0101=1-12

      12--21=1

      10=-12

      100-122211=--2=

      101102001

      11011=-

      211-0=-=0

      1-2=01-1=

      1-022-=00000

      2==-0==2=--00=

      10=--2000==

      1---=--1-110-02

      11-012

      2==-2210-0

      212

      22-=-12111

      2--=

      2=2=12-100

      10-12===0-

      1==0=0=22012201

      211-1--22'
    parts:
      part1: "--- Day 25: Full of Hot Air ---\nAs the expedition finally reaches the\
        \ extraction point, several large \nhot air balloons\n drift down to meet\
        \ you. Crews quickly start unloading the equipment the balloons brought: many\
        \ hot air balloon kits, some fuel tanks, and a \nfuel heating machine\n.\n\
        \n\nThe fuel heating machine is a new addition to the process. When this mountain\
        \ was a volcano, the ambient temperature was more reasonable; now, it's so\
        \ cold that the fuel won't work at all without being warmed up first.\n\n\n\
        The Elves, seemingly in an attempt to make the new machine feel welcome, have\
        \ already attached a pair of \ngoogly eyes\n and started calling it \"Bob\"\
        .\n\n\nTo heat the fuel, Bob needs to know the total amount of fuel that will\
        \ be processed ahead of time so it can correctly calibrate heat output and\
        \ flow rate. This amount is simply the \nsum\n of the fuel requirements of\
        \ all of the hot air balloons, and those fuel requirements are even listed\
        \ clearly on the side of each hot air balloon's burner.\n\n\nYou assume the\
        \ Elves will have no trouble adding up some numbers and are about to go back\
        \ to figuring out which balloon is yours when you get a tap on the shoulder.\
        \ Apparently, the fuel requirements use numbers written in a format the Elves\
        \ don't recognize; predictably, they'd like your help deciphering them.\n\n\
        \nYou make a list of all of the fuel requirements (your puzzle input), but\
        \ you don't recognize the number format either. For example:\n\n\n1=-0-2\n\
        12111\n2=0=\n21\n2=01\n111\n20012\n112\n1=-1=\n1-12\n12\n1=\n122\n\n\n\nFortunately,\
        \ Bob is labeled with a support phone number. Not to be deterred, you call\
        \ and ask for help.\n\n\n\"That's right, just supply the fuel amount to the--\
        \ oh, for more than one burner? No problem, you just need to add together\
        \ our Special Numeral-Analogue Fuel Units. Patent pending! They're way better\
        \ than normal numbers for--\"\n\n\nYou mention that it's quite cold up here\
        \ and ask if they can skip ahead.\n\n\n\"Okay, our Special Numeral-Analogue\
        \ Fuel Units - SNAFU for short - are sort of like normal numbers. You know\
        \ how starting on the right, normal numbers have a ones place, a tens place,\
        \ a hundreds place, and so on, where the digit in each place tells you how\
        \ many of that value you have?\"\n\n\n\"SNAFU works the same way, except it\
        \ uses powers of five instead of ten. Starting from the right, you have a\
        \ ones place, a fives place, a twenty-fives place, a one-hundred-and-twenty-fives\
        \ place, and so on. It's that easy!\"\n\n\nYou ask why some of the digits\
        \ look like \n-\n or \n=\n instead of \"digits\".\n\n\n\"You know, I never\
        \ did ask the engineers why they did that. Instead of using digits four through\
        \ zero, the digits are \n2\n, \n1\n, \n0\n, \nminus\n (written \n-\n), and\
        \ \ndouble-minus\n (written \n=\n). Minus is worth -1, and double-minus is\
        \ worth -2.\"\n\n\n\"So, because ten (in normal numbers) is two fives and\
        \ no ones, in SNAFU it is written \n20\n. Since eight (in normal numbers)\
        \ is two fives minus two ones, it is written \n2=\n.\"\n\n\n\"You can do it\
        \ the other direction, too. Say you have the SNAFU number \n2=-01\n. That's\
        \ \n2\n in the 625s place, \n=\n (double-minus) in the 125s place, \n-\n (minus)\
        \ in the 25s place, \n0\n in the 5s place, and \n1\n in the 1s place. (2 times\
        \ 625) plus (-2 times 125) plus (-1 times 25) plus (0 times 5) plus (1 times\
        \ 1). That's 1250 plus -250 plus -25 plus 0 plus 1. \n976\n!\"\n\n\n\"I see\
        \ here that you're connected via our premium uplink service, so I'll transmit\
        \ our handy SNAFU brochure to you now. Did you need anything else?\"\n\n\n\
        You ask if the fuel will even work in these temperatures.\n\n\n\"Wait, it's\
        \ \nhow\n cold? There's no \nway\n the fuel - or \nany\n fuel - would work\
        \ in those conditions! There are only a few places in the-- where did you\
        \ say you are again?\"\n\n\nJust then, you notice one of the Elves pour a\
        \ few drops from a snowflake-shaped container into one of the fuel tanks,\
        \ thank the support representative for their time, and disconnect the call.\n\
        \n\nThe SNAFU brochure contains a few more examples of decimal (\"normal\"\
        ) numbers and their SNAFU counterparts:\n\n\n  Decimal          SNAFU\n  \
        \      1              1\n        2              2\n        3             1=\n\
        \        4             1-\n        5             10\n        6           \
        \  11\n        7             12\n        8             2=\n        9     \
        \        2-\n       10             20\n       15            1=0\n       20\
        \            1-0\n     2022         1=11-2\n    12345        1-0---0\n314159265\
        \  1121-1110-1=0\n\n\n\nBased on this process, the SNAFU numbers in the example\
        \ above can be converted to decimal numbers as follows:\n\n\n SNAFU  Decimal\n\
        1=-0-2     1747\n 12111      906\n  2=0=      198\n    21       11\n  2=01\
        \      201\n   111       31\n 20012     1257\n   112       32\n 1=-1=    \
        \  353\n  1-12      107\n    12        7\n    1=        3\n   122       37\n\
        \n\n\nIn decimal, the sum of these numbers is \n4890\n.\n\n\nAs you go to\
        \ input this number on Bob's console, you discover that some buttons you expected\
        \ are missing. Instead, you are met with buttons labeled \n=\n, \n-\n, \n\
        0\n, \n1\n, and \n2\n. Bob needs the input value expressed as a SNAFU number,\
        \ not in decimal.\n\n\nReversing the process, you can determine that for the\
        \ decimal number \n4890\n, the SNAFU number you need to supply to Bob's console\
        \ is \n2=-1=0\n.\n\n\nThe Elves are starting to get cold. \nWhat SNAFU number\
        \ do you supply to Bob's console?"
      part2: ''
    title: '--- Day 25: Full of Hot Air ---'
2024:
  1:
    answers:
      part1:
        correct: null
        wrong: []
      part2:
        correct: null
        wrong: []
    input: '97924   12015

      50267   32019

      98415   10716

      64856   63472

      73972   11396

      85009   60876

      16084   81584

      63342   45754

      36722   57910

      71800   33139

      13657   42097

      31646   60883

      13033   45362

      98175   50742

      12224   82309

      26745   36160

      91733   22906

      63235   23212

      34149   43474

      55819   92797

      89877   82309

      63876   68418

      35017   24286

      71693   56515

      67230   56504

      32107   70146

      29455   43966

      10294   80966

      11503   97276

      45021   44890

      65889   45042

      22646   50684

      29246   40041

      94894   64304

      97487   32858

      11658   25139

      86638   37390

      77389   69681

      20834   20641

      43948   97853

      25169   18624

      47469   14334

      77677   51466

      67863   10346

      66135   44506

      22510   90140

      39330   56504

      96958   57081

      65629   98292

      40599   32865

      41131   50742

      41361   91497

      44833   76741

      32056   53741

      15025   58921

      32170   52656

      95391   10777

      55371   78010

      48305   51466

      65862   89174

      40636   54184

      97450   99374

      77105   83865

      34812   41764

      23999   77192

      25503   93924

      66670   24286

      30994   12382

      76175   60974

      43005   50445

      53741   14287

      67639   60769

      68473   53741

      16078   76080

      51006   54184

      74520   49015

      17232   40707

      25445   89174

      39404   16084

      23041   85801

      54140   17286

      46419   20749

      49484   46855

      19164   86911

      39289   12150

      59326   22031

      47693   53741

      89369   86087

      78926   99284

      46255   78050

      53879   65533

      27064   21120

      21756   63733

      46201   58079

      83358   45402

      67814   39702

      36582   27906

      68742   32858

      63598   80368

      46069   15449

      43061   21120

      82842   43966

      47757   41841

      11761   26946

      55059   78870

      73640   28789

      87885   16294

      76819   42168

      99933   82831

      96701   43783

      33926   50742

      53211   50456

      63392   97067

      86076   89174

      22252   52322

      82469   52960

      15384   19277

      17446   62973

      60995   85599

      67563   99208

      81796   42097

      13959   65386

      67714   81831

      98828   55717

      66905   59486

      12690   99284

      24626   21468

      14738   49115

      58555   17335

      23470   27139

      38356   94975

      21420   34794

      85109   99284

      88215   16754

      13822   56504

      78720   97465

      17622   49756

      27946   39646

      42737   85951

      39857   51466

      98335   73635

      51079   27139

      75618   80096

      55716   22031

      44439   79910

      74943   85951

      15914   69859

      94892   51466

      89851   26946

      58970   40772

      89048   21927

      79217   43966

      22327   21545

      15513   56526

      52584   39743

      17822   37390

      50437   45539

      26861   99284

      39402   43966

      44176   98943

      93367   38719

      85462   35314

      70936   30406

      64975   53741

      69603   40772

      27447   43966

      48913   50742

      55729   17033

      55903   55600

      58608   73308

      13030   62519

      79586   53741

      85885   78724

      47696   26716

      89036   95563

      51691   35314

      74369   27139

      83246   50742

      34233   53741

      87921   48574

      12660   51466

      15408   54159

      82361   21120

      78963   99205

      87395   10043

      73712   24286

      97972   97487

      77207   34050

      26598   21574

      51812   47558

      34508   90761

      26436   40460

      71011   60574

      50890   51466

      50493   24854

      16217   47118

      44890   73772

      44429   26946

      99607   43966

      38107   99307

      10208   32858

      73098   45260

      26515   70155

      53750   55600

      74904   44506

      89898   43966

      71445   37467

      77746   82076

      20131   34528

      67840   12429

      36620   80900

      18892   95044

      73474   85951

      83450   24551

      45728   11046

      66927   40772

      35585   85951

      93945   83865

      76199   18892

      26536   16084

      58275   26910

      51874   42097

      88833   57054

      75871   85642

      67764   32556

      69526   26946

      19475   16084

      80585   90761

      34189   82309

      96205   55600

      11371   24399

      38079   51194

      99465   44890

      21120   99284

      15731   84749

      82309   28950

      33121   47050

      84859   31889

      93071   22719

      69403   40772

      47701   55127

      94758   12405

      71944   40772

      59059   27139

      23522   48009

      69897   20227

      96432   53857

      40161   56742

      99974   31605

      28726   40772

      43411   19960

      52521   51466

      10024   51312

      84954   35314

      33296   99284

      77780   49638

      89571   26843

      13582   87187

      27081   74290

      29330   26946

      35469   42097

      96455   60260

      44473   20645

      52280   90488

      36181   17193

      83515   89920

      77203   22203

      31113   70569

      93446   50742

      94776   14334

      65132   74481

      76822   22765

      76108   25212

      88359   81025

      58602   89174

      71874   21120

      78276   98125

      39092   22656

      62278   65305

      40915   21120

      55896   26933

      89049   11422

      73736   82035

      41226   93643

      91298   94509

      48613   68016

      48763   50742

      72203   25900

      83036   90823

      40070   22471

      34155   77007

      66614   75044

      99172   34719

      10261   48242

      75196   91994

      60212   32858

      82136   42097

      68902   40955

      61584   61094

      18196   97838

      12112   99284

      28990   51912

      21082   40991

      45932   51466

      71891   70388

      93524   71891

      36886   20645

      84927   11097

      90640   82280

      12240   22031

      50754   79877

      12243   56504

      21896   69022

      27361   50742

      92599   91087

      50881   17965

      19258   92324

      48109   51450

      39617   66508

      33422   59580

      24453   21120

      70071   76583

      61099   99284

      32270   81634

      18554   90140

      57108   40772

      72972   82180

      44178   35314

      58969   35314

      68638   32858

      59752   97487

      91349   85951

      42541   91799

      11241   85951

      56014   40772

      18240   82309

      83562   82349

      99794   20645

      49642   24286

      26318   35314

      20645   16436

      95467   32543

      85129   29179

      63111   28393

      21776   47366

      17413   13453

      39834   96167

      54442   65122

      25618   90140

      67027   50742

      91899   59045

      36861   84429

      41069   24405

      39818   26532

      41305   57846

      50844   54184

      35314   52839

      13646   66988

      21610   72792

      84316   67867

      37390   27139

      33072   38672

      50742   68302

      95333   44890

      67978   10314

      54472   77425

      65124   64037

      62367   57908

      88774   40958

      71725   85651

      27200   73263

      72832   16084

      93194   20645

      84331   87651

      83654   96024

      98518   44506

      26270   85951

      17471   54184

      40445   40716

      24801   98329

      71775   48960

      63886   62621

      11574   58455

      36092   85951

      70761   10112

      61291   26292

      97303   19625

      44506   86054

      91586   95307

      58301   40772

      81698   27139

      72921   26946

      50502   36406

      16298   86304

      75558   37706

      22495   99284

      33661   82309

      85183   85951

      57125   55600

      32610   99284

      61179   38278

      59372   93008

      74037   14334

      48967   43966

      57442   16159

      26047   21120

      23188   89174

      23633   16084

      15300   57527

      11726   50556

      59493   94320

      66596   32570

      78092   75310

      48254   42097

      23338   50742

      36327   78906

      14142   94284

      26946   68750

      51040   40772

      69209   40772

      15882   54414

      31997   14334

      12496   32775

      54801   60587

      92254   34864

      54184   56224

      50128   37390

      46755   37390

      68205   42097

      16526   31984

      33415   89174

      95561   99284

      58231   11999

      12000   27968

      13762   24130

      20783   29706

      49870   13617

      31028   85455

      73097   31238

      36095   22031

      15523   97714

      41560   34014

      30530   90052

      34128   97988

      91541   54184

      97402   68624

      14133   22098

      95923   88909

      21065   76908

      54343   27139

      17923   52386

      39271   97487

      54329   47300

      29173   12083

      73679   66145

      25043   79638

      23367   27139

      47733   73848

      50178   19841

      61856   75136

      12334   99284

      24075   99000

      66813   16084

      68591   37390

      60548   26946

      47476   51466

      65067   34238

      27139   43966

      90127   90140

      71661   53741

      76564   86323

      14606   74629

      33073   20645

      28929   99210

      20290   16026

      55600   31919

      44895   95367

      69018   51466

      19996   10788

      79035   39402

      59205   55228

      38746   94339

      86509   76500

      99613   75251

      21577   12189

      97880   60387

      91425   85951

      84219   85951

      82752   51466

      24031   14334

      21843   51466

      67480   16084

      89728   72818

      28954   99145

      88314   89174

      18726   32858

      87526   25968

      85951   85741

      64143   78312

      42517   49699

      13848   22031

      43260   35799

      53772   81476

      54544   99120

      38528   26946

      75966   82991

      66179   95509

      58180   45829

      53138   99284

      43795   67657

      75091   16278

      82097   47194

      58590   11318

      50521   83696

      27323   81208

      33112   99284

      27922   49371

      65787   90869

      40517   36120

      20919   48795

      30416   63304

      88719   50742

      79993   75970

      27124   51458

      35850   70479

      47642   30113

      56934   42097

      99900   51466

      21591   33043

      97673   89174

      29342   22031

      75687   90761

      45898   50821

      22897   63031

      23889   77846

      63662   48377

      65299   75957

      44563   99284

      60281   51466

      49181   35314

      50909   52749

      21600   11254

      44988   13205

      58351   33964

      84132   90140

      33795   94103

      30993   90836

      23660   42097

      56833   67799

      84296   30712

      27172   23612

      41123   64339

      70231   50742

      65636   35314

      24047   72155

      11869   60279

      44666   91711

      81159   79500

      75418   66073

      18982   51466

      54865   26946

      91042   14334

      21791   89073

      86188   22769

      92550   56504

      63942   48743

      55260   92181

      97155   69816

      44593   25507

      94520   37390

      16803   31162

      99284   94474

      10940   16434

      51986   32334

      94727   54184

      79564   22031

      67524   42754

      96074   54184

      32231   87988

      82182   11698

      36414   29276

      16281   28226

      21085   86754

      98238   43817

      53299   42097

      19359   93023

      46340   72842

      16355   51322

      70234   51466

      50841   13798

      81149   71891

      58011   53741

      80355   58080

      62858   56427

      25160   14155

      29287   26946

      82307   37276

      45594   10162

      52167   67510

      66037   18892

      16339   26946

      74466   59737

      68243   96568

      70410   82183

      18833   81661

      52684   20077

      99904   14334

      64936   32858

      67435   35314

      25168   51466

      48685   52200

      87833   43966

      16974   56000

      82852   91407

      54986   42097

      56112   49272

      64314   67342

      66607   54466

      61959   45397

      20294   14988

      22416   99280

      15287   22031

      42081   17788

      69276   85883

      19958   89174

      14337   24625

      43966   45494

      56772   64995

      37195   65787

      71264   60398

      45446   14947

      27319   54184

      71714   56504

      98898   54184

      15964   53181

      35923   34140

      92462   99284

      70969   21414

      60163   81686

      26799   45525

      57327   92053

      19339   51466

      56504   91566

      53113   44890

      78876   51902

      96200   89174

      82490   70725

      44316   36065

      71051   88682

      89880   22031

      27972   74592

      58858   41411

      31090   64119

      99124   40772

      77060   35314

      67020   25937

      28781   22031

      58289   99284

      89174   50742

      38323   63710

      42607   42383

      12543   89055

      23349   38990

      70058   59526

      15437   50742

      59862   98161

      30674   37596

      14449   18706

      42471   22031

      41124   32858

      77330   44890

      91002   14369

      12075   40772

      51581   75361

      17412   76932

      57784   38581

      78558   99284

      68326   18310

      33313   54184

      18353   52449

      91690   32831

      31047   33504

      41819   19604

      97743   65016

      81549   20645

      72159   33409

      38296   27139

      39901   97487

      26924   14334

      77429   52218

      90666   42785

      25384   60133

      61440   92089

      42764   30200

      26668   94108

      44171   93942

      96575   54184

      77777   25665

      65805   84579

      66448   48617

      66204   20645

      67751   33623

      48577   64139

      14034   62738

      82234   33385

      94447   92116

      21669   80984

      76758   43995

      16998   91461

      10808   14581

      91668   92007

      42411   65834

      83439   51090

      57286   56504

      26423   85951

      47687   90581

      75978   35314

      79027   96347

      13122   76475

      43173   64852

      33696   85951

      26050   53741

      29903   49202

      55762   67069

      22725   93128

      92748   37390

      75292   46134

      84901   83013

      82424   53741

      49756   10496

      99049   95224

      21549   42097

      45030   90831

      42687   43966

      24675   43966

      64330   78889

      26258   21120

      11886   18810

      10674   55709

      80983   36441

      73290   20645

      91623   50742

      68510   82209

      96050   27139

      29559   40772

      87297   79655

      16161   22031

      69453   73178

      79979   36506

      28404   82655

      95222   38807

      61168   81721

      39809   74305

      24627   16084

      48823   82344

      22852   44523

      67111   26946

      22838   97487

      19454   33107

      84203   54184

      97780   35714

      53203   27139

      89425   97487

      16614   18100

      19219   99284

      20569   82309

      48161   40982

      17213   31332

      70935   40772

      86566   78489

      24611   91868

      54359   97873

      95758   54184

      20532   73488

      49070   58755

      66014   54184

      69011   69128

      54241   99864

      61068   82574

      64852   26325

      60260   90900

      26299   10028

      58452   27139

      26134   22031

      84291   31012

      94851   23134

      90147   21120

      88435   46853

      26639   32875

      98570   64925

      66700   61354

      57045   31104

      30983   77622

      77419   62276

      61144   34934

      79828   81916

      38801   34632

      71141   73192

      30543   33571

      33787   93024

      93255   97304

      27104   93186

      43923   23461

      70069   73947

      23376   79180

      82293   51960

      37692   27139

      91328   69682

      47801   37390

      90140   50742

      40772   21893

      77630   62221

      26106   24286

      82191   79832

      29674   85951

      32858   35263

      57709   50742

      70834   74783

      34807   23868

      40646   93606

      17334   72970

      79995   39402

      22031   14334

      59137   40772

      23515   23407

      69665   59362

      78363   31953

      74969   85136

      51172   40772

      11229   98531

      86385   53822

      71049   73230

      90321   64852

      15381   24392

      17377   14334

      35732   26946

      92220   98405

      75143   22448

      93217   22031

      12345   80271

      66240   40772

      63460   31057

      14334   59725

      52629   82139

      67549   57710

      32589   21120

      40973   51466

      48086   64809

      62405   56431

      69385   65345

      73015   28247

      47116   35314

      89461   53741

      89978   37390

      45093   43966

      95580   20645

      90761   22983

      61770   37390

      91506   17021

      37148   58211

      73119   29135

      83826   16084

      11602   46435

      79485   43966

      51373   14334

      71333   50742

      41091   71891

      60255   11833

      70778   44890

      76205   26946

      67609   32858

      65250   83865

      81623   12242

      20105   17154

      53573   89174

      67594   55600

      30437   56504

      74127   98641

      43012   24286

      82823   90761

      87461   43966

      35267   22031

      99386   71177

      47451   23934

      51886   43966

      45000   98769

      93502   69179

      26127   42438

      61492   44506

      16858   20657

      77633   89949

      29357   86929

      91974   85951

      87979   14334

      12707   83865

      38824   83968

      46482   25275

      69244   35249

      10765   99284

      30619   53741

      30590   55600

      99292   85951

      28244   43966

      18494   85951

      91105   44506

      73930   26946

      30813   85951

      67308   94250

      54758   85951

      43568   33487

      15869   34016

      82010   27139

      33131   52450

      57985   12045

      93101   51270

      15835   64414

      24286   23491

      56944   11795

      47755   10809

      82704   75027

      93787   90140

      51466   20555

      51856   14334

      30252   44890

      44052   31936

      20691   68431

      57033   63455

      13300   43535

      33712   84239

      97080   51559

      91808   22031

      90652   22031

      64155   44890

      65463   40772

      44798   52819

      43936   44156

      18253   27360

      73289   89174

      71164   56212

      34646   20645

      42097   89582

      15990   55600

      56628   41785

      68636   89174

      67043   16186

      25652   34811

      87109   70679

      83865   43966

      54773   24922

      12778   27139

      41699   62346

      59666   17557

      94699   37390

      77535   27125

      19069   18324

      34344   51466

      24906   41267

      91226   76330

      58992   17879

      21084   37390

      95352   27424

      14593   14167

      57258   79480

      41550   98477

      59908   49327

      63930   56501

      52103   49712

      98431   19293

      64232   64852

      10638   14334

      52217   35314

      11797   27139

      12501   53741

      39316   73238

      62625   54184

      54433   27493

      23801   35877

      15292   50742

      28822   55302

      90501   18892

      52285   33785

      42385   21120

      34500   97487

      39882   93726

      12013   47966

      42691   18536

      57217   14334

      31320   58173

      90532   42331

      65216   54184

      78393   42097

      48315   29944

      37332   48362

      40774   98927

      16062   28783

      73931   39391

      54344   21435

      17846   56504

      61807   42097

      93272   97487'
    parts:
      part1: "--- Day 1: Historian Hysteria ---\nThe \nChief Historian\n is always\
        \ present for the big Christmas sleigh launch, but nobody has seen him in\
        \ months! Last anyone heard, he was visiting locations that are historically\
        \ significant to the North Pole; a group of Senior Historians has asked you\
        \ to accompany them as they check the places they think he was most likely\
        \ to visit.\n\n\nAs each location is checked, they will mark it on their list\
        \ with a \nstar\n. They figure the Chief Historian \nmust\n be in one of the\
        \ first fifty places they'll look, so in order to save Christmas, you need\
        \ to help them get \nfifty stars\n on their list before Santa takes off on\
        \ December 25th.\n\n\nCollect stars by solving puzzles.  Two puzzles will\
        \ be made available on each day in the Advent calendar; the second puzzle\
        \ is unlocked when you complete the first.  Each puzzle grants \none star\n\
        . Good luck!\n\n\nYou haven't even left yet and the group of Elvish Senior\
        \ Historians has already hit a problem: their list of locations to check is\
        \ currently \nempty\n. Eventually, someone decides that the best place to\
        \ check first would be the Chief Historian's office.\n\n\nUpon pouring into\
        \ the office, everyone confirms that the Chief Historian is indeed nowhere\
        \ to be found. Instead, the Elves discover an assortment of notes and lists\
        \ of historically significant locations! This seems to be the planning the\
        \ Chief Historian was doing before he left. Perhaps these notes can be used\
        \ to determine which locations to search?\n\n\nThroughout the Chief's office,\
        \ the historically significant locations are listed not by name but by a unique\
        \ number called the \nlocation ID\n. To make sure they don't miss anything,\
        \ The Historians split into two groups, each searching the office and trying\
        \ to create their own complete list of location IDs.\n\n\nThere's just one\
        \ problem: by holding the two lists up \nside by side\n (your puzzle input),\
        \ it quickly becomes clear that the lists aren't very similar. Maybe you can\
        \ help The Historians reconcile their lists?\n\n\nFor example:\n\n\n3   4\n\
        4   3\n2   5\n1   3\n3   9\n3   3\n\n\n\nMaybe the lists are only off by a\
        \ small amount! To find out, pair up the numbers and measure how far apart\
        \ they are. Pair up the \nsmallest number in the left list\n with the \nsmallest\
        \ number in the right list\n, then the \nsecond-smallest left number\n with\
        \ the \nsecond-smallest right number\n, and so on.\n\n\nWithin each pair,\
        \ figure out \nhow far apart\n the two numbers are; you'll need to \nadd up\
        \ all of those distances\n. For example, if you pair up a \n3\n from the left\
        \ list with a \n7\n from the right list, the distance apart is \n4\n; if you\
        \ pair up a \n9\n with a \n3\n, the distance apart is \n6\n.\n\n\nIn the example\
        \ list above, the pairs and distances would be as follows:\n\n\n\n\nThe smallest\
        \ number in the left list is \n1\n, and the smallest number in the right list\
        \ is \n3\n. The distance between them is \n2\n.\n\n\nThe second-smallest number\
        \ in the left list is \n2\n, and the second-smallest number in the right list\
        \ is another \n3\n. The distance between them is \n1\n.\n\n\nThe third-smallest\
        \ number in both lists is \n3\n, so the distance between them is \n0\n.\n\n\
        \nThe next numbers to pair up are \n3\n and \n4\n, a distance of \n1\n.\n\n\
        \nThe fifth-smallest numbers in each list are \n3\n and \n5\n, a distance\
        \ of \n2\n.\n\n\nFinally, the largest number in the left list is \n4\n, while\
        \ the largest number in the right list is \n9\n; these are a distance \n5\n\
        \ apart.\n\n\n\n\nTo find the \ntotal distance\n between the left list and\
        \ the right list, add up the distances between all of the pairs you found.\
        \ In the example above, this is \n2 + 1 + 0 + 1 + 2 + 5\n, a total distance\
        \ of \n11\n!\n\n\nYour actual left and right lists contain many location IDs.\
        \ \nWhat is the total distance between your lists?"
      part2: ''
    title: '--- Day 1: Historian Hysteria ---'
